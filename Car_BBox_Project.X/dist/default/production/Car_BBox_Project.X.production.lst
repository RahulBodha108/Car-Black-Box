

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Oct 08 16:55:57 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64   000000                     
    65                           ; Version 2.20
    66                           ; Generated 12/02/2020 GMT
    67                           ; 
    68                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F4580 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99   000000                     
   100                           	psect	idataBANK0
   101   0001EA                     __pidataBANK0:
   102                           	callstack 0
   103                           
   104                           ;initializer for _events
   105   0001EA  4F                 	db	79
   106   0001EB  4E                 	db	78
   107   0001EC  47                 	db	71
   108   0001ED  4E                 	db	78
   109   0001EE  47                 	db	71
   110   0001EF  52                 	db	82
   111   0001F0  47                 	db	71
   112   0001F1  31                 	db	49
   113   0001F2  47                 	db	71
   114   0001F3  32                 	db	50
   115   0001F4  47                 	db	71
   116   0001F5  33                 	db	51
   117   0001F6  47                 	db	71
   118   0001F7  34                 	db	52
   119   0001F8  47                 	db	71
   120   0001F9  35                 	db	53
   121   0001FA  43                 	db	67
   122   0001FB  20                 	db	32
   123                           
   124                           ;initializer for _m_password
   125   0001FC  31                 	db	49
   126   0001FD  31                 	db	49
   127   0001FE  30                 	db	48
   128   0001FF  30                 	db	48
   129   000200  00                 	db	0
   130                           
   131                           ;initializer for _attempts
   132   000201  0003               	dw	3
   133                           
   134                           ;initializer for read_switches@once
   135   000203  01                 	db	1
   136                           
   137                           	psect	idataBANK1
   138   000449                     __pidataBANK1:
   139                           	callstack 0
   140                           
   141                           ;initializer for menu@F10538
   142   000449  56                 	db	86
   143   00044A  69                 	db	105
   144   00044B  65                 	db	101
   145   00044C  77                 	db	119
   146   00044D  20                 	db	32
   147   00044E  6C                 	db	108
   148   00044F  6F                 	db	111
   149   000450  67                 	db	103
   150   000451  00                 	db	0
   151   000452  00                 	db	0
   152   000453  00                 	db	0
   153   000454  00                 	db	0
   154   000455  00                 	db	0
   155   000456  00                 	db	0
   156   000457  00                 	db	0
   157   000458  44                 	db	68
   158   000459  6F                 	db	111
   159   00045A  77                 	db	119
   160   00045B  6E                 	db	110
   161   00045C  6C                 	db	108
   162   00045D  6F                 	db	111
   163   00045E  61                 	db	97
   164   00045F  64                 	db	100
   165   000460  20                 	db	32
   166   000461  6C                 	db	108
   167   000462  6F                 	db	111
   168   000463  67                 	db	103
   169   000464  00                 	db	0
   170   000465  00                 	db	0
   171   000466  00                 	db	0
   172   000467  43                 	db	67
   173   000468  6C                 	db	108
   174   000469  65                 	db	101
   175   00046A  61                 	db	97
   176   00046B  72                 	db	114
   177   00046C  20                 	db	32
   178   00046D  6C                 	db	108
   179   00046E  6F                 	db	111
   180   00046F  67                 	db	103
   181   000470  00                 	db	0
   182   000471  00                 	db	0
   183   000472  00                 	db	0
   184   000473  00                 	db	0
   185   000474  00                 	db	0
   186   000475  00                 	db	0
   187   000476  53                 	db	83
   188   000477  65                 	db	101
   189   000478  74                 	db	116
   190   000479  20                 	db	32
   191   00047A  74                 	db	116
   192   00047B  69                 	db	105
   193   00047C  6D                 	db	109
   194   00047D  65                 	db	101
   195   00047E  00                 	db	0
   196   00047F  00                 	db	0
   197   000480  00                 	db	0
   198   000481  00                 	db	0
   199   000482  00                 	db	0
   200   000483  00                 	db	0
   201   000484  00                 	db	0
   202   000485  43                 	db	67
   203   000486  68                 	db	104
   204   000487  61                 	db	97
   205   000488  6E                 	db	110
   206   000489  67                 	db	103
   207   00048A  65                 	db	101
   208   00048B  20                 	db	32
   209   00048C  70                 	db	112
   210   00048D  61                 	db	97
   211   00048E  73                 	db	115
   212   00048F  73                 	db	115
   213   000490  77                 	db	119
   214   000491  6F                 	db	111
   215   000492  72                 	db	114
   216   000493  64                 	db	100
   217   000000                     _TXREG	set	4013
   218   000000                     _RCREG	set	4014
   219   000000                     _SPBRG	set	4015
   220   000000                     _SSPADD	set	4040
   221   000000                     _SSPCON1	set	4038
   222   000000                     _ADRESH	set	4036
   223   000000                     _ADRESL	set	4035
   224   000000                     _BRG16	set	32195
   225   000000                     _ACKSTAT	set	32302
   226   000000                     _CKE	set	32318
   227   000000                     _TRISD	set	3989
   228   000000                     _ADCON0	set	4034
   229   000000                     _RCIF	set	31989
   230   000000                     _RCIE	set	31981
   231   000000                     _TXIF	set	31988
   232   000000                     _RX9	set	32094
   233   000000                     _CREN	set	32092
   234   000000                     _BRGH	set	32098
   235   000000                     _SYNC	set	32100
   236   000000                     _TXEN	set	32101
   237   000000                     _TRISC6	set	31910
   238   000000                     _TRISC7	set	31911
   239   000000                     _RB4	set	31756
   240   000000                     _RB3	set	31755
   241   000000                     _RB2	set	31754
   242   000000                     _RB1	set	31753
   243   000000                     _RB7	set	31759
   244   000000                     _RB6	set	31758
   245   000000                     _ACKEN	set	32300
   246   000000                     _ACKDT	set	32301
   247   000000                     _RCEN	set	32299
   248   000000                     _RSEN	set	32297
   249   000000                     _PEN	set	32298
   250   000000                     _SEN	set	32296
   251   000000                     _SMP	set	32319
   252   000000                     _TRISC4	set	31908
   253   000000                     _TRISC3	set	31907
   254   000000                     _RD7	set	31775
   255   000000                     _RC0	set	31760
   256   000000                     _RC2	set	31762
   257   000000                     _GO	set	32273
   258   000000                     _ACQT0	set	32259
   259   000000                     _ACQT1	set	32260
   260   000000                     _ACQT2	set	32261
   261   000000                     _ADCS0	set	32256
   262   000000                     _ADCS1	set	32257
   263   000000                     _ADCS2	set	32258
   264   000000                     _PCFG0	set	32264
   265   000000                     _PCFG1	set	32265
   266   000000                     _PCFG2	set	32266
   267   000000                     _PCFG3	set	32267
   268   000000                     _VCFG0	set	32268
   269   000000                     _RB5	set	31757
   270   000000                     _RC1	set	31761
   271   000000                     _ADFM	set	32263
   272   000000                     _VCFG1	set	32269
   273   000000                     _ADON	set	32272
   274   000000                     _TRISB	set	3987
   275   000000                     _TRISC	set	3988
   276   000000                     _PORTD	set	3971
   277   000000                     _TRISD7	set	31919
   278   000000                     _TXIE	set	31980
   279   000000                     _SSPIF	set	31987
   280   000000                     _SSPBUF	set	4041
   281   000000                     _RBPU	set	32655
   282   000000                     _BCLIF	set	32011
   283   000000                     _SPEN	set	32095
   284   000000                     _TX9	set	32102
   285                           
   286                           	psect	mediumconst
   287   002EB6                     __pmediumconst:
   288                           	callstack 0
   289   002EB6  00                 	db	0
   290   002EB7                     STR_29:
   291   002EB7  23                 	db	35
   292   002EB8  20                 	db	32
   293   002EB9  54                 	db	84	;'T'
   294   002EBA  49                 	db	73	;'I'
   295   002EBB  4D                 	db	77	;'M'
   296   002EBC  45                 	db	69	;'E'
   297   002EBD  20                 	db	32
   298   002EBE  20                 	db	32
   299   002EBF  20                 	db	32
   300   002EC0  20                 	db	32
   301   002EC1  20                 	db	32
   302   002EC2  45                 	db	69	;'E'
   303   002EC3  56                 	db	86	;'V'
   304   002EC4  20                 	db	32
   305   002EC5  53                 	db	83	;'S'
   306   002EC6  50                 	db	80	;'P'
   307   002EC7  0A                 	db	10
   308   002EC8  0D                 	db	13
   309   002EC9  00                 	db	0
   310   002ECA                     STR_27:
   311   002ECA  23                 	db	35
   312   002ECB  20                 	db	32
   313   002ECC  54                 	db	84	;'T'
   314   002ECD  49                 	db	73	;'I'
   315   002ECE  4D                 	db	77	;'M'
   316   002ECF  45                 	db	69	;'E'
   317   002ED0  20                 	db	32
   318   002ED1  20                 	db	32
   319   002ED2  20                 	db	32
   320   002ED3  20                 	db	32
   321   002ED4  20                 	db	32
   322   002ED5  45                 	db	69	;'E'
   323   002ED6  56                 	db	86	;'V'
   324   002ED7  20                 	db	32
   325   002ED8  53                 	db	83	;'S'
   326   002ED9  50                 	db	80	;'P'
   327   002EDA  00                 	db	0
   328   002EDB                     STR_7:
   329   002EDB  54                 	db	84	;'T'
   330   002EDC  49                 	db	73	;'I'
   331   002EDD  4D                 	db	77	;'M'
   332   002EDE  45                 	db	69	;'E'
   333   002EDF  20                 	db	32
   334   002EE0  20                 	db	32
   335   002EE1  20                 	db	32
   336   002EE2  20                 	db	32
   337   002EE3  45                 	db	69	;'E'
   338   002EE4  56                 	db	86	;'V'
   339   002EE5  4E                 	db	78	;'N'
   340   002EE6  54                 	db	84	;'T'
   341   002EE7  20                 	db	32
   342   002EE8  20                 	db	32
   343   002EE9  53                 	db	83	;'S'
   344   002EEA  50                 	db	80	;'P'
   345   002EEB  00                 	db	0
   346   002EEC                     STR_3:
   347   002EEC  50                 	db	80	;'P'
   348   002EED  61                 	db	97	;'a'
   349   002EEE  73                 	db	115	;'s'
   350   002EEF  73                 	db	115	;'s'
   351   002EF0  77                 	db	119	;'w'
   352   002EF1  6F                 	db	111	;'o'
   353   002EF2  72                 	db	114	;'r'
   354   002EF3  64                 	db	100	;'d'
   355   002EF4  20                 	db	32
   356   002EF5  63                 	db	99	;'c'
   357   002EF6  68                 	db	104	;'h'
   358   002EF7  61                 	db	97	;'a'
   359   002EF8  6E                 	db	110	;'n'
   360   002EF9  67                 	db	103	;'g'
   361   002EFA  65                 	db	101	;'e'
   362   002EFB  64                 	db	100	;'d'
   363   002EFC  00                 	db	0
   364   002EFD                     STR_11:
   365   002EFD  41                 	db	65	;'A'
   366   002EFE  74                 	db	116	;'t'
   367   002EFF  74                 	db	116	;'t'
   368   002F00  65                 	db	101	;'e'
   369   002F01  6D                 	db	109	;'m'
   370   002F02  70                 	db	112	;'p'
   371   002F03  74                 	db	116	;'t'
   372   002F04  20                 	db	32
   373   002F05  4C                 	db	76	;'L'
   374   002F06  65                 	db	101	;'e'
   375   002F07  66                 	db	102	;'f'
   376   002F08  74                 	db	116	;'t'
   377   002F09  20                 	db	32
   378   002F0A  2D                 	db	45
   379   002F0B  20                 	db	32
   380   002F0C  00                 	db	0
   381   002F0D                     STR_31:
   382   002F0D  44                 	db	68	;'D'
   383   002F0E  6F                 	db	111	;'o'
   384   002F0F  77                 	db	119	;'w'
   385   002F10  6E                 	db	110	;'n'
   386   002F11  6C                 	db	108	;'l'
   387   002F12  6F                 	db	111	;'o'
   388   002F13  61                 	db	97	;'a'
   389   002F14  64                 	db	100	;'d'
   390   002F15  69                 	db	105	;'i'
   391   002F16  6E                 	db	110	;'n'
   392   002F17  67                 	db	103	;'g'
   393   002F18  2E                 	db	46
   394   002F19  2E                 	db	46
   395   002F1A  2E                 	db	46
   396   002F1B  00                 	db	0
   397   002F1C                     STR_15:
   398   002F1C  45                 	db	69	;'E'
   399   002F1D  4E                 	db	78	;'N'
   400   002F1E  54                 	db	84	;'T'
   401   002F1F  45                 	db	69	;'E'
   402   002F20  52                 	db	82	;'R'
   403   002F21  20                 	db	32
   404   002F22  50                 	db	80	;'P'
   405   002F23  41                 	db	65	;'A'
   406   002F24  53                 	db	83	;'S'
   407   002F25  53                 	db	83	;'S'
   408   002F26  57                 	db	87	;'W'
   409   002F27  4F                 	db	79	;'O'
   410   002F28  52                 	db	82	;'R'
   411   002F29  44                 	db	68	;'D'
   412   002F2A  00                 	db	0
   413   002F2B                     STR_10:
   414   002F2B  41                 	db	65	;'A'
   415   002F2C  74                 	db	116	;'t'
   416   002F2D  74                 	db	116	;'t'
   417   002F2E  65                 	db	101	;'e'
   418   002F2F  6D                 	db	109	;'m'
   419   002F30  70                 	db	112	;'p'
   420   002F31  74                 	db	116	;'t'
   421   002F32  20                 	db	32
   422   002F33  46                 	db	70	;'F'
   423   002F34  61                 	db	97	;'a'
   424   002F35  69                 	db	105	;'i'
   425   002F36  6C                 	db	108	;'l'
   426   002F37  65                 	db	101	;'e'
   427   002F38  64                 	db	100	;'d'
   428   002F39  00                 	db	0
   429   002F3A                     STR_8:
   430   002F3A  41                 	db	65	;'A'
   431   002F3B  63                 	db	99	;'c'
   432   002F3C  63                 	db	99	;'c'
   433   002F3D  65                 	db	101	;'e'
   434   002F3E  73                 	db	115	;'s'
   435   002F3F  73                 	db	115	;'s'
   436   002F40  20                 	db	32
   437   002F41  47                 	db	71	;'G'
   438   002F42  72                 	db	114	;'r'
   439   002F43  61                 	db	97	;'a'
   440   002F44  6E                 	db	110	;'n'
   441   002F45  74                 	db	116	;'t'
   442   002F46  65                 	db	101	;'e'
   443   002F47  64                 	db	100	;'d'
   444   002F48  00                 	db	0
   445   002F49                     STR_5:
   446   002F49  45                 	db	69	;'E'
   447   002F4A  4E                 	db	78	;'N'
   448   002F4B  54                 	db	84	;'T'
   449   002F4C  45                 	db	69	;'E'
   450   002F4D  52                 	db	82	;'R'
   451   002F4E  20                 	db	32
   452   002F4F  4E                 	db	78	;'N'
   453   002F50  45                 	db	69	;'E'
   454   002F51  57                 	db	87	;'W'
   455   002F52  20                 	db	32
   456   002F53  50                 	db	80	;'P'
   457   002F54  57                 	db	87	;'W'
   458   002F55  44                 	db	68	;'D'
   459   002F56  00                 	db	0
   460   002F57                     STR_1:
   461   002F57  50                 	db	80	;'P'
   462   002F58  61                 	db	97	;'a'
   463   002F59  73                 	db	115	;'s'
   464   002F5A  73                 	db	115	;'s'
   465   002F5B  77                 	db	119	;'w'
   466   002F5C  6F                 	db	111	;'o'
   467   002F5D  72                 	db	114	;'r'
   468   002F5E  64                 	db	100	;'d'
   469   002F5F  20                 	db	32
   470   002F60  64                 	db	100	;'d'
   471   002F61  6F                 	db	111	;'o'
   472   002F62  65                 	db	101	;'e'
   473   002F63  73                 	db	115	;'s'
   474   002F64  00                 	db	0
   475   002F65                     STR_16:
   476   002F65  54                 	db	84	;'T'
   477   002F66  69                 	db	105	;'i'
   478   002F67  6D                 	db	109	;'m'
   479   002F68  65                 	db	101	;'e'
   480   002F69  20                 	db	32
   481   002F6A  63                 	db	99	;'c'
   482   002F6B  68                 	db	104	;'h'
   483   002F6C  61                 	db	97	;'a'
   484   002F6D  6E                 	db	110	;'n'
   485   002F6E  67                 	db	103	;'g'
   486   002F6F  65                 	db	101	;'e'
   487   002F70  64                 	db	100	;'d'
   488   002F71  00                 	db	0
   489   002F72                     STR_17:
   490   002F72  73                 	db	115	;'s'
   491   002F73  75                 	db	117	;'u'
   492   002F74  63                 	db	99	;'c'
   493   002F75  63                 	db	99	;'c'
   494   002F76  65                 	db	101	;'e'
   495   002F77  73                 	db	115	;'s'
   496   002F78  73                 	db	115	;'s'
   497   002F79  66                 	db	102	;'f'
   498   002F7A  75                 	db	117	;'u'
   499   002F7B  6C                 	db	108	;'l'
   500   002F7C  6C                 	db	108	;'l'
   501   002F7D  79                 	db	121	;'y'
   502   002F7E  00                 	db	0
   503   002F7F                     STR_12:
   504   002F7F  54                 	db	84	;'T'
   505   002F80  72                 	db	114	;'r'
   506   002F81  79                 	db	121	;'y'
   507   002F82  20                 	db	32
   508   002F83  61                 	db	97	;'a'
   509   002F84  66                 	db	102	;'f'
   510   002F85  74                 	db	116	;'t'
   511   002F86  65                 	db	101	;'e'
   512   002F87  72                 	db	114	;'r'
   513   002F88  2E                 	db	46
   514   002F89  2E                 	db	46
   515   002F8A  2E                 	db	46
   516   002F8B  00                 	db	0
   517   002F8C                     STR_4:
   518   002F8C  53                 	db	83	;'S'
   519   002F8D  75                 	db	117	;'u'
   520   002F8E  63                 	db	99	;'c'
   521   002F8F  63                 	db	99	;'c'
   522   002F90  65                 	db	101	;'e'
   523   002F91  73                 	db	115	;'s'
   524   002F92  73                 	db	115	;'s'
   525   002F93  66                 	db	102	;'f'
   526   002F94  75                 	db	117	;'u'
   527   002F95  6C                 	db	108	;'l'
   528   002F96  6C                 	db	108	;'l'
   529   002F97  79                 	db	121	;'y'
   530   002F98  00                 	db	0
   531   002F99                     STR_28:
   532   002F99  4C                 	db	76	;'L'
   533   002F9A  6F                 	db	111	;'o'
   534   002F9B  67                 	db	103	;'g'
   535   002F9C  20                 	db	32
   536   002F9D  63                 	db	99	;'c'
   537   002F9E  6C                 	db	108	;'l'
   538   002F9F  65                 	db	101	;'e'
   539   002FA0  61                 	db	97	;'a'
   540   002FA1  72                 	db	114	;'r'
   541   002FA2  65                 	db	101	;'e'
   542   002FA3  64                 	db	100	;'d'
   543   002FA4  00                 	db	0
   544   002FA5                     STR_6:
   545   002FA5  43                 	db	67	;'C'
   546   002FA6  4F                 	db	79	;'O'
   547   002FA7  4E                 	db	78	;'N'
   548   002FA8  46                 	db	70	;'F'
   549   002FA9  49                 	db	73	;'I'
   550   002FAA  52                 	db	82	;'R'
   551   002FAB  4D                 	db	77	;'M'
   552   002FAC  20                 	db	32
   553   002FAD  50                 	db	80	;'P'
   554   002FAE  57                 	db	87	;'W'
   555   002FAF  44                 	db	68	;'D'
   556   002FB0  00                 	db	0
   557   002FB1                     STR_32:
   558   002FB1  41                 	db	65	;'A'
   559   002FB2  6C                 	db	108	;'l'
   560   002FB3  6C                 	db	108	;'l'
   561   002FB4  20                 	db	32
   562   002FB5  45                 	db	69	;'E'
   563   002FB6  76                 	db	118	;'v'
   564   002FB7  65                 	db	101	;'e'
   565   002FB8  6E                 	db	110	;'n'
   566   002FB9  74                 	db	116	;'t'
   567   002FBA  73                 	db	115	;'s'
   568   002FBB  00                 	db	0
   569   002FBC                     STR_26:
   570   002FBC  4C                 	db	76	;'L'
   571   002FBD  4F                 	db	79	;'O'
   572   002FBE  47                 	db	71	;'G'
   573   002FBF  20                 	db	32
   574   002FC0  45                 	db	69	;'E'
   575   002FC1  4D                 	db	77	;'M'
   576   002FC2  50                 	db	80	;'P'
   577   002FC3  54                 	db	84	;'T'
   578   002FC4  59                 	db	89	;'Y'
   579   002FC5  00                 	db	0
   580   002FC6                     STR_13:
   581   002FC6  52                 	db	82	;'R'
   582   002FC7  65                 	db	101	;'e'
   583   002FC8  74                 	db	116	;'t'
   584   002FC9  72                 	db	114	;'r'
   585   002FCA  79                 	db	121	;'y'
   586   002FCB  20                 	db	32
   587   002FCC  69                 	db	105	;'i'
   588   002FCD  6E                 	db	110	;'n'
   589   002FCE  20                 	db	32
   590   002FCF  00                 	db	0
   591   002FD0                     STR_2:
   592   002FD0  6E                 	db	110	;'n'
   593   002FD1  6F                 	db	111	;'o'
   594   002FD2  74                 	db	116	;'t'
   595   002FD3  20                 	db	32
   596   002FD4  6D                 	db	109	;'m'
   597   002FD5  61                 	db	97	;'a'
   598   002FD6  74                 	db	116	;'t'
   599   002FD7  63                 	db	99	;'c'
   600   002FD8  68                 	db	104	;'h'
   601   002FD9  00                 	db	0
   602   002FDA                     STR_20:
   603   002FDA  48                 	db	72	;'H'
   604   002FDB  48                 	db	72	;'H'
   605   002FDC  3A                 	db	58	;':'
   606   002FDD  4D                 	db	77	;'M'
   607   002FDE  4D                 	db	77	;'M'
   608   002FDF  3A                 	db	58	;':'
   609   002FE0  53                 	db	83	;'S'
   610   002FE1  53                 	db	83	;'S'
   611   002FE2  00                 	db	0
   612   002FE3                     STR_18:
   613   002FE3  54                 	db	84	;'T'
   614   002FE4  69                 	db	105	;'i'
   615   002FE5  6D                 	db	109	;'m'
   616   002FE6  65                 	db	101	;'e'
   617   002FE7  20                 	db	32
   618   002FE8  6E                 	db	110	;'n'
   619   002FE9  6F                 	db	111	;'o'
   620   002FEA  74                 	db	116	;'t'
   621   002FEB  00                 	db	0
   622   002FEC                     STR_9:
   623   002FEC  2A                 	db	42
   624   002FED  2A                 	db	42
   625   002FEE  2A                 	db	42
   626   002FEF  2A                 	db	42
   627   002FF0  00                 	db	0
   628   002FF1                     STR_14:
   629   002FF1  73                 	db	115	;'s'
   630   002FF2  65                 	db	101	;'e'
   631   002FF3  63                 	db	99	;'c'
   632   002FF4  73                 	db	115	;'s'
   633   002FF5  00                 	db	0
   634   002FF6                     STR_25:
   635   002FF6  41                 	db	65	;'A'
   636   002FF7  4D                 	db	77	;'M'
   637   002FF8  00                 	db	0
   638   002FF9                     STR_24:
   639   002FF9  50                 	db	80	;'P'
   640   002FFA  4D                 	db	77	;'M'
   641   002FFB  00                 	db	0
   642   002FFC                     STR_21:
   643   002FFC  20                 	db	32
   644   002FFD  20                 	db	32
   645   002FFE  00                 	db	0
   646   002FFF  00                 	db	0	; dummy byte at the end
   647   000000                     
   648                           ; #config settings
   649                           
   650                           	psect	cinit
   651   0004E8                     __pcinit:
   652                           	callstack 0
   653   0004E8                     start_initialization:
   654                           	callstack 0
   655   0004E8                     __initialization:
   656                           	callstack 0
   657                           
   658                           ; Initialize objects allocated to BANK1 (75 bytes)
   659                           ; load TBLPTR registers with __pidataBANK1
   660   0004E8  0E49               	movlw	low __pidataBANK1
   661   0004EA  6EF6               	movwf	tblptrl,c
   662   0004EC  0E04               	movlw	high __pidataBANK1
   663   0004EE  6EF7               	movwf	tblptrh,c
   664   0004F0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   665   0004F2  6EF8               	movwf	tblptru,c
   666   0004F4  EE01  F000         	lfsr	0,__pdataBANK1
   667   0004F8  EE10 F04B          	lfsr	1,75
   668   0004FC                     copy_data0:
   669   0004FC  0009               	tblrd		*+
   670   0004FE  CFF5 FFEE          	movff	tablat,postinc0
   671   000502  50E5               	movf	postdec1,w,c
   672   000504  50E1               	movf	fsr1l,w,c
   673   000506  E1FA               	bnz	copy_data0
   674                           
   675                           ; Initialize objects allocated to BANK0 (26 bytes)
   676                           ; load TBLPTR registers with __pidataBANK0
   677   000508  0EEA               	movlw	low __pidataBANK0
   678   00050A  6EF6               	movwf	tblptrl,c
   679   00050C  0E01               	movlw	high __pidataBANK0
   680   00050E  6EF7               	movwf	tblptrh,c
   681   000510  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   682   000512  6EF8               	movwf	tblptru,c
   683   000514  EE00  F0BC         	lfsr	0,__pdataBANK0
   684   000518  EE10 F01A          	lfsr	1,26
   685   00051C                     copy_data1:
   686   00051C  0009               	tblrd		*+
   687   00051E  CFF5 FFEE          	movff	tablat,postinc0
   688   000522  50E5               	movf	postdec1,w,c
   689   000524  50E1               	movf	fsr1l,w,c
   690   000526  E1FA               	bnz	copy_data1
   691                           
   692                           ; Clear objects allocated to BANK0 (92 bytes)
   693   000528  EE00  F060         	lfsr	0,__pbssBANK0
   694   00052C  0E5C               	movlw	92
   695   00052E                     clear_0:
   696   00052E  6AEE               	clrf	postinc0,c
   697   000530  06E8               	decf	wreg,f,c
   698   000532  E1FD               	bnz	clear_0
   699   000534                     end_of_initialization:
   700                           	callstack 0
   701   000534                     __end_of__initialization:
   702                           	callstack 0
   703   000534  0E00               	movlw	low (__Lmediumconst shr (0+16))
   704   000536  6EF8               	movwf	tblptru,c
   705   000538  0100               	movlb	0
   706   00053A  EFE0  F005         	goto	_main	;jump to C main() function
   707                           
   708                           	psect	bssBANK0
   709   000060                     __pbssBANK0:
   710                           	callstack 0
   711   000060                     change_pass@c_password:
   712                           	callstack 0
   713   000060                     	ds	5
   714   000065                     change_pass@n_password:
   715                           	callstack 0
   716   000065                     	ds	5
   717   00006A                     _clock_reg:
   718                           	callstack 0
   719   00006A                     	ds	3
   720   00006D                     view_log@vl_flag:
   721                           	callstack 0
   722   00006D                     	ds	2
   723   00006F                     set_time@tc_flag:
   724                           	callstack 0
   725   00006F                     	ds	2
   726   000071                     password@pa_flag:
   727                           	callstack 0
   728   000071                     	ds	2
   729   000073                     dashboard@c_flag:
   730                           	callstack 0
   731   000073                     	ds	2
   732   000075                     change_pass@success_flag:
   733                           	callstack 0
   734   000075                     	ds	2
   735   000077                     _view_index:
   736                           	callstack 0
   737   000077                     	ds	2
   738   000079                     _hr:
   739                           	callstack 0
   740   000079                     	ds	2
   741   00007B                     _secs:
   742                           	callstack 0
   743   00007B                     	ds	2
   744   00007D                     _min:
   745                           	callstack 0
   746   00007D                     	ds	2
   747   00007F                     _blink:
   748                           	callstack 0
   749   00007F                     	ds	2
   750   000081                     _field:
   751                           	callstack 0
   752   000081                     	ds	2
   753   000083                     _in_flag:
   754                           	callstack 0
   755   000083                     	ds	2
   756   000085                     _p_flag:
   757                           	callstack 0
   758   000085                     	ds	2
   759   000087                     _log_count:
   760                           	callstack 0
   761   000087                     	ds	2
   762   000089                     _log_index:
   763                           	callstack 0
   764   000089                     	ds	2
   765   00008B                     _sel:
   766                           	callstack 0
   767   00008B                     	ds	2
   768   00008D                     _L:
   769                           	callstack 0
   770   00008D                     	ds	2
   771   00008F                     _login_flag:
   772                           	callstack 0
   773   00008F                     	ds	2
   774   000091                     _success:
   775                           	callstack 0
   776   000091                     	ds	2
   777   000093                     _pass_index:
   778                           	callstack 0
   779   000093                     	ds	2
   780   000095                     _clear_dis:
   781                           	callstack 0
   782   000095                     	ds	2
   783   000097                     _timeout:
   784                           	callstack 0
   785   000097                     	ds	2
   786   000099                     _speed:
   787                           	callstack 0
   788   000099                     	ds	2
   789   00009B                     _event_index:
   790                           	callstack 0
   791   00009B                     	ds	2
   792   00009D                     _sec:
   793                           	callstack 0
   794   00009D                     	ds	2
   795   00009F                     _menu_f:
   796                           	callstack 0
   797   00009F                     	ds	2
   798   0000A1                     _main_f:
   799                           	callstack 0
   800   0000A1                     	ds	2
   801   0000A3                     read_switches@key:
   802                           	callstack 0
   803   0000A3                     	ds	1
   804   0000A4                     _view_event:
   805                           	callstack 0
   806   0000A4                     	ds	15
   807   0000B3                     _time:
   808                           	callstack 0
   809   0000B3                     	ds	9
   810                           
   811                           	psect	dataBANK0
   812   0000BC                     __pdataBANK0:
   813                           	callstack 0
   814   0000BC                     _events:
   815                           	callstack 0
   816   0000BC                     	ds	18
   817   0000CE                     _m_password:
   818                           	callstack 0
   819   0000CE                     	ds	5
   820   0000D3                     _attempts:
   821                           	callstack 0
   822   0000D3                     	ds	2
   823   0000D5                     read_switches@once:
   824                           	callstack 0
   825   0000D5                     	ds	1
   826                           
   827                           	psect	dataBANK1
   828   000100                     __pdataBANK1:
   829                           	callstack 0
   830   000100                     menu@F10538:
   831                           	callstack 0
   832   000100                     	ds	75
   833                           
   834                           	psect	cstackCOMRAM
   835   000001                     __pcstackCOMRAM:
   836                           	callstack 0
   837   000001                     ?_read_adc:
   838                           	callstack 0
   839   000001                     ?___lwmod:
   840                           	callstack 0
   841   000001                     ?___xxtofl:
   842                           	callstack 0
   843   000001                     clcd_write@control_bit:
   844                           	callstack 0
   845   000001                     i2c_write@data:
   846                           	callstack 0
   847   000001                     read_switches@detection:
   848                           	callstack 0
   849   000001                     putch@data:
   850                           	callstack 0
   851   000001                     long_short_press@t:
   852                           	callstack 0
   853   000001                     ___lwmod@dividend:
   854                           	callstack 0
   855   000001                     ___xxtofl@val:
   856                           	callstack 0
   857                           
   858                           ; 4 bytes @ 0x0
   859   000001                     	ds	1
   860   000002                     clcd_write@byte:
   861                           	callstack 0
   862   000002                     write_ds1307@data:
   863                           	callstack 0
   864   000002                     read_ds1307@address:
   865                           	callstack 0
   866   000002                     read_external_eeprom@address:
   867                           	callstack 0
   868   000002                     puts@data:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x1
   872   000002                     	ds	1
   873   000003                     ??_read_adc:
   874   000003                     ??_init_clcd:
   875   000003                     ??_long_short_press:
   876   000003                     write_ds1307@address:
   877                           	callstack 0
   878   000003                     read_ds1307@data:
   879                           	callstack 0
   880   000003                     read_external_eeprom@data:
   881                           	callstack 0
   882   000003                     ___lwmod@divisor:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x2
   886   000003                     	ds	1
   887   000004                     init_ds1307@dummy:
   888                           	callstack 0
   889                           
   890                           ; 1 bytes @ 0x3
   891   000004                     	ds	1
   892   000005                     ??___xxtofl:
   893   000005                     long_short_press@key:
   894                           	callstack 0
   895   000005                     ___lwmod@counter:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0x4
   899   000005                     	ds	1
   900   000006                     ?___wmul:
   901                           	callstack 0
   902   000006                     ?___lwdiv:
   903                           	callstack 0
   904   000006                     long_short_press@l:
   905                           	callstack 0
   906   000006                     ___wmul@multiplier:
   907                           	callstack 0
   908   000006                     ___lwdiv@dividend:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x5
   912   000006                     	ds	2
   913   000008                     read_adc@channel:
   914                           	callstack 0
   915   000008                     ___wmul@multiplicand:
   916                           	callstack 0
   917   000008                     ___lwdiv@divisor:
   918                           	callstack 0
   919                           
   920                           ; 2 bytes @ 0x7
   921   000008                     	ds	1
   922   000009                     ___xxtofl@sign:
   923                           	callstack 0
   924                           
   925                           ; 1 bytes @ 0x8
   926   000009                     	ds	1
   927   00000A                     ___xxtofl@exp:
   928                           	callstack 0
   929   00000A                     ___wmul@product:
   930                           	callstack 0
   931   00000A                     ___lwdiv@quotient:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x9
   935   00000A                     	ds	1
   936   00000B                     ___xxtofl@arg:
   937                           	callstack 0
   938                           
   939                           ; 4 bytes @ 0xA
   940   00000B                     	ds	1
   941   00000C                     ___lwdiv@counter:
   942                           	callstack 0
   943   00000C                     clcd_print@data:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0xB
   947   00000C                     	ds	1
   948   00000D                     clcd_putch@addr:
   949                           	callstack 0
   950   00000D                     write_external_eeprom@data:
   951                           	callstack 0
   952                           
   953                           ; 1 bytes @ 0xC
   954   00000D                     	ds	1
   955   00000E                     clcd_print@addr:
   956                           	callstack 0
   957   00000E                     clcd_putch@data:
   958                           	callstack 0
   959   00000E                     write_external_eeprom@i:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0xD
   963   00000E                     	ds	1
   964   00000F                     ??_download_log:
   965   00000F                     ?___fldiv:
   966                           	callstack 0
   967   00000F                     menu@t:
   968                           	callstack 0
   969   00000F                     view_log@t:
   970                           	callstack 0
   971   00000F                     ___fldiv@b:
   972                           	callstack 0
   973                           
   974                           ; 4 bytes @ 0xE
   975   00000F                     	ds	1
   976   000010                     ??_view_log:
   977   000010                     write_external_eeprom@address:
   978                           	callstack 0
   979   000010                     menu@menu:
   980                           	callstack 0
   981                           
   982                           ; 75 bytes @ 0xF
   983   000010                     	ds	1
   984   000011                     store_event@i:
   985                           	callstack 0
   986   000011                     _download_log$1547:
   987                           	callstack 0
   988   000011                     password@e_password:
   989                           	callstack 0
   990                           
   991                           ; 5 bytes @ 0x10
   992   000011                     	ds	1
   993   000012                     view_log@key:
   994                           	callstack 0
   995                           
   996                           ; 1 bytes @ 0x11
   997   000012                     	ds	1
   998   000013                     change_pass@key:
   999                           	callstack 0
  1000   000013                     set_time@t:
  1001                           	callstack 0
  1002   000013                     download_log@j:
  1003                           	callstack 0
  1004   000013                     _view_log$1546:
  1005                           	callstack 0
  1006   000013                     ___fldiv@a:
  1007                           	callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x12
  1010   000013                     	ds	1
  1011   000014                     ??_set_time:
  1012   000014                     change_pass@j:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x13
  1016   000014                     	ds	1
  1017   000015                     view_log@i:
  1018                           	callstack 0
  1019   000015                     download_log@i:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x14
  1023   000015                     	ds	1
  1024   000016                     password@key:
  1025                           	callstack 0
  1026   000016                     set_time@hr_reg:
  1027                           	callstack 0
  1028   000016                     change_pass@j_144:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x15
  1032   000016                     	ds	1
  1033   000017                     ??___fldiv:
  1034   000017                     set_time@min_reg:
  1035                           	callstack 0
  1036   000017                     password@j:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x16
  1040   000017                     	ds	1
  1041   000018                     set_time@sec_reg:
  1042                           	callstack 0
  1043                           
  1044                           ; 1 bytes @ 0x17
  1045   000018                     	ds	1
  1046   000019                     set_time@key:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x18
  1050   000019                     	ds	2
  1051   00001B                     ___fldiv@rem:
  1052                           	callstack 0
  1053                           
  1054                           ; 4 bytes @ 0x1A
  1055   00001B                     	ds	4
  1056   00001F                     ___fldiv@sign:
  1057                           	callstack 0
  1058                           
  1059                           ; 1 bytes @ 0x1E
  1060   00001F                     	ds	1
  1061   000020                     ___fldiv@new_exp:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x1F
  1065   000020                     	ds	2
  1066   000022                     ___fldiv@grs:
  1067                           	callstack 0
  1068                           
  1069                           ; 4 bytes @ 0x21
  1070   000022                     	ds	4
  1071   000026                     ___fldiv@bexp:
  1072                           	callstack 0
  1073                           
  1074                           ; 1 bytes @ 0x25
  1075   000026                     	ds	1
  1076   000027                     ___fldiv@aexp:
  1077                           	callstack 0
  1078                           
  1079                           ; 1 bytes @ 0x26
  1080   000027                     	ds	1
  1081   000028                     ?___fltol:
  1082                           	callstack 0
  1083   000028                     ___fltol@f1:
  1084                           	callstack 0
  1085                           
  1086                           ; 4 bytes @ 0x27
  1087   000028                     	ds	4
  1088   00002C                     ??___fltol:
  1089                           
  1090                           ; 1 bytes @ 0x2B
  1091   00002C                     	ds	4
  1092   000030                     ___fltol@sign1:
  1093                           	callstack 0
  1094                           
  1095                           ; 1 bytes @ 0x2F
  1096   000030                     	ds	1
  1097   000031                     ___fltol@exp1:
  1098                           	callstack 0
  1099                           
  1100                           ; 1 bytes @ 0x30
  1101   000031                     	ds	1
  1102   000032                     dashboard@adc_val:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x31
  1106   000032                     	ds	2
  1107   000034                     dashboard@key:
  1108                           	callstack 0
  1109                           
  1110                           ; 1 bytes @ 0x33
  1111   000034                     	ds	39
  1112   00005B                     menu@key:
  1113                           	callstack 0
  1114                           
  1115                           ; 1 bytes @ 0x5A
  1116   00005B                     	ds	1
  1117   00005C                     main@wait:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x5B
  1121   00005C                     	ds	2
  1122   00005E                     main@t:
  1123                           	callstack 0
  1124                           
  1125                           ; 1 bytes @ 0x5D
  1126   00005E                     	ds	1
  1127   00005F                     main@key:
  1128                           	callstack 0
  1129                           
  1130                           ; 1 bytes @ 0x5E
  1131   00005F                     	ds	1
  1132                           
  1133 ;;
  1134 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1135 ;;
  1136 ;; *************** function _main *****************
  1137 ;; Defined at:
  1138 ;;		line 23 in file "main.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  wait            2   91[COMRAM] unsigned int 
  1143 ;;  key             1   94[COMRAM] unsigned char 
  1144 ;;  t               1   93[COMRAM] unsigned char 
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      void 
  1147 ;; Registers used:
  1148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1154 ;;      Params:         0       0       0       0       0       0       0
  1155 ;;      Locals:         4       0       0       0       0       0       0
  1156 ;;      Temps:          0       0       0       0       0       0       0
  1157 ;;      Totals:         4       0       0       0       0       0       0
  1158 ;;Total ram usage:        4 bytes
  1159 ;; Hardware stack levels required when called: 6
  1160 ;; This function calls:
  1161 ;;		_change_pass
  1162 ;;		_clear_log
  1163 ;;		_dashboard
  1164 ;;		_download_log
  1165 ;;		_init_config
  1166 ;;		_long_short_press
  1167 ;;		_menu
  1168 ;;		_password
  1169 ;;		_read_switches
  1170 ;;		_set_time
  1171 ;;		_store_event
  1172 ;;		_view_log
  1173 ;; This function is called by:
  1174 ;;		Startup code after reset
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           	psect	text0
  1179   000BC0                     __ptext0:
  1180                           	callstack 0
  1181   000BC0                     _main:
  1182                           	callstack 25
  1183   000BC0                     
  1184                           ;main.c: 26:     init_config();
  1185   000BC0  EC20  F001         	call	_init_config	;wreg free
  1186   000BC4                     
  1187                           ;main.c: 27:     unsigned char key,t=0;
  1188   000BC4  0E00               	movlw	0
  1189   000BC6  6E5E               	movwf	main@t^0,c
  1190   000BC8                     
  1191                           ;main.c: 28:     unsigned int wait=0;
  1192   000BC8  0E00               	movlw	0
  1193   000BCA  6E5D               	movwf	(main@wait+1)^0,c
  1194   000BCC  0E00               	movlw	0
  1195   000BCE  6E5C               	movwf	main@wait^0,c
  1196   000BD0                     l5171:
  1197                           
  1198                           ;main.c: 30:     {;main.c: 32:         if(wait++==1000)
  1199   000BD0  4A5C               	infsnz	main@wait^0,f,c
  1200   000BD2  2A5D               	incf	(main@wait+1)^0,f,c
  1201   000BD4  0EE9               	movlw	233
  1202   000BD6  185C               	xorwf	main@wait^0,w,c
  1203   000BD8  E107               	bnz	u3841
  1204   000BDA  0E03               	movlw	3
  1205   000BDC  185D               	xorwf	(main@wait+1)^0,w,c
  1206   000BDE  A4D8               	btfss	status,2,c
  1207   000BE0  EFF4  F005         	goto	u3841
  1208   000BE4  EFF6  F005         	goto	u3840
  1209   000BE8                     u3841:
  1210   000BE8  EF03  F006         	goto	l5181
  1211   000BEC                     u3840:
  1212   000BEC                     
  1213                           ;main.c: 33:         {;main.c: 34:             wait=0;
  1214   000BEC  0E00               	movlw	0
  1215   000BEE  6E5D               	movwf	(main@wait+1)^0,c
  1216   000BF0  0E00               	movlw	0
  1217   000BF2  6E5C               	movwf	main@wait^0,c
  1218   000BF4                     
  1219                           ;main.c: 35:             blink=~blink;
  1220   000BF4  0100               	movlb	0	; () banked
  1221   000BF6  1F7F               	comf	_blink& (0+255),f,b
  1222   000BF8  1F80               	comf	(_blink+1)& (0+255),f,b
  1223   000BFA                     
  1224                           ; BSR set to: 0
  1225                           ;main.c: 36:             sec--;
  1226   000BFA  079D               	decf	_sec& (0+255),f,b
  1227   000BFC  A0D8               	btfss	status,0,c
  1228   000BFE  079E               	decf	(_sec+1)& (0+255),f,b
  1229   000C00                     
  1230                           ; BSR set to: 0
  1231                           ;main.c: 37:             timeout--;
  1232   000C00  0797               	decf	_timeout& (0+255),f,b
  1233   000C02  A0D8               	btfss	status,0,c
  1234   000C04  0798               	decf	(_timeout+1)& (0+255),f,b
  1235   000C06                     l5181:
  1236                           
  1237                           ;main.c: 39:         if(main_f!=2 && main_f!=3)
  1238   000C06  0E02               	movlw	2
  1239   000C08  0100               	movlb	0	; () banked
  1240   000C0A  19A1               	xorwf	_main_f& (0+255),w,b
  1241   000C0C  11A2               	iorwf	(_main_f+1)& (0+255),w,b
  1242   000C0E  B4D8               	btfsc	status,2,c
  1243   000C10  EF0C  F006         	goto	u3851
  1244   000C14  EF0E  F006         	goto	u3850
  1245   000C18                     u3851:
  1246   000C18  EF1E  F006         	goto	l5187
  1247   000C1C                     u3850:
  1248   000C1C                     
  1249                           ; BSR set to: 0
  1250   000C1C  0E03               	movlw	3
  1251   000C1E  19A1               	xorwf	_main_f& (0+255),w,b
  1252   000C20  11A2               	iorwf	(_main_f+1)& (0+255),w,b
  1253   000C22  B4D8               	btfsc	status,2,c
  1254   000C24  EF16  F006         	goto	u3861
  1255   000C28  EF18  F006         	goto	u3860
  1256   000C2C                     u3861:
  1257   000C2C  EF1E  F006         	goto	l5187
  1258   000C30                     u3860:
  1259   000C30                     
  1260                           ; BSR set to: 0
  1261                           ;main.c: 40:             key=read_switches(1);
  1262   000C30  0E01               	movlw	1
  1263   000C32  EC70  F003         	call	_read_switches
  1264   000C36  6E5F               	movwf	main@key^0,c
  1265   000C38  EF25  F006         	goto	l5189
  1266   000C3C                     l5187:
  1267                           
  1268                           ; BSR set to: 0
  1269                           ;main.c: 42:             key=long_short_press(&t);
  1270   000C3C  0E5E               	movlw	low main@t
  1271   000C3E  6E01               	movwf	long_short_press@t^0,c
  1272   000C40  0E00               	movlw	high main@t
  1273   000C42  6E02               	movwf	(long_short_press@t+1)^0,c
  1274   000C44  EC36  F004         	call	_long_short_press	;wreg free
  1275   000C48  6E5F               	movwf	main@key^0,c
  1276   000C4A                     l5189:
  1277                           
  1278                           ;main.c: 43:         if(main_f == 0)
  1279   000C4A  0100               	movlb	0	; () banked
  1280   000C4C  51A1               	movf	_main_f& (0+255),w,b
  1281   000C4E  11A2               	iorwf	(_main_f+1)& (0+255),w,b
  1282   000C50  A4D8               	btfss	status,2,c
  1283   000C52  EF2D  F006         	goto	u3871
  1284   000C56  EF2F  F006         	goto	u3870
  1285   000C5A                     u3871:
  1286   000C5A  EF34  F006         	goto	l5193
  1287   000C5E                     u3870:
  1288   000C5E                     
  1289                           ; BSR set to: 0
  1290                           ;main.c: 44:         {;main.c: 45:             dashboard(key);
  1291   000C5E  505F               	movf	main@key^0,w,c
  1292   000C60  EC74  F009         	call	_dashboard
  1293                           
  1294                           ;main.c: 46:         }
  1295   000C64  EFE8  F005         	goto	l5171
  1296   000C68                     l5193:
  1297                           
  1298                           ; BSR set to: 0
  1299   000C68  05A1               	decf	_main_f& (0+255),w,b
  1300   000C6A  11A2               	iorwf	(_main_f+1)& (0+255),w,b
  1301   000C6C  A4D8               	btfss	status,2,c
  1302   000C6E  EF3B  F006         	goto	u3881
  1303   000C72  EF3D  F006         	goto	u3880
  1304   000C76                     u3881:
  1305   000C76  EF42  F006         	goto	l5197
  1306   000C7A                     u3880:
  1307   000C7A                     
  1308                           ; BSR set to: 0
  1309                           ;main.c: 48:         {;main.c: 49:             password(key);
  1310   000C7A  505F               	movf	main@key^0,w,c
  1311   000C7C  ECF9  F00D         	call	_password
  1312                           
  1313                           ;main.c: 50:         }
  1314   000C80  EFE8  F005         	goto	l5171
  1315   000C84                     l5197:
  1316                           
  1317                           ; BSR set to: 0
  1318   000C84  0E02               	movlw	2
  1319   000C86  19A1               	xorwf	_main_f& (0+255),w,b
  1320   000C88  11A2               	iorwf	(_main_f+1)& (0+255),w,b
  1321   000C8A  A4D8               	btfss	status,2,c
  1322   000C8C  EF4A  F006         	goto	u3891
  1323   000C90  EF4C  F006         	goto	u3890
  1324   000C94                     u3891:
  1325   000C94  EF53  F006         	goto	l5201
  1326   000C98                     u3890:
  1327   000C98                     
  1328                           ; BSR set to: 0
  1329                           ;main.c: 52:         {;main.c: 53:             menu(key,t);
  1330   000C98  C05E  F00F         	movff	main@t,menu@t
  1331   000C9C  505F               	movf	main@key^0,w,c
  1332   000C9E  EC74  F008         	call	_menu
  1333                           
  1334                           ;main.c: 54:         }
  1335   000CA2  EFE8  F005         	goto	l5171
  1336   000CA6                     l5201:
  1337                           
  1338                           ; BSR set to: 0
  1339   000CA6  0E03               	movlw	3
  1340   000CA8  19A1               	xorwf	_main_f& (0+255),w,b
  1341   000CAA  11A2               	iorwf	(_main_f+1)& (0+255),w,b
  1342   000CAC  A4D8               	btfss	status,2,c
  1343   000CAE  EF5B  F006         	goto	u3901
  1344   000CB2  EF5D  F006         	goto	u3900
  1345   000CB6                     u3901:
  1346   000CB6  EFE8  F005         	goto	l5171
  1347   000CBA                     u3900:
  1348   000CBA                     
  1349                           ; BSR set to: 0
  1350                           ;main.c: 56:         {;main.c: 57:             if(menu_f == 0)
  1351   000CBA  519F               	movf	_menu_f& (0+255),w,b
  1352   000CBC  11A0               	iorwf	(_menu_f+1)& (0+255),w,b
  1353   000CBE  A4D8               	btfss	status,2,c
  1354   000CC0  EF64  F006         	goto	u3911
  1355   000CC4  EF66  F006         	goto	u3910
  1356   000CC8                     u3911:
  1357   000CC8  EF6D  F006         	goto	l5207
  1358   000CCC                     u3910:
  1359   000CCC                     
  1360                           ; BSR set to: 0
  1361                           ;main.c: 58:             {;main.c: 59:                 view_log(key,t);
  1362   000CCC  C05E  F00F         	movff	main@t,view_log@t
  1363   000CD0  505F               	movf	main@key^0,w,c
  1364   000CD2  ECD1  F011         	call	_view_log
  1365                           
  1366                           ;main.c: 62:             }
  1367   000CD6  EFE8  F005         	goto	l5171
  1368   000CDA                     l5207:
  1369                           
  1370                           ; BSR set to: 0
  1371   000CDA  059F               	decf	_menu_f& (0+255),w,b
  1372   000CDC  11A0               	iorwf	(_menu_f+1)& (0+255),w,b
  1373   000CDE  A4D8               	btfss	status,2,c
  1374   000CE0  EF74  F006         	goto	u3921
  1375   000CE4  EF76  F006         	goto	u3920
  1376   000CE8                     u3921:
  1377   000CE8  EF7A  F006         	goto	l5211
  1378   000CEC                     u3920:
  1379   000CEC                     
  1380                           ; BSR set to: 0
  1381                           ;main.c: 64:             {;main.c: 65:                 download_log();
  1382   000CEC  EC7F  F00A         	call	_download_log	;wreg free
  1383                           
  1384                           ;main.c: 66:             }
  1385   000CF0  EFE8  F005         	goto	l5171
  1386   000CF4                     l5211:
  1387                           
  1388                           ; BSR set to: 0
  1389   000CF4  0E02               	movlw	2
  1390   000CF6  199F               	xorwf	_menu_f& (0+255),w,b
  1391   000CF8  11A0               	iorwf	(_menu_f+1)& (0+255),w,b
  1392   000CFA  A4D8               	btfss	status,2,c
  1393   000CFC  EF82  F006         	goto	u3931
  1394   000D00  EF84  F006         	goto	u3930
  1395   000D04                     u3931:
  1396   000D04  EF8A  F006         	goto	l5217
  1397   000D08                     u3930:
  1398   000D08                     
  1399                           ; BSR set to: 0
  1400                           ;main.c: 68:             {;main.c: 69:                 clear_log();
  1401   000D08  ECEF  F003         	call	_clear_log	;wreg free
  1402   000D0C                     
  1403                           ;main.c: 70:         store_event();
  1404   000D0C  EC88  F007         	call	_store_event	;wreg free
  1405                           
  1406                           ;main.c: 71:             }
  1407   000D10  EFE8  F005         	goto	l5171
  1408   000D14                     l5217:
  1409                           
  1410                           ; BSR set to: 0
  1411   000D14  0E03               	movlw	3
  1412   000D16  199F               	xorwf	_menu_f& (0+255),w,b
  1413   000D18  11A0               	iorwf	(_menu_f+1)& (0+255),w,b
  1414   000D1A  A4D8               	btfss	status,2,c
  1415   000D1C  EF92  F006         	goto	u3941
  1416   000D20  EF94  F006         	goto	u3940
  1417   000D24                     u3941:
  1418   000D24  EF9B  F006         	goto	l5221
  1419   000D28                     u3940:
  1420   000D28                     
  1421                           ; BSR set to: 0
  1422                           ;main.c: 73:             {;main.c: 74:                 set_time(key,t);
  1423   000D28  C05E  F013         	movff	main@t,set_time@t
  1424   000D2C  505F               	movf	main@key^0,w,c
  1425   000D2E  ECE0  F013         	call	_set_time
  1426                           
  1427                           ;main.c: 76:             }
  1428   000D32  EFE8  F005         	goto	l5171
  1429   000D36                     l5221:
  1430                           
  1431                           ; BSR set to: 0
  1432   000D36  0E04               	movlw	4
  1433   000D38  199F               	xorwf	_menu_f& (0+255),w,b
  1434   000D3A  11A0               	iorwf	(_menu_f+1)& (0+255),w,b
  1435   000D3C  A4D8               	btfss	status,2,c
  1436   000D3E  EFA3  F006         	goto	u3951
  1437   000D42  EFA5  F006         	goto	u3950
  1438   000D46                     u3951:
  1439   000D46  EFAA  F006         	goto	l846
  1440   000D4A                     u3950:
  1441   000D4A                     
  1442                           ; BSR set to: 0
  1443                           ;main.c: 78:             {;main.c: 79:                 change_pass(key);
  1444   000D4A  505F               	movf	main@key^0,w,c
  1445   000D4C  ECD6  F00F         	call	_change_pass
  1446   000D50  EFE8  F005         	goto	l5171
  1447   000D54                     l846:
  1448                           
  1449                           ; BSR set to: 0
  1450   000D54  EFE8  F005         	goto	l5171
  1451   000D58  EF00  F000         	goto	start
  1452   000D5C                     __end_of_main:
  1453                           	callstack 0
  1454                           
  1455 ;; *************** function _view_log *****************
  1456 ;; Defined at:
  1457 ;;		line 2 in file "view_log.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;  key             1    wreg     unsigned char 
  1460 ;;  t               1   14[COMRAM] unsigned char 
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;  key             1   17[COMRAM] unsigned char 
  1463 ;;  i               2   20[COMRAM] int 
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1473 ;;      Params:         1       0       0       0       0       0       0
  1474 ;;      Locals:         5       0       0       0       0       0       0
  1475 ;;      Temps:          2       0       0       0       0       0       0
  1476 ;;      Totals:         8       0       0       0       0       0       0
  1477 ;;Total ram usage:        8 bytes
  1478 ;; Hardware stack levels used: 1
  1479 ;; Hardware stack levels required when called: 4
  1480 ;; This function calls:
  1481 ;;		___lwmod
  1482 ;;		___wmul
  1483 ;;		_clcd_print
  1484 ;;		_clcd_putch
  1485 ;;		_clcd_write
  1486 ;;		_read_external_eeprom
  1487 ;; This function is called by:
  1488 ;;		_main
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           	psect	text1
  1493   0023A2                     __ptext1:
  1494                           	callstack 0
  1495   0023A2                     _view_log:
  1496                           	callstack 26
  1497                           
  1498                           ; BSR set to: 0
  1499                           ;incstack = 0
  1500                           ;view_log@key stored from wreg
  1501   0023A2  6E12               	movwf	view_log@key^0,c
  1502   0023A4                     
  1503                           ;view_log.c: 2: void view_log(unsigned char key,unsigned char t);view_log.c: 3: {;view_l
      +                          og.c: 4:     static int vl_flag=0;;view_log.c: 5:     if(vl_flag==1)
  1504   0023A4  0100               	movlb	0	; () banked
  1505   0023A6  056D               	decf	view_log@vl_flag& (0+255),w,b
  1506   0023A8  116E               	iorwf	(view_log@vl_flag+1)& (0+255),w,b
  1507   0023AA  A4D8               	btfss	status,2,c
  1508   0023AC  EFDA  F011         	goto	u3461
  1509   0023B0  EFDC  F011         	goto	u3460
  1510   0023B4                     u3461:
  1511   0023B4  EFFF  F011         	goto	l4843
  1512   0023B8                     u3460:
  1513   0023B8                     
  1514                           ; BSR set to: 0
  1515                           ;view_log.c: 6:     {;view_log.c: 7:         clcd_print("LOG EMPTY",(0x80 + (0)));
  1516   0023B8  0EBC               	movlw	low STR_26
  1517   0023BA  6E0C               	movwf	clcd_print@data^0,c
  1518   0023BC  0E2F               	movlw	high STR_26
  1519   0023BE  6E0D               	movwf	(clcd_print@data+1)^0,c
  1520   0023C0  0E80               	movlw	128
  1521   0023C2  6E0E               	movwf	clcd_print@addr^0,c
  1522   0023C4  EC00  F003         	call	_clcd_print	;wreg free
  1523   0023C8                     
  1524                           ;view_log.c: 8:         if(timeout==0)
  1525   0023C8  0100               	movlb	0	; () banked
  1526   0023CA  5197               	movf	_timeout& (0+255),w,b
  1527   0023CC  1198               	iorwf	(_timeout+1)& (0+255),w,b
  1528   0023CE  A4D8               	btfss	status,2,c
  1529   0023D0  EFEC  F011         	goto	u3471
  1530   0023D4  EFEE  F011         	goto	u3470
  1531   0023D8                     u3471:
  1532   0023D8  EFDF  F013         	goto	l1565
  1533   0023DC                     u3470:
  1534   0023DC                     
  1535                           ; BSR set to: 0
  1536                           ;view_log.c: 9:         {;view_log.c: 10:             main_f=2;
  1537   0023DC  0E00               	movlw	0
  1538   0023DE  6FA2               	movwf	(_main_f+1)& (0+255),b
  1539   0023E0  0E02               	movlw	2
  1540   0023E2  6FA1               	movwf	_main_f& (0+255),b
  1541                           
  1542                           ;view_log.c: 11:             vl_flag=0;
  1543   0023E4  0E00               	movlw	0
  1544   0023E6  6F6E               	movwf	(view_log@vl_flag+1)& (0+255),b
  1545   0023E8  0E00               	movlw	0
  1546   0023EA  6F6D               	movwf	view_log@vl_flag& (0+255),b
  1547   0023EC                     
  1548                           ; BSR set to: 0
  1549                           ;view_log.c: 12:             clcd_write(0x01, 0);
  1550   0023EC  0E00               	movlw	0
  1551   0023EE  6E01               	movwf	clcd_write@control_bit^0,c
  1552   0023F0  0E01               	movlw	1
  1553   0023F2  EC7D  F001         	call	_clcd_write
  1554   0023F6  EFDF  F013         	goto	l1565
  1555   0023FA                     l4841:
  1556                           
  1557                           ;view_log.c: 14:         return;
  1558   0023FA  EFDF  F013         	goto	l1565
  1559   0023FE                     l4843:
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;view_log.c: 16:     if(log_count==0)
  1563   0023FE  5187               	movf	_log_count& (0+255),w,b
  1564   002400  1188               	iorwf	(_log_count+1)& (0+255),w,b
  1565   002402  A4D8               	btfss	status,2,c
  1566   002404  EF06  F012         	goto	u3481
  1567   002408  EF08  F012         	goto	u3480
  1568   00240C                     u3481:
  1569   00240C  EF17  F012         	goto	l4851
  1570   002410                     u3480:
  1571   002410                     
  1572                           ; BSR set to: 0
  1573                           ;view_log.c: 17:     {;view_log.c: 18:         vl_flag=1;
  1574   002410  0E00               	movlw	0
  1575   002412  6F6E               	movwf	(view_log@vl_flag+1)& (0+255),b
  1576   002414  0E01               	movlw	1
  1577   002416  6F6D               	movwf	view_log@vl_flag& (0+255),b
  1578                           
  1579                           ;view_log.c: 19:         timeout=2;
  1580   002418  0E00               	movlw	0
  1581   00241A  6F98               	movwf	(_timeout+1)& (0+255),b
  1582   00241C  0E02               	movlw	2
  1583   00241E  6F97               	movwf	_timeout& (0+255),b
  1584   002420                     
  1585                           ; BSR set to: 0
  1586                           ;view_log.c: 20:         clcd_write(0x01, 0);
  1587   002420  0E00               	movlw	0
  1588   002422  6E01               	movwf	clcd_write@control_bit^0,c
  1589   002424  0E01               	movlw	1
  1590   002426  EC7D  F001         	call	_clcd_write
  1591   00242A  EFDF  F013         	goto	l1565
  1592   00242E                     l4851:
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;view_log.c: 23:     if(in_flag==0)
  1596   00242E  5183               	movf	_in_flag& (0+255),w,b
  1597   002430  1184               	iorwf	(_in_flag+1)& (0+255),w,b
  1598   002432  A4D8               	btfss	status,2,c
  1599   002434  EF1E  F012         	goto	u3491
  1600   002438  EF20  F012         	goto	u3490
  1601   00243C                     u3491:
  1602   00243C  EF2E  F012         	goto	l4859
  1603   002440                     u3490:
  1604   002440                     
  1605                           ; BSR set to: 0
  1606                           ;view_log.c: 24:     {;view_log.c: 25:         clcd_write(0x01, 0);
  1607   002440  0E00               	movlw	0
  1608   002442  6E01               	movwf	clcd_write@control_bit^0,c
  1609   002444  0E01               	movlw	1
  1610   002446  EC7D  F001         	call	_clcd_write
  1611   00244A                     
  1612                           ;view_log.c: 26:         view_index=0;
  1613   00244A  0E00               	movlw	0
  1614   00244C  0100               	movlb	0	; () banked
  1615   00244E  6F78               	movwf	(_view_index+1)& (0+255),b
  1616   002450  0E00               	movlw	0
  1617   002452  6F77               	movwf	_view_index& (0+255),b
  1618   002454                     
  1619                           ; BSR set to: 0
  1620                           ;view_log.c: 27:         in_flag=1;
  1621   002454  0E00               	movlw	0
  1622   002456  6F84               	movwf	(_in_flag+1)& (0+255),b
  1623   002458  0E01               	movlw	1
  1624   00245A  6F83               	movwf	_in_flag& (0+255),b
  1625   00245C                     l4859:
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;view_log.c: 29:     clcd_print("# TIME     EV SP",(0x80 + (0)));
  1629   00245C  0ECA               	movlw	low STR_27
  1630   00245E  6E0C               	movwf	clcd_print@data^0,c
  1631   002460  0E2E               	movlw	high STR_27
  1632   002462  6E0D               	movwf	(clcd_print@data+1)^0,c
  1633   002464  0E80               	movlw	128
  1634   002466  6E0E               	movwf	clcd_print@addr^0,c
  1635   002468  EC00  F003         	call	_clcd_print	;wreg free
  1636   00246C                     
  1637                           ;view_log.c: 30:     int i;;view_log.c: 31:     for(i=0;i<8;i++)
  1638   00246C  0E00               	movlw	0
  1639   00246E  6E16               	movwf	(view_log@i+1)^0,c
  1640   002470  0E00               	movlw	0
  1641   002472  6E15               	movwf	view_log@i^0,c
  1642   002474                     l4867:
  1643                           
  1644                           ;view_log.c: 32:         view_event[i]=read_external_eeprom((unsigned char)(i+(((log_ind
      +                          ex+9-view_index)%10)*12)%0x78));
  1645   002474  0E00               	movlw	0
  1646   002476  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1647   002478  0E0A               	movlw	10
  1648   00247A  6E03               	movwf	___lwmod@divisor^0,c
  1649   00247C  0100               	movlb	0	; () banked
  1650   00247E  5177               	movf	_view_index& (0+255),w,b
  1651   002480  5D89               	subwf	_log_index& (0+255),w,b
  1652   002482  6E10               	movwf	??_view_log^0,c
  1653   002484  5178               	movf	(_view_index+1)& (0+255),w,b
  1654   002486  598A               	subwfb	(_log_index+1)& (0+255),w,b
  1655   002488  6E11               	movwf	(??_view_log+1)^0,c
  1656   00248A  0E09               	movlw	9
  1657   00248C  2410               	addwf	??_view_log^0,w,c
  1658   00248E  6E01               	movwf	___lwmod@dividend^0,c
  1659   002490  0E00               	movlw	0
  1660   002492  2011               	addwfc	(??_view_log+1)^0,w,c
  1661   002494  6E02               	movwf	(___lwmod@dividend+1)^0,c
  1662   002496  ECCE  F002         	call	___lwmod	;wreg free
  1663   00249A  C001  F006         	movff	?___lwmod,___wmul@multiplier
  1664   00249E  C002  F007         	movff	?___lwmod+1,___wmul@multiplier+1
  1665   0024A2  0E00               	movlw	0
  1666   0024A4  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  1667   0024A6  0E0C               	movlw	12
  1668   0024A8  6E08               	movwf	___wmul@multiplicand^0,c
  1669   0024AA  EC40  F001         	call	___wmul	;wreg free
  1670   0024AE  C006  F013         	movff	?___wmul,_view_log$1546
  1671   0024B2  C007  F014         	movff	?___wmul+1,_view_log$1546+1
  1672   0024B6                     
  1673                           ;view_log.c: 32:         view_event[i]=read_external_eeprom((unsigned char)(i+(((log_ind
      +                          ex+9-view_index)%10)*12)%0x78));
  1674   0024B6  0EA4               	movlw	low _view_event
  1675   0024B8  2415               	addwf	view_log@i^0,w,c
  1676   0024BA  6ED9               	movwf	fsr2l,c
  1677   0024BC  0E00               	movlw	high _view_event
  1678   0024BE  2016               	addwfc	(view_log@i+1)^0,w,c
  1679   0024C0  6EDA               	movwf	fsr2h,c
  1680   0024C2  C013  F001         	movff	_view_log$1546,___lwmod@dividend
  1681   0024C6  C014  F002         	movff	_view_log$1546+1,___lwmod@dividend+1
  1682   0024CA  0E00               	movlw	0
  1683   0024CC  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1684   0024CE  0E78               	movlw	120
  1685   0024D0  6E03               	movwf	___lwmod@divisor^0,c
  1686   0024D2  ECCE  F002         	call	___lwmod	;wreg free
  1687   0024D6  5001               	movf	?___lwmod^0,w,c
  1688   0024D8  2415               	addwf	view_log@i^0,w,c
  1689   0024DA  EC68  F001         	call	_read_external_eeprom
  1690   0024DE  6EDF               	movwf	indf2,c
  1691   0024E0  4A15               	infsnz	view_log@i^0,f,c
  1692   0024E2  2A16               	incf	(view_log@i+1)^0,f,c
  1693   0024E4  BE16               	btfsc	(view_log@i+1)^0,7,c
  1694   0024E6  EF7E  F012         	goto	u3501
  1695   0024EA  5016               	movf	(view_log@i+1)^0,w,c
  1696   0024EC  E109               	bnz	u3500
  1697   0024EE  0E08               	movlw	8
  1698   0024F0  5C15               	subwf	view_log@i^0,w,c
  1699   0024F2  A0D8               	btfss	status,0,c
  1700   0024F4  EF7E  F012         	goto	u3501
  1701   0024F8  EF80  F012         	goto	u3500
  1702   0024FC                     u3501:
  1703   0024FC  EF3A  F012         	goto	l4867
  1704   002500                     u3500:
  1705   002500                     
  1706                           ;view_log.c: 33:     view_event[i]=' ';
  1707   002500  0EA4               	movlw	low _view_event
  1708   002502  2415               	addwf	view_log@i^0,w,c
  1709   002504  6ED9               	movwf	fsr2l,c
  1710   002506  0E00               	movlw	high _view_event
  1711   002508  2016               	addwfc	(view_log@i+1)^0,w,c
  1712   00250A  6EDA               	movwf	fsr2h,c
  1713   00250C  0E20               	movlw	32
  1714   00250E  6EDF               	movwf	indf2,c
  1715   002510                     
  1716                           ;view_log.c: 34:     i++;
  1717   002510  4A15               	infsnz	view_log@i^0,f,c
  1718   002512  2A16               	incf	(view_log@i+1)^0,f,c
  1719   002514                     
  1720                           ;view_log.c: 35:     view_event[i]=read_external_eeprom((unsigned char)(i-1+(((log_index
      +                          +9-view_index)%10)*12)%0x78));
  1721   002514  0E00               	movlw	0
  1722   002516  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1723   002518  0E0A               	movlw	10
  1724   00251A  6E03               	movwf	___lwmod@divisor^0,c
  1725   00251C  0100               	movlb	0	; () banked
  1726   00251E  5177               	movf	_view_index& (0+255),w,b
  1727   002520  5D89               	subwf	_log_index& (0+255),w,b
  1728   002522  6E10               	movwf	??_view_log^0,c
  1729   002524  5178               	movf	(_view_index+1)& (0+255),w,b
  1730   002526  598A               	subwfb	(_log_index+1)& (0+255),w,b
  1731   002528  6E11               	movwf	(??_view_log+1)^0,c
  1732   00252A  0E09               	movlw	9
  1733   00252C  2410               	addwf	??_view_log^0,w,c
  1734   00252E  6E01               	movwf	___lwmod@dividend^0,c
  1735   002530  0E00               	movlw	0
  1736   002532  2011               	addwfc	(??_view_log+1)^0,w,c
  1737   002534  6E02               	movwf	(___lwmod@dividend+1)^0,c
  1738   002536  ECCE  F002         	call	___lwmod	;wreg free
  1739   00253A  C001  F006         	movff	?___lwmod,___wmul@multiplier
  1740   00253E  C002  F007         	movff	?___lwmod+1,___wmul@multiplier+1
  1741   002542  0E00               	movlw	0
  1742   002544  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  1743   002546  0E0C               	movlw	12
  1744   002548  6E08               	movwf	___wmul@multiplicand^0,c
  1745   00254A  EC40  F001         	call	___wmul	;wreg free
  1746   00254E  C006  F013         	movff	?___wmul,_view_log$1546
  1747   002552  C007  F014         	movff	?___wmul+1,_view_log$1546+1
  1748   002556                     
  1749                           ;view_log.c: 35:     view_event[i]=read_external_eeprom((unsigned char)(i-1+(((log_index
      +                          +9-view_index)%10)*12)%0x78));
  1750   002556  0EA4               	movlw	low _view_event
  1751   002558  2415               	addwf	view_log@i^0,w,c
  1752   00255A  6ED9               	movwf	fsr2l,c
  1753   00255C  0E00               	movlw	high _view_event
  1754   00255E  2016               	addwfc	(view_log@i+1)^0,w,c
  1755   002560  6EDA               	movwf	fsr2h,c
  1756   002562  C013  F001         	movff	_view_log$1546,___lwmod@dividend
  1757   002566  C014  F002         	movff	_view_log$1546+1,___lwmod@dividend+1
  1758   00256A  0E00               	movlw	0
  1759   00256C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1760   00256E  0E78               	movlw	120
  1761   002570  6E03               	movwf	___lwmod@divisor^0,c
  1762   002572  ECCE  F002         	call	___lwmod	;wreg free
  1763   002576  5001               	movf	?___lwmod^0,w,c
  1764   002578  2415               	addwf	view_log@i^0,w,c
  1765   00257A  6E10               	movwf	??_view_log^0,c
  1766   00257C  0410               	decf	??_view_log^0,w,c
  1767   00257E  EC68  F001         	call	_read_external_eeprom
  1768   002582  6EDF               	movwf	indf2,c
  1769   002584                     
  1770                           ;view_log.c: 36:     i++;
  1771   002584  4A15               	infsnz	view_log@i^0,f,c
  1772   002586  2A16               	incf	(view_log@i+1)^0,f,c
  1773   002588                     
  1774                           ;view_log.c: 37:     view_event[i]=read_external_eeprom((unsigned char)(i-1+(((log_index
      +                          +9-view_index)%10)*12)%0x78));
  1775   002588  0E00               	movlw	0
  1776   00258A  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1777   00258C  0E0A               	movlw	10
  1778   00258E  6E03               	movwf	___lwmod@divisor^0,c
  1779   002590  0100               	movlb	0	; () banked
  1780   002592  5177               	movf	_view_index& (0+255),w,b
  1781   002594  5D89               	subwf	_log_index& (0+255),w,b
  1782   002596  6E10               	movwf	??_view_log^0,c
  1783   002598  5178               	movf	(_view_index+1)& (0+255),w,b
  1784   00259A  598A               	subwfb	(_log_index+1)& (0+255),w,b
  1785   00259C  6E11               	movwf	(??_view_log+1)^0,c
  1786   00259E  0E09               	movlw	9
  1787   0025A0  2410               	addwf	??_view_log^0,w,c
  1788   0025A2  6E01               	movwf	___lwmod@dividend^0,c
  1789   0025A4  0E00               	movlw	0
  1790   0025A6  2011               	addwfc	(??_view_log+1)^0,w,c
  1791   0025A8  6E02               	movwf	(___lwmod@dividend+1)^0,c
  1792   0025AA  ECCE  F002         	call	___lwmod	;wreg free
  1793   0025AE  C001  F006         	movff	?___lwmod,___wmul@multiplier
  1794   0025B2  C002  F007         	movff	?___lwmod+1,___wmul@multiplier+1
  1795   0025B6  0E00               	movlw	0
  1796   0025B8  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  1797   0025BA  0E0C               	movlw	12
  1798   0025BC  6E08               	movwf	___wmul@multiplicand^0,c
  1799   0025BE  EC40  F001         	call	___wmul	;wreg free
  1800   0025C2  C006  F013         	movff	?___wmul,_view_log$1546
  1801   0025C6  C007  F014         	movff	?___wmul+1,_view_log$1546+1
  1802   0025CA                     
  1803                           ;view_log.c: 37:     view_event[i]=read_external_eeprom((unsigned char)(i-1+(((log_index
      +                          +9-view_index)%10)*12)%0x78));
  1804   0025CA  0EA4               	movlw	low _view_event
  1805   0025CC  2415               	addwf	view_log@i^0,w,c
  1806   0025CE  6ED9               	movwf	fsr2l,c
  1807   0025D0  0E00               	movlw	high _view_event
  1808   0025D2  2016               	addwfc	(view_log@i+1)^0,w,c
  1809   0025D4  6EDA               	movwf	fsr2h,c
  1810   0025D6  C013  F001         	movff	_view_log$1546,___lwmod@dividend
  1811   0025DA  C014  F002         	movff	_view_log$1546+1,___lwmod@dividend+1
  1812   0025DE  0E00               	movlw	0
  1813   0025E0  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1814   0025E2  0E78               	movlw	120
  1815   0025E4  6E03               	movwf	___lwmod@divisor^0,c
  1816   0025E6  ECCE  F002         	call	___lwmod	;wreg free
  1817   0025EA  5001               	movf	?___lwmod^0,w,c
  1818   0025EC  2415               	addwf	view_log@i^0,w,c
  1819   0025EE  6E10               	movwf	??_view_log^0,c
  1820   0025F0  0410               	decf	??_view_log^0,w,c
  1821   0025F2  EC68  F001         	call	_read_external_eeprom
  1822   0025F6  6EDF               	movwf	indf2,c
  1823   0025F8                     
  1824                           ;view_log.c: 38:     i++;
  1825   0025F8  4A15               	infsnz	view_log@i^0,f,c
  1826   0025FA  2A16               	incf	(view_log@i+1)^0,f,c
  1827   0025FC                     
  1828                           ;view_log.c: 39:     view_event[i]=' ';
  1829   0025FC  0EA4               	movlw	low _view_event
  1830   0025FE  2415               	addwf	view_log@i^0,w,c
  1831   002600  6ED9               	movwf	fsr2l,c
  1832   002602  0E00               	movlw	high _view_event
  1833   002604  2016               	addwfc	(view_log@i+1)^0,w,c
  1834   002606  6EDA               	movwf	fsr2h,c
  1835   002608  0E20               	movlw	32
  1836   00260A  6EDF               	movwf	indf2,c
  1837                           
  1838                           ;view_log.c: 40:     i++;
  1839   00260C  4A15               	infsnz	view_log@i^0,f,c
  1840   00260E  2A16               	incf	(view_log@i+1)^0,f,c
  1841   002610                     
  1842                           ;view_log.c: 41:     view_event[i]=read_external_eeprom((unsigned char)(i-2+(((log_index
      +                          +9-view_index)%10)*12)%0x78));
  1843   002610  0E00               	movlw	0
  1844   002612  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1845   002614  0E0A               	movlw	10
  1846   002616  6E03               	movwf	___lwmod@divisor^0,c
  1847   002618  0100               	movlb	0	; () banked
  1848   00261A  5177               	movf	_view_index& (0+255),w,b
  1849   00261C  5D89               	subwf	_log_index& (0+255),w,b
  1850   00261E  6E10               	movwf	??_view_log^0,c
  1851   002620  5178               	movf	(_view_index+1)& (0+255),w,b
  1852   002622  598A               	subwfb	(_log_index+1)& (0+255),w,b
  1853   002624  6E11               	movwf	(??_view_log+1)^0,c
  1854   002626  0E09               	movlw	9
  1855   002628  2410               	addwf	??_view_log^0,w,c
  1856   00262A  6E01               	movwf	___lwmod@dividend^0,c
  1857   00262C  0E00               	movlw	0
  1858   00262E  2011               	addwfc	(??_view_log+1)^0,w,c
  1859   002630  6E02               	movwf	(___lwmod@dividend+1)^0,c
  1860   002632  ECCE  F002         	call	___lwmod	;wreg free
  1861   002636  C001  F006         	movff	?___lwmod,___wmul@multiplier
  1862   00263A  C002  F007         	movff	?___lwmod+1,___wmul@multiplier+1
  1863   00263E  0E00               	movlw	0
  1864   002640  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  1865   002642  0E0C               	movlw	12
  1866   002644  6E08               	movwf	___wmul@multiplicand^0,c
  1867   002646  EC40  F001         	call	___wmul	;wreg free
  1868   00264A  C006  F013         	movff	?___wmul,_view_log$1546
  1869   00264E  C007  F014         	movff	?___wmul+1,_view_log$1546+1
  1870   002652                     
  1871                           ;view_log.c: 41:     view_event[i]=read_external_eeprom((unsigned char)(i-2+(((log_index
      +                          +9-view_index)%10)*12)%0x78));
  1872   002652  0EA4               	movlw	low _view_event
  1873   002654  2415               	addwf	view_log@i^0,w,c
  1874   002656  6ED9               	movwf	fsr2l,c
  1875   002658  0E00               	movlw	high _view_event
  1876   00265A  2016               	addwfc	(view_log@i+1)^0,w,c
  1877   00265C  6EDA               	movwf	fsr2h,c
  1878   00265E  C013  F001         	movff	_view_log$1546,___lwmod@dividend
  1879   002662  C014  F002         	movff	_view_log$1546+1,___lwmod@dividend+1
  1880   002666  0E00               	movlw	0
  1881   002668  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1882   00266A  0E78               	movlw	120
  1883   00266C  6E03               	movwf	___lwmod@divisor^0,c
  1884   00266E  ECCE  F002         	call	___lwmod	;wreg free
  1885   002672  5001               	movf	?___lwmod^0,w,c
  1886   002674  2415               	addwf	view_log@i^0,w,c
  1887   002676  0FFE               	addlw	254
  1888   002678  EC68  F001         	call	_read_external_eeprom
  1889   00267C  6EDF               	movwf	indf2,c
  1890   00267E                     
  1891                           ;view_log.c: 42:     i++;
  1892   00267E  4A15               	infsnz	view_log@i^0,f,c
  1893   002680  2A16               	incf	(view_log@i+1)^0,f,c
  1894   002682                     
  1895                           ;view_log.c: 43:     view_event[i]=read_external_eeprom((unsigned char)(i-2+(((log_index
      +                          +9-view_index)%10)*12)%0x78));
  1896   002682  0E00               	movlw	0
  1897   002684  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1898   002686  0E0A               	movlw	10
  1899   002688  6E03               	movwf	___lwmod@divisor^0,c
  1900   00268A  0100               	movlb	0	; () banked
  1901   00268C  5177               	movf	_view_index& (0+255),w,b
  1902   00268E  5D89               	subwf	_log_index& (0+255),w,b
  1903   002690  6E10               	movwf	??_view_log^0,c
  1904   002692  5178               	movf	(_view_index+1)& (0+255),w,b
  1905   002694  598A               	subwfb	(_log_index+1)& (0+255),w,b
  1906   002696  6E11               	movwf	(??_view_log+1)^0,c
  1907   002698  0E09               	movlw	9
  1908   00269A  2410               	addwf	??_view_log^0,w,c
  1909   00269C  6E01               	movwf	___lwmod@dividend^0,c
  1910   00269E  0E00               	movlw	0
  1911   0026A0  2011               	addwfc	(??_view_log+1)^0,w,c
  1912   0026A2  6E02               	movwf	(___lwmod@dividend+1)^0,c
  1913   0026A4  ECCE  F002         	call	___lwmod	;wreg free
  1914   0026A8  C001  F006         	movff	?___lwmod,___wmul@multiplier
  1915   0026AC  C002  F007         	movff	?___lwmod+1,___wmul@multiplier+1
  1916   0026B0  0E00               	movlw	0
  1917   0026B2  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  1918   0026B4  0E0C               	movlw	12
  1919   0026B6  6E08               	movwf	___wmul@multiplicand^0,c
  1920   0026B8  EC40  F001         	call	___wmul	;wreg free
  1921   0026BC  C006  F013         	movff	?___wmul,_view_log$1546
  1922   0026C0  C007  F014         	movff	?___wmul+1,_view_log$1546+1
  1923                           
  1924                           ;view_log.c: 43:     view_event[i]=read_external_eeprom((unsigned char)(i-2+(((log_index
      +                          +9-view_index)%10)*12)%0x78));
  1925   0026C4  0EA4               	movlw	low _view_event
  1926   0026C6  2415               	addwf	view_log@i^0,w,c
  1927   0026C8  6ED9               	movwf	fsr2l,c
  1928   0026CA  0E00               	movlw	high _view_event
  1929   0026CC  2016               	addwfc	(view_log@i+1)^0,w,c
  1930   0026CE  6EDA               	movwf	fsr2h,c
  1931   0026D0  C013  F001         	movff	_view_log$1546,___lwmod@dividend
  1932   0026D4  C014  F002         	movff	_view_log$1546+1,___lwmod@dividend+1
  1933   0026D8  0E00               	movlw	0
  1934   0026DA  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1935   0026DC  0E78               	movlw	120
  1936   0026DE  6E03               	movwf	___lwmod@divisor^0,c
  1937   0026E0  ECCE  F002         	call	___lwmod	;wreg free
  1938   0026E4  5001               	movf	?___lwmod^0,w,c
  1939   0026E6  2415               	addwf	view_log@i^0,w,c
  1940   0026E8  0FFE               	addlw	254
  1941   0026EA  EC68  F001         	call	_read_external_eeprom
  1942   0026EE  6EDF               	movwf	indf2,c
  1943   0026F0                     
  1944                           ;view_log.c: 44:     view_event[14]='\0';
  1945   0026F0  0E00               	movlw	0
  1946   0026F2  0100               	movlb	0	; () banked
  1947   0026F4  6FB2               	movwf	(_view_event+14)& (0+255),b
  1948   0026F6                     
  1949                           ; BSR set to: 0
  1950                           ;view_log.c: 45:     clcd_putch(view_index+48,(0xC0 + (0)));
  1951   0026F6  0EC0               	movlw	192
  1952   0026F8  6E0D               	movwf	clcd_putch@addr^0,c
  1953   0026FA  5177               	movf	_view_index& (0+255),w,b
  1954   0026FC  0F30               	addlw	48
  1955   0026FE  ECDD  F000         	call	_clcd_putch
  1956   002702                     
  1957                           ;view_log.c: 46:     clcd_print(view_event,(0xC0 + (2)));
  1958   002702  0EA4               	movlw	low _view_event
  1959   002704  6E0C               	movwf	clcd_print@data^0,c
  1960   002706  0E00               	movlw	high _view_event
  1961   002708  6E0D               	movwf	(clcd_print@data+1)^0,c
  1962   00270A  0EC2               	movlw	194
  1963   00270C  6E0E               	movwf	clcd_print@addr^0,c
  1964   00270E  EC00  F003         	call	_clcd_print	;wreg free
  1965   002712                     
  1966                           ;view_log.c: 47:     if(key==11 && view_index<log_count-1)
  1967   002712  0E0B               	movlw	11
  1968   002714  1812               	xorwf	view_log@key^0,w,c
  1969   002716  A4D8               	btfss	status,2,c
  1970   002718  EF90  F013         	goto	u3511
  1971   00271C  EF92  F013         	goto	u3510
  1972   002720                     u3511:
  1973   002720  EFA8  F013         	goto	l4913
  1974   002724                     u3510:
  1975   002724  0EFF               	movlw	255
  1976   002726  0100               	movlb	0	; () banked
  1977   002728  2587               	addwf	_log_count& (0+255),w,b
  1978   00272A  6E10               	movwf	??_view_log^0,c
  1979   00272C  0EFF               	movlw	255
  1980   00272E  2188               	addwfc	(_log_count+1)& (0+255),w,b
  1981   002730  6E11               	movwf	(??_view_log+1)^0,c
  1982   002732  5010               	movf	??_view_log^0,w,c
  1983   002734  5D77               	subwf	_view_index& (0+255),w,b
  1984   002736  5011               	movf	(??_view_log+1)^0,w,c
  1985   002738  5978               	subwfb	(_view_index+1)& (0+255),w,b
  1986   00273A  B0D8               	btfsc	status,0,c
  1987   00273C  EFA2  F013         	goto	u3521
  1988   002740  EFA4  F013         	goto	u3520
  1989   002744                     u3521:
  1990   002744  EFA8  F013         	goto	l4913
  1991   002748                     u3520:
  1992   002748                     
  1993                           ; BSR set to: 0
  1994                           ;view_log.c: 48:     {;view_log.c: 49:         view_index++;
  1995   002748  4B77               	infsnz	_view_index& (0+255),f,b
  1996   00274A  2B78               	incf	(_view_index+1)& (0+255),f,b
  1997                           
  1998                           ;view_log.c: 50:     }
  1999   00274C  EFDF  F013         	goto	l1565
  2000   002750                     l4913:
  2001   002750  0E0C               	movlw	12
  2002   002752  1812               	xorwf	view_log@key^0,w,c
  2003   002754  A4D8               	btfss	status,2,c
  2004   002756  EFAF  F013         	goto	u3531
  2005   00275A  EFB1  F013         	goto	u3530
  2006   00275E                     u3531:
  2007   00275E  EFDF  F013         	goto	l1565
  2008   002762                     u3530:
  2009   002762                     
  2010                           ;view_log.c: 52:     {;view_log.c: 53:         if(t==0 && view_index>0)
  2011   002762  500F               	movf	view_log@t^0,w,c
  2012   002764  A4D8               	btfss	status,2,c
  2013   002766  EFB7  F013         	goto	u3541
  2014   00276A  EFB9  F013         	goto	u3540
  2015   00276E                     u3541:
  2016   00276E  EFC8  F013         	goto	l4921
  2017   002772                     u3540:
  2018   002772  0100               	movlb	0	; () banked
  2019   002774  5177               	movf	_view_index& (0+255),w,b
  2020   002776  1178               	iorwf	(_view_index+1)& (0+255),w,b
  2021   002778  B4D8               	btfsc	status,2,c
  2022   00277A  EFC1  F013         	goto	u3551
  2023   00277E  EFC3  F013         	goto	u3550
  2024   002782                     u3551:
  2025   002782  EFC8  F013         	goto	l4921
  2026   002786                     u3550:
  2027   002786                     
  2028                           ; BSR set to: 0
  2029                           ;view_log.c: 54:         {;view_log.c: 55:             view_index--;
  2030   002786  0777               	decf	_view_index& (0+255),f,b
  2031   002788  A0D8               	btfss	status,0,c
  2032   00278A  0778               	decf	(_view_index+1)& (0+255),f,b
  2033                           
  2034                           ;view_log.c: 56:         }
  2035   00278C  EFDF  F013         	goto	l1565
  2036   002790                     l4921:
  2037   002790  040F               	decf	view_log@t^0,w,c
  2038   002792  A4D8               	btfss	status,2,c
  2039   002794  EFCE  F013         	goto	u3561
  2040   002798  EFD0  F013         	goto	u3560
  2041   00279C                     u3561:
  2042   00279C  EFFD  F011         	goto	l4841
  2043   0027A0                     u3560:
  2044   0027A0                     
  2045                           ;view_log.c: 58:         {;view_log.c: 59:             in_flag=0;
  2046   0027A0  0E00               	movlw	0
  2047   0027A2  0100               	movlb	0	; () banked
  2048   0027A4  6F84               	movwf	(_in_flag+1)& (0+255),b
  2049   0027A6  0E00               	movlw	0
  2050   0027A8  6F83               	movwf	_in_flag& (0+255),b
  2051   0027AA                     
  2052                           ; BSR set to: 0
  2053                           ;view_log.c: 60:             clcd_write(0x01, 0);
  2054   0027AA  0E00               	movlw	0
  2055   0027AC  6E01               	movwf	clcd_write@control_bit^0,c
  2056   0027AE  0E01               	movlw	1
  2057   0027B0  EC7D  F001         	call	_clcd_write
  2058   0027B4                     
  2059                           ;view_log.c: 61:             main_f=2;
  2060   0027B4  0E00               	movlw	0
  2061   0027B6  0100               	movlb	0	; () banked
  2062   0027B8  6FA2               	movwf	(_main_f+1)& (0+255),b
  2063   0027BA  0E02               	movlw	2
  2064   0027BC  6FA1               	movwf	_main_f& (0+255),b
  2065   0027BE                     l1565:
  2066   0027BE  0012               	return		;funcret
  2067   0027C0                     __end_of_view_log:
  2068                           	callstack 0
  2069                           
  2070 ;; *************** function _set_time *****************
  2071 ;; Defined at:
  2072 ;;		line 2 in file "set_time.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  key             1    wreg     unsigned char 
  2075 ;;  t               1   18[COMRAM] unsigned char 
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;  key             1   24[COMRAM] unsigned char 
  2078 ;;  sec_reg         1   23[COMRAM] unsigned char 
  2079 ;;  min_reg         1   22[COMRAM] unsigned char 
  2080 ;;  hr_reg          1   21[COMRAM] unsigned char 
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  1    wreg      void 
  2083 ;; Registers used:
  2084 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2090 ;;      Params:         1       0       0       0       0       0       0
  2091 ;;      Locals:         4       0       0       0       0       0       0
  2092 ;;      Temps:          2       0       0       0       0       0       0
  2093 ;;      Totals:         7       0       0       0       0       0       0
  2094 ;;Total ram usage:        7 bytes
  2095 ;; Hardware stack levels used: 1
  2096 ;; Hardware stack levels required when called: 4
  2097 ;; This function calls:
  2098 ;;		___lwdiv
  2099 ;;		___lwmod
  2100 ;;		_clcd_print
  2101 ;;		_clcd_putch
  2102 ;;		_clcd_write
  2103 ;;		_store_event
  2104 ;;		_write_ds1307
  2105 ;; This function is called by:
  2106 ;;		_main
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           	psect	text2
  2111   0027C0                     __ptext2:
  2112                           	callstack 0
  2113   0027C0                     _set_time:
  2114                           	callstack 26
  2115                           
  2116                           ;incstack = 0
  2117                           ;set_time@key stored from wreg
  2118   0027C0  6E19               	movwf	set_time@key^0,c
  2119   0027C2                     
  2120                           ;set_time.c: 2: void set_time(unsigned char key,unsigned char t);set_time.c: 3: {;set_ti
      +                          me.c: 4:     static int tc_flag=0;;set_time.c: 5:     if(tc_flag==1)
  2121   0027C2  0100               	movlb	0	; () banked
  2122   0027C4  056F               	decf	set_time@tc_flag& (0+255),w,b
  2123   0027C6  1170               	iorwf	(set_time@tc_flag+1)& (0+255),w,b
  2124   0027C8  A4D8               	btfss	status,2,c
  2125   0027CA  EFE9  F013         	goto	u3641
  2126   0027CE  EFEB  F013         	goto	u3640
  2127   0027D2                     u3641:
  2128   0027D2  EF1D  F014         	goto	l5041
  2129   0027D6                     u3640:
  2130   0027D6                     
  2131                           ; BSR set to: 0
  2132                           ;set_time.c: 6:     {;set_time.c: 7:         clcd_print("Time changed",(0x80 + (0)));
  2133   0027D6  0E65               	movlw	low STR_16
  2134   0027D8  6E0C               	movwf	clcd_print@data^0,c
  2135   0027DA  0E2F               	movlw	high STR_16
  2136   0027DC  6E0D               	movwf	(clcd_print@data+1)^0,c
  2137   0027DE  0E80               	movlw	128
  2138   0027E0  6E0E               	movwf	clcd_print@addr^0,c
  2139   0027E2  EC00  F003         	call	_clcd_print	;wreg free
  2140                           
  2141                           ;set_time.c: 8:         clcd_print("successfully",(0xC0 + (0)));
  2142   0027E6  0E72               	movlw	low STR_17
  2143   0027E8  6E0C               	movwf	clcd_print@data^0,c
  2144   0027EA  0E2F               	movlw	high STR_17
  2145   0027EC  6E0D               	movwf	(clcd_print@data+1)^0,c
  2146   0027EE  0EC0               	movlw	192
  2147   0027F0  6E0E               	movwf	clcd_print@addr^0,c
  2148   0027F2  EC00  F003         	call	_clcd_print	;wreg free
  2149   0027F6                     
  2150                           ;set_time.c: 9:         in_flag=0;
  2151   0027F6  0E00               	movlw	0
  2152   0027F8  0100               	movlb	0	; () banked
  2153   0027FA  6F84               	movwf	(_in_flag+1)& (0+255),b
  2154   0027FC  0E00               	movlw	0
  2155   0027FE  6F83               	movwf	_in_flag& (0+255),b
  2156   002800                     
  2157                           ; BSR set to: 0
  2158                           ;set_time.c: 10:         if(timeout==0)
  2159   002800  5197               	movf	_timeout& (0+255),w,b
  2160   002802  1198               	iorwf	(_timeout+1)& (0+255),w,b
  2161   002804  A4D8               	btfss	status,2,c
  2162   002806  EF07  F014         	goto	u3651
  2163   00280A  EF09  F014         	goto	u3650
  2164   00280E                     u3651:
  2165   00280E  EF5A  F017         	goto	l1217
  2166   002812                     u3650:
  2167   002812                     
  2168                           ; BSR set to: 0
  2169                           ;set_time.c: 11:         {;set_time.c: 12:             clcd_write(0x01, 0);
  2170   002812  0E00               	movlw	0
  2171   002814  6E01               	movwf	clcd_write@control_bit^0,c
  2172   002816  0E01               	movlw	1
  2173   002818  EC7D  F001         	call	_clcd_write
  2174   00281C                     
  2175                           ;set_time.c: 13:             main_f=2;
  2176   00281C  0E00               	movlw	0
  2177   00281E  0100               	movlb	0	; () banked
  2178   002820  6FA2               	movwf	(_main_f+1)& (0+255),b
  2179   002822  0E02               	movlw	2
  2180   002824  6FA1               	movwf	_main_f& (0+255),b
  2181   002826                     
  2182                           ; BSR set to: 0
  2183                           ;set_time.c: 14:             tc_flag=0;
  2184   002826  0E00               	movlw	0
  2185   002828  6F70               	movwf	(set_time@tc_flag+1)& (0+255),b
  2186   00282A  0E00               	movlw	0
  2187   00282C  6F6F               	movwf	set_time@tc_flag& (0+255),b
  2188   00282E                     
  2189                           ; BSR set to: 0
  2190                           ;set_time.c: 15:              store_event();
  2191   00282E  EC88  F007         	call	_store_event	;wreg free
  2192   002832  EF5A  F017         	goto	l1217
  2193   002836                     l5037:
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;set_time.c: 17:         return;
  2197   002836  EF5A  F017         	goto	l1217
  2198   00283A                     l5041:
  2199                           
  2200                           ; BSR set to: 0
  2201   00283A  0E02               	movlw	2
  2202   00283C  196F               	xorwf	set_time@tc_flag& (0+255),w,b
  2203   00283E  1170               	iorwf	(set_time@tc_flag+1)& (0+255),w,b
  2204   002840  A4D8               	btfss	status,2,c
  2205   002842  EF25  F014         	goto	u3661
  2206   002846  EF27  F014         	goto	u3660
  2207   00284A                     u3661:
  2208   00284A  EF55  F014         	goto	l5057
  2209   00284E                     u3660:
  2210   00284E                     
  2211                           ; BSR set to: 0
  2212                           ;set_time.c: 20:     {;set_time.c: 21:         clcd_print("Time not",(0x80 + (0)));
  2213   00284E  0EE3               	movlw	low STR_18
  2214   002850  6E0C               	movwf	clcd_print@data^0,c
  2215   002852  0E2F               	movlw	high STR_18
  2216   002854  6E0D               	movwf	(clcd_print@data+1)^0,c
  2217   002856  0E80               	movlw	128
  2218   002858  6E0E               	movwf	clcd_print@addr^0,c
  2219   00285A  EC00  F003         	call	_clcd_print	;wreg free
  2220                           
  2221                           ;set_time.c: 22:         clcd_print("changed",(0xC0 + (0)));
  2222   00285E  0EF5               	movlw	low (STR_3+9)
  2223   002860  6E0C               	movwf	clcd_print@data^0,c
  2224   002862  0E2E               	movlw	high (STR_3+9)
  2225   002864  6E0D               	movwf	(clcd_print@data+1)^0,c
  2226   002866  0EC0               	movlw	192
  2227   002868  6E0E               	movwf	clcd_print@addr^0,c
  2228   00286A  EC00  F003         	call	_clcd_print	;wreg free
  2229   00286E                     
  2230                           ;set_time.c: 23:         in_flag=0;
  2231   00286E  0E00               	movlw	0
  2232   002870  0100               	movlb	0	; () banked
  2233   002872  6F84               	movwf	(_in_flag+1)& (0+255),b
  2234   002874  0E00               	movlw	0
  2235   002876  6F83               	movwf	_in_flag& (0+255),b
  2236   002878                     
  2237                           ; BSR set to: 0
  2238                           ;set_time.c: 24:         if(timeout==0)
  2239   002878  5197               	movf	_timeout& (0+255),w,b
  2240   00287A  1198               	iorwf	(_timeout+1)& (0+255),w,b
  2241   00287C  A4D8               	btfss	status,2,c
  2242   00287E  EF43  F014         	goto	u3671
  2243   002882  EF45  F014         	goto	u3670
  2244   002886                     u3671:
  2245   002886  EF5A  F017         	goto	l1217
  2246   00288A                     u3670:
  2247   00288A                     
  2248                           ; BSR set to: 0
  2249                           ;set_time.c: 25:         {;set_time.c: 26:             clcd_write(0x01, 0);
  2250   00288A  0E00               	movlw	0
  2251   00288C  6E01               	movwf	clcd_write@control_bit^0,c
  2252   00288E  0E01               	movlw	1
  2253   002890  EC7D  F001         	call	_clcd_write
  2254   002894                     
  2255                           ;set_time.c: 27:             main_f=2;
  2256   002894  0E00               	movlw	0
  2257   002896  0100               	movlb	0	; () banked
  2258   002898  6FA2               	movwf	(_main_f+1)& (0+255),b
  2259   00289A  0E02               	movlw	2
  2260   00289C  6FA1               	movwf	_main_f& (0+255),b
  2261   00289E                     
  2262                           ; BSR set to: 0
  2263                           ;set_time.c: 28:             tc_flag=0;
  2264   00289E  0E00               	movlw	0
  2265   0028A0  6F70               	movwf	(set_time@tc_flag+1)& (0+255),b
  2266   0028A2  0E00               	movlw	0
  2267   0028A4  6F6F               	movwf	set_time@tc_flag& (0+255),b
  2268   0028A6  EF5A  F017         	goto	l1217
  2269   0028AA                     l5057:
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;set_time.c: 32:     clcd_print("HH:MM:SS",(0x80 + (3)));
  2273   0028AA  0EDA               	movlw	low STR_20
  2274   0028AC  6E0C               	movwf	clcd_print@data^0,c
  2275   0028AE  0E2F               	movlw	high STR_20
  2276   0028B0  6E0D               	movwf	(clcd_print@data+1)^0,c
  2277   0028B2  0E83               	movlw	131
  2278   0028B4  6E0E               	movwf	clcd_print@addr^0,c
  2279   0028B6  EC00  F003         	call	_clcd_print	;wreg free
  2280   0028BA                     
  2281                           ;set_time.c: 33:     if(in_flag==0)
  2282   0028BA  0100               	movlb	0	; () banked
  2283   0028BC  5183               	movf	_in_flag& (0+255),w,b
  2284   0028BE  1184               	iorwf	(_in_flag+1)& (0+255),w,b
  2285   0028C0  A4D8               	btfss	status,2,c
  2286   0028C2  EF65  F014         	goto	u3681
  2287   0028C6  EF67  F014         	goto	u3680
  2288   0028CA                     u3681:
  2289   0028CA  EF9B  F014         	goto	l5065
  2290   0028CE                     u3680:
  2291   0028CE                     
  2292                           ; BSR set to: 0
  2293                           ;set_time.c: 34:     {;set_time.c: 35:         hr=(time[0]-48)*10 + time[1]-48;
  2294   0028CE  51B3               	movf	_time& (0+255),w,b
  2295   0028D0  0D0A               	mullw	10
  2296   0028D2  CFF3 F014          	movff	prodl,??_set_time
  2297   0028D6  CFF4 F015          	movff	prodh,??_set_time+1
  2298   0028DA  51B4               	movf	(_time+1)& (0+255),w,b
  2299   0028DC  2614               	addwf	??_set_time^0,f,c
  2300   0028DE  0E00               	movlw	0
  2301   0028E0  2215               	addwfc	(??_set_time+1)^0,f,c
  2302   0028E2  0EF0               	movlw	240
  2303   0028E4  2414               	addwf	??_set_time^0,w,c
  2304   0028E6  6F79               	movwf	_hr& (0+255),b
  2305   0028E8  0EFD               	movlw	253
  2306   0028EA  2015               	addwfc	(??_set_time+1)^0,w,c
  2307   0028EC  6F7A               	movwf	(_hr+1)& (0+255),b
  2308                           
  2309                           ;set_time.c: 36:         min=(time[3]-48)*10 + time[4]-48;
  2310   0028EE  51B6               	movf	(_time+3)& (0+255),w,b
  2311   0028F0  0D0A               	mullw	10
  2312   0028F2  CFF3 F014          	movff	prodl,??_set_time
  2313   0028F6  CFF4 F015          	movff	prodh,??_set_time+1
  2314   0028FA  51B7               	movf	(_time+4)& (0+255),w,b
  2315   0028FC  2614               	addwf	??_set_time^0,f,c
  2316   0028FE  0E00               	movlw	0
  2317   002900  2215               	addwfc	(??_set_time+1)^0,f,c
  2318   002902  0EF0               	movlw	240
  2319   002904  2414               	addwf	??_set_time^0,w,c
  2320   002906  6F7D               	movwf	_min& (0+255),b
  2321   002908  0EFD               	movlw	253
  2322   00290A  2015               	addwfc	(??_set_time+1)^0,w,c
  2323   00290C  6F7E               	movwf	(_min+1)& (0+255),b
  2324                           
  2325                           ;set_time.c: 37:         secs=(time[6]-48)*10 + time[7]-48;
  2326   00290E  51B9               	movf	(_time+6)& (0+255),w,b
  2327   002910  0D0A               	mullw	10
  2328   002912  CFF3 F014          	movff	prodl,??_set_time
  2329   002916  CFF4 F015          	movff	prodh,??_set_time+1
  2330   00291A  51BA               	movf	(_time+7)& (0+255),w,b
  2331   00291C  2614               	addwf	??_set_time^0,f,c
  2332   00291E  0E00               	movlw	0
  2333   002920  2215               	addwfc	(??_set_time+1)^0,f,c
  2334   002922  0EF0               	movlw	240
  2335   002924  2414               	addwf	??_set_time^0,w,c
  2336   002926  6F7B               	movwf	_secs& (0+255),b
  2337   002928  0EFD               	movlw	253
  2338   00292A  2015               	addwfc	(??_set_time+1)^0,w,c
  2339   00292C  6F7C               	movwf	(_secs+1)& (0+255),b
  2340   00292E                     
  2341                           ; BSR set to: 0
  2342                           ;set_time.c: 38:         in_flag=1;
  2343   00292E  0E00               	movlw	0
  2344   002930  6F84               	movwf	(_in_flag+1)& (0+255),b
  2345   002932  0E01               	movlw	1
  2346   002934  6F83               	movwf	_in_flag& (0+255),b
  2347   002936                     l5065:
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;set_time.c: 40:     if(field==0)
  2351   002936  5181               	movf	_field& (0+255),w,b
  2352   002938  1182               	iorwf	(_field+1)& (0+255),w,b
  2353   00293A  A4D8               	btfss	status,2,c
  2354   00293C  EFA2  F014         	goto	u3691
  2355   002940  EFA4  F014         	goto	u3690
  2356   002944                     u3691:
  2357   002944  EF24  F015         	goto	l5083
  2358   002948                     u3690:
  2359   002948                     
  2360                           ; BSR set to: 0
  2361                           ;set_time.c: 41:     {;set_time.c: 42:         clcd_putch(hr%10+48,(0xC0 + (4)));
  2362   002948  0EC4               	movlw	196
  2363   00294A  6E0D               	movwf	clcd_putch@addr^0,c
  2364   00294C  C079  F001         	movff	_hr,___lwmod@dividend
  2365   002950  C07A  F002         	movff	_hr+1,___lwmod@dividend+1
  2366   002954  0E00               	movlw	0
  2367   002956  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2368   002958  0E0A               	movlw	10
  2369   00295A  6E03               	movwf	___lwmod@divisor^0,c
  2370   00295C  ECCE  F002         	call	___lwmod	;wreg free
  2371   002960  5001               	movf	?___lwmod^0,w,c
  2372   002962  0F30               	addlw	48
  2373   002964  ECDD  F000         	call	_clcd_putch
  2374                           
  2375                           ;set_time.c: 43:         clcd_putch(hr/10+48,(0xC0 + (3)));
  2376   002968  0EC3               	movlw	195
  2377   00296A  6E0D               	movwf	clcd_putch@addr^0,c
  2378   00296C  C079  F006         	movff	_hr,___lwdiv@dividend
  2379   002970  C07A  F007         	movff	_hr+1,___lwdiv@dividend+1
  2380   002974  0E00               	movlw	0
  2381   002976  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2382   002978  0E0A               	movlw	10
  2383   00297A  6E08               	movwf	___lwdiv@divisor^0,c
  2384   00297C  EC36  F003         	call	___lwdiv	;wreg free
  2385   002980  5006               	movf	?___lwdiv^0,w,c
  2386   002982  0F30               	addlw	48
  2387   002984  ECDD  F000         	call	_clcd_putch
  2388   002988                     
  2389                           ;set_time.c: 44:         clcd_putch(':',(0xC0 + (5)));
  2390   002988  0EC5               	movlw	197
  2391   00298A  6E0D               	movwf	clcd_putch@addr^0,c
  2392   00298C  0E3A               	movlw	58
  2393   00298E  ECDD  F000         	call	_clcd_putch
  2394   002992                     
  2395                           ;set_time.c: 45:         clcd_putch(min%10+48,(0xC0 + (7)));
  2396   002992  0EC7               	movlw	199
  2397   002994  6E0D               	movwf	clcd_putch@addr^0,c
  2398   002996  C07D  F001         	movff	_min,___lwmod@dividend
  2399   00299A  C07E  F002         	movff	_min+1,___lwmod@dividend+1
  2400   00299E  0E00               	movlw	0
  2401   0029A0  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2402   0029A2  0E0A               	movlw	10
  2403   0029A4  6E03               	movwf	___lwmod@divisor^0,c
  2404   0029A6  ECCE  F002         	call	___lwmod	;wreg free
  2405   0029AA  5001               	movf	?___lwmod^0,w,c
  2406   0029AC  0F30               	addlw	48
  2407   0029AE  ECDD  F000         	call	_clcd_putch
  2408   0029B2                     
  2409                           ;set_time.c: 46:         clcd_putch(min/10+48,(0xC0 + (6)));
  2410   0029B2  0EC6               	movlw	198
  2411   0029B4  6E0D               	movwf	clcd_putch@addr^0,c
  2412   0029B6  C07D  F006         	movff	_min,___lwdiv@dividend
  2413   0029BA  C07E  F007         	movff	_min+1,___lwdiv@dividend+1
  2414   0029BE  0E00               	movlw	0
  2415   0029C0  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2416   0029C2  0E0A               	movlw	10
  2417   0029C4  6E08               	movwf	___lwdiv@divisor^0,c
  2418   0029C6  EC36  F003         	call	___lwdiv	;wreg free
  2419   0029CA  5006               	movf	?___lwdiv^0,w,c
  2420   0029CC  0F30               	addlw	48
  2421   0029CE  ECDD  F000         	call	_clcd_putch
  2422   0029D2                     
  2423                           ;set_time.c: 47:         clcd_putch(':',(0xC0 + (8)));
  2424   0029D2  0EC8               	movlw	200
  2425   0029D4  6E0D               	movwf	clcd_putch@addr^0,c
  2426   0029D6  0E3A               	movlw	58
  2427   0029D8  ECDD  F000         	call	_clcd_putch
  2428   0029DC                     
  2429                           ;set_time.c: 48:         if(blink)
  2430   0029DC  0100               	movlb	0	; () banked
  2431   0029DE  517F               	movf	_blink& (0+255),w,b
  2432   0029E0  1180               	iorwf	(_blink+1)& (0+255),w,b
  2433   0029E2  B4D8               	btfsc	status,2,c
  2434   0029E4  EFF6  F014         	goto	u3701
  2435   0029E8  EFF8  F014         	goto	u3700
  2436   0029EC                     u3701:
  2437   0029EC  EF1A  F015         	goto	l5081
  2438   0029F0                     u3700:
  2439   0029F0                     
  2440                           ; BSR set to: 0
  2441                           ;set_time.c: 49:         {;set_time.c: 50:             clcd_putch(secs%10+48,(0xC0 + (10
      +                          )));
  2442   0029F0  0ECA               	movlw	202
  2443   0029F2  6E0D               	movwf	clcd_putch@addr^0,c
  2444   0029F4  C07B  F001         	movff	_secs,___lwmod@dividend
  2445   0029F8  C07C  F002         	movff	_secs+1,___lwmod@dividend+1
  2446   0029FC  0E00               	movlw	0
  2447   0029FE  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2448   002A00  0E0A               	movlw	10
  2449   002A02  6E03               	movwf	___lwmod@divisor^0,c
  2450   002A04  ECCE  F002         	call	___lwmod	;wreg free
  2451   002A08  5001               	movf	?___lwmod^0,w,c
  2452   002A0A  0F30               	addlw	48
  2453   002A0C  ECDD  F000         	call	_clcd_putch
  2454                           
  2455                           ;set_time.c: 51:             clcd_putch(secs/10+48,(0xC0 + (9)));
  2456   002A10  0EC9               	movlw	201
  2457   002A12  6E0D               	movwf	clcd_putch@addr^0,c
  2458   002A14  C07B  F006         	movff	_secs,___lwdiv@dividend
  2459   002A18  C07C  F007         	movff	_secs+1,___lwdiv@dividend+1
  2460   002A1C  0E00               	movlw	0
  2461   002A1E  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2462   002A20  0E0A               	movlw	10
  2463   002A22  6E08               	movwf	___lwdiv@divisor^0,c
  2464   002A24  EC36  F003         	call	___lwdiv	;wreg free
  2465   002A28  5006               	movf	?___lwdiv^0,w,c
  2466   002A2A  0F30               	addlw	48
  2467   002A2C  ECDD  F000         	call	_clcd_putch
  2468                           
  2469                           ;set_time.c: 52:         }
  2470   002A30  EF35  F016         	goto	l5119
  2471   002A34                     l5081:
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;set_time.c: 54:         {;set_time.c: 55:             clcd_print("  ",(0xC0 + (9)));
  2475   002A34  0EFC               	movlw	low STR_21
  2476   002A36  6E0C               	movwf	clcd_print@data^0,c
  2477   002A38  0E2F               	movlw	high STR_21
  2478   002A3A  6E0D               	movwf	(clcd_print@data+1)^0,c
  2479   002A3C  0EC9               	movlw	201
  2480   002A3E  6E0E               	movwf	clcd_print@addr^0,c
  2481   002A40  EC00  F003         	call	_clcd_print	;wreg free
  2482   002A44  EF35  F016         	goto	l5119
  2483   002A48                     l5083:
  2484                           
  2485                           ; BSR set to: 0
  2486   002A48  0581               	decf	_field& (0+255),w,b
  2487   002A4A  1182               	iorwf	(_field+1)& (0+255),w,b
  2488   002A4C  A4D8               	btfss	status,2,c
  2489   002A4E  EF2B  F015         	goto	u3711
  2490   002A52  EF2D  F015         	goto	u3710
  2491   002A56                     u3711:
  2492   002A56  EFAD  F015         	goto	l5101
  2493   002A5A                     u3710:
  2494   002A5A                     
  2495                           ; BSR set to: 0
  2496                           ;set_time.c: 59:     {;set_time.c: 60:         clcd_putch(hr%10+48,(0xC0 + (4)));
  2497   002A5A  0EC4               	movlw	196
  2498   002A5C  6E0D               	movwf	clcd_putch@addr^0,c
  2499   002A5E  C079  F001         	movff	_hr,___lwmod@dividend
  2500   002A62  C07A  F002         	movff	_hr+1,___lwmod@dividend+1
  2501   002A66  0E00               	movlw	0
  2502   002A68  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2503   002A6A  0E0A               	movlw	10
  2504   002A6C  6E03               	movwf	___lwmod@divisor^0,c
  2505   002A6E  ECCE  F002         	call	___lwmod	;wreg free
  2506   002A72  5001               	movf	?___lwmod^0,w,c
  2507   002A74  0F30               	addlw	48
  2508   002A76  ECDD  F000         	call	_clcd_putch
  2509                           
  2510                           ;set_time.c: 61:         clcd_putch(hr/10+48,(0xC0 + (3)));
  2511   002A7A  0EC3               	movlw	195
  2512   002A7C  6E0D               	movwf	clcd_putch@addr^0,c
  2513   002A7E  C079  F006         	movff	_hr,___lwdiv@dividend
  2514   002A82  C07A  F007         	movff	_hr+1,___lwdiv@dividend+1
  2515   002A86  0E00               	movlw	0
  2516   002A88  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2517   002A8A  0E0A               	movlw	10
  2518   002A8C  6E08               	movwf	___lwdiv@divisor^0,c
  2519   002A8E  EC36  F003         	call	___lwdiv	;wreg free
  2520   002A92  5006               	movf	?___lwdiv^0,w,c
  2521   002A94  0F30               	addlw	48
  2522   002A96  ECDD  F000         	call	_clcd_putch
  2523   002A9A                     
  2524                           ;set_time.c: 62:         clcd_putch(':',(0xC0 + (5)));
  2525   002A9A  0EC5               	movlw	197
  2526   002A9C  6E0D               	movwf	clcd_putch@addr^0,c
  2527   002A9E  0E3A               	movlw	58
  2528   002AA0  ECDD  F000         	call	_clcd_putch
  2529   002AA4                     
  2530                           ;set_time.c: 63:         clcd_putch(secs%10+48,(0xC0 + (10)));
  2531   002AA4  0ECA               	movlw	202
  2532   002AA6  6E0D               	movwf	clcd_putch@addr^0,c
  2533   002AA8  C07B  F001         	movff	_secs,___lwmod@dividend
  2534   002AAC  C07C  F002         	movff	_secs+1,___lwmod@dividend+1
  2535   002AB0  0E00               	movlw	0
  2536   002AB2  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2537   002AB4  0E0A               	movlw	10
  2538   002AB6  6E03               	movwf	___lwmod@divisor^0,c
  2539   002AB8  ECCE  F002         	call	___lwmod	;wreg free
  2540   002ABC  5001               	movf	?___lwmod^0,w,c
  2541   002ABE  0F30               	addlw	48
  2542   002AC0  ECDD  F000         	call	_clcd_putch
  2543   002AC4                     
  2544                           ;set_time.c: 64:         clcd_putch(secs/10+48,(0xC0 + (9)));
  2545   002AC4  0EC9               	movlw	201
  2546   002AC6  6E0D               	movwf	clcd_putch@addr^0,c
  2547   002AC8  C07B  F006         	movff	_secs,___lwdiv@dividend
  2548   002ACC  C07C  F007         	movff	_secs+1,___lwdiv@dividend+1
  2549   002AD0  0E00               	movlw	0
  2550   002AD2  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2551   002AD4  0E0A               	movlw	10
  2552   002AD6  6E08               	movwf	___lwdiv@divisor^0,c
  2553   002AD8  EC36  F003         	call	___lwdiv	;wreg free
  2554   002ADC  5006               	movf	?___lwdiv^0,w,c
  2555   002ADE  0F30               	addlw	48
  2556   002AE0  ECDD  F000         	call	_clcd_putch
  2557   002AE4                     
  2558                           ;set_time.c: 66:         clcd_putch(':',(0xC0 + (8)));
  2559   002AE4  0EC8               	movlw	200
  2560   002AE6  6E0D               	movwf	clcd_putch@addr^0,c
  2561   002AE8  0E3A               	movlw	58
  2562   002AEA  ECDD  F000         	call	_clcd_putch
  2563   002AEE                     
  2564                           ;set_time.c: 67:         if(blink)
  2565   002AEE  0100               	movlb	0	; () banked
  2566   002AF0  517F               	movf	_blink& (0+255),w,b
  2567   002AF2  1180               	iorwf	(_blink+1)& (0+255),w,b
  2568   002AF4  B4D8               	btfsc	status,2,c
  2569   002AF6  EF7F  F015         	goto	u3721
  2570   002AFA  EF81  F015         	goto	u3720
  2571   002AFE                     u3721:
  2572   002AFE  EFA3  F015         	goto	l5099
  2573   002B02                     u3720:
  2574   002B02                     
  2575                           ; BSR set to: 0
  2576                           ;set_time.c: 68:         {;set_time.c: 69:             clcd_putch(min%10+48,(0xC0 + (7))
      +                          );
  2577   002B02  0EC7               	movlw	199
  2578   002B04  6E0D               	movwf	clcd_putch@addr^0,c
  2579   002B06  C07D  F001         	movff	_min,___lwmod@dividend
  2580   002B0A  C07E  F002         	movff	_min+1,___lwmod@dividend+1
  2581   002B0E  0E00               	movlw	0
  2582   002B10  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2583   002B12  0E0A               	movlw	10
  2584   002B14  6E03               	movwf	___lwmod@divisor^0,c
  2585   002B16  ECCE  F002         	call	___lwmod	;wreg free
  2586   002B1A  5001               	movf	?___lwmod^0,w,c
  2587   002B1C  0F30               	addlw	48
  2588   002B1E  ECDD  F000         	call	_clcd_putch
  2589                           
  2590                           ;set_time.c: 70:             clcd_putch(min/10+48,(0xC0 + (6)));
  2591   002B22  0EC6               	movlw	198
  2592   002B24  6E0D               	movwf	clcd_putch@addr^0,c
  2593   002B26  C07D  F006         	movff	_min,___lwdiv@dividend
  2594   002B2A  C07E  F007         	movff	_min+1,___lwdiv@dividend+1
  2595   002B2E  0E00               	movlw	0
  2596   002B30  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2597   002B32  0E0A               	movlw	10
  2598   002B34  6E08               	movwf	___lwdiv@divisor^0,c
  2599   002B36  EC36  F003         	call	___lwdiv	;wreg free
  2600   002B3A  5006               	movf	?___lwdiv^0,w,c
  2601   002B3C  0F30               	addlw	48
  2602   002B3E  ECDD  F000         	call	_clcd_putch
  2603                           
  2604                           ;set_time.c: 71:         }
  2605   002B42  EF35  F016         	goto	l5119
  2606   002B46                     l5099:
  2607                           
  2608                           ; BSR set to: 0
  2609                           ;set_time.c: 73:         {;set_time.c: 74:             clcd_print("  ",(0xC0 + (6)));
  2610   002B46  0EFC               	movlw	low STR_21
  2611   002B48  6E0C               	movwf	clcd_print@data^0,c
  2612   002B4A  0E2F               	movlw	high STR_21
  2613   002B4C  6E0D               	movwf	(clcd_print@data+1)^0,c
  2614   002B4E  0EC6               	movlw	198
  2615   002B50  6E0E               	movwf	clcd_print@addr^0,c
  2616   002B52  EC00  F003         	call	_clcd_print	;wreg free
  2617   002B56  EF35  F016         	goto	l5119
  2618   002B5A                     l5101:
  2619                           
  2620                           ; BSR set to: 0
  2621   002B5A  0E02               	movlw	2
  2622   002B5C  1981               	xorwf	_field& (0+255),w,b
  2623   002B5E  1182               	iorwf	(_field+1)& (0+255),w,b
  2624   002B60  A4D8               	btfss	status,2,c
  2625   002B62  EFB5  F015         	goto	u3731
  2626   002B66  EFB7  F015         	goto	u3730
  2627   002B6A                     u3731:
  2628   002B6A  EF35  F016         	goto	l5119
  2629   002B6E                     u3730:
  2630   002B6E                     
  2631                           ; BSR set to: 0
  2632                           ;set_time.c: 78:     {;set_time.c: 79:         clcd_putch(secs%10+48,(0xC0 + (10)));
  2633   002B6E  0ECA               	movlw	202
  2634   002B70  6E0D               	movwf	clcd_putch@addr^0,c
  2635   002B72  C07B  F001         	movff	_secs,___lwmod@dividend
  2636   002B76  C07C  F002         	movff	_secs+1,___lwmod@dividend+1
  2637   002B7A  0E00               	movlw	0
  2638   002B7C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2639   002B7E  0E0A               	movlw	10
  2640   002B80  6E03               	movwf	___lwmod@divisor^0,c
  2641   002B82  ECCE  F002         	call	___lwmod	;wreg free
  2642   002B86  5001               	movf	?___lwmod^0,w,c
  2643   002B88  0F30               	addlw	48
  2644   002B8A  ECDD  F000         	call	_clcd_putch
  2645                           
  2646                           ;set_time.c: 80:         clcd_putch(secs/10+48,(0xC0 + (9)));
  2647   002B8E  0EC9               	movlw	201
  2648   002B90  6E0D               	movwf	clcd_putch@addr^0,c
  2649   002B92  C07B  F006         	movff	_secs,___lwdiv@dividend
  2650   002B96  C07C  F007         	movff	_secs+1,___lwdiv@dividend+1
  2651   002B9A  0E00               	movlw	0
  2652   002B9C  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2653   002B9E  0E0A               	movlw	10
  2654   002BA0  6E08               	movwf	___lwdiv@divisor^0,c
  2655   002BA2  EC36  F003         	call	___lwdiv	;wreg free
  2656   002BA6  5006               	movf	?___lwdiv^0,w,c
  2657   002BA8  0F30               	addlw	48
  2658   002BAA  ECDD  F000         	call	_clcd_putch
  2659   002BAE                     
  2660                           ;set_time.c: 81:         clcd_putch(':',(0xC0 + (5)));
  2661   002BAE  0EC5               	movlw	197
  2662   002BB0  6E0D               	movwf	clcd_putch@addr^0,c
  2663   002BB2  0E3A               	movlw	58
  2664   002BB4  ECDD  F000         	call	_clcd_putch
  2665   002BB8                     
  2666                           ;set_time.c: 82:         clcd_putch(min%10+48,(0xC0 + (7)));
  2667   002BB8  0EC7               	movlw	199
  2668   002BBA  6E0D               	movwf	clcd_putch@addr^0,c
  2669   002BBC  C07D  F001         	movff	_min,___lwmod@dividend
  2670   002BC0  C07E  F002         	movff	_min+1,___lwmod@dividend+1
  2671   002BC4  0E00               	movlw	0
  2672   002BC6  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2673   002BC8  0E0A               	movlw	10
  2674   002BCA  6E03               	movwf	___lwmod@divisor^0,c
  2675   002BCC  ECCE  F002         	call	___lwmod	;wreg free
  2676   002BD0  5001               	movf	?___lwmod^0,w,c
  2677   002BD2  0F30               	addlw	48
  2678   002BD4  ECDD  F000         	call	_clcd_putch
  2679   002BD8                     
  2680                           ;set_time.c: 83:         clcd_putch(min/10+48,(0xC0 + (6)));
  2681   002BD8  0EC6               	movlw	198
  2682   002BDA  6E0D               	movwf	clcd_putch@addr^0,c
  2683   002BDC  C07D  F006         	movff	_min,___lwdiv@dividend
  2684   002BE0  C07E  F007         	movff	_min+1,___lwdiv@dividend+1
  2685   002BE4  0E00               	movlw	0
  2686   002BE6  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2687   002BE8  0E0A               	movlw	10
  2688   002BEA  6E08               	movwf	___lwdiv@divisor^0,c
  2689   002BEC  EC36  F003         	call	___lwdiv	;wreg free
  2690   002BF0  5006               	movf	?___lwdiv^0,w,c
  2691   002BF2  0F30               	addlw	48
  2692   002BF4  ECDD  F000         	call	_clcd_putch
  2693   002BF8                     
  2694                           ;set_time.c: 84:         clcd_putch(':',(0xC0 + (8)));
  2695   002BF8  0EC8               	movlw	200
  2696   002BFA  6E0D               	movwf	clcd_putch@addr^0,c
  2697   002BFC  0E3A               	movlw	58
  2698   002BFE  ECDD  F000         	call	_clcd_putch
  2699   002C02                     
  2700                           ;set_time.c: 85:         if(blink)
  2701   002C02  0100               	movlb	0	; () banked
  2702   002C04  517F               	movf	_blink& (0+255),w,b
  2703   002C06  1180               	iorwf	(_blink+1)& (0+255),w,b
  2704   002C08  B4D8               	btfsc	status,2,c
  2705   002C0A  EF09  F016         	goto	u3741
  2706   002C0E  EF0B  F016         	goto	u3740
  2707   002C12                     u3741:
  2708   002C12  EF2D  F016         	goto	l5117
  2709   002C16                     u3740:
  2710   002C16                     
  2711                           ; BSR set to: 0
  2712                           ;set_time.c: 86:         {;set_time.c: 87:             clcd_putch(hr%10+48,(0xC0 + (4)))
      +                          ;
  2713   002C16  0EC4               	movlw	196
  2714   002C18  6E0D               	movwf	clcd_putch@addr^0,c
  2715   002C1A  C079  F001         	movff	_hr,___lwmod@dividend
  2716   002C1E  C07A  F002         	movff	_hr+1,___lwmod@dividend+1
  2717   002C22  0E00               	movlw	0
  2718   002C24  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2719   002C26  0E0A               	movlw	10
  2720   002C28  6E03               	movwf	___lwmod@divisor^0,c
  2721   002C2A  ECCE  F002         	call	___lwmod	;wreg free
  2722   002C2E  5001               	movf	?___lwmod^0,w,c
  2723   002C30  0F30               	addlw	48
  2724   002C32  ECDD  F000         	call	_clcd_putch
  2725                           
  2726                           ;set_time.c: 88:             clcd_putch(hr/10+48,(0xC0 + (3)));
  2727   002C36  0EC3               	movlw	195
  2728   002C38  6E0D               	movwf	clcd_putch@addr^0,c
  2729   002C3A  C079  F006         	movff	_hr,___lwdiv@dividend
  2730   002C3E  C07A  F007         	movff	_hr+1,___lwdiv@dividend+1
  2731   002C42  0E00               	movlw	0
  2732   002C44  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2733   002C46  0E0A               	movlw	10
  2734   002C48  6E08               	movwf	___lwdiv@divisor^0,c
  2735   002C4A  EC36  F003         	call	___lwdiv	;wreg free
  2736   002C4E  5006               	movf	?___lwdiv^0,w,c
  2737   002C50  0F30               	addlw	48
  2738   002C52  ECDD  F000         	call	_clcd_putch
  2739                           
  2740                           ;set_time.c: 89:         }
  2741   002C56  EF35  F016         	goto	l5119
  2742   002C5A                     l5117:
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;set_time.c: 91:         {;set_time.c: 92:             clcd_print("  ",(0xC0 + (3)));
  2746   002C5A  0EFC               	movlw	low STR_21
  2747   002C5C  6E0C               	movwf	clcd_print@data^0,c
  2748   002C5E  0E2F               	movlw	high STR_21
  2749   002C60  6E0D               	movwf	(clcd_print@data+1)^0,c
  2750   002C62  0EC3               	movlw	195
  2751   002C64  6E0E               	movwf	clcd_print@addr^0,c
  2752   002C66  EC00  F003         	call	_clcd_print	;wreg free
  2753   002C6A                     l5119:
  2754                           
  2755                           ;set_time.c: 95:     if(key==11)
  2756   002C6A  0E0B               	movlw	11
  2757   002C6C  1819               	xorwf	set_time@key^0,w,c
  2758   002C6E  A4D8               	btfss	status,2,c
  2759   002C70  EF3C  F016         	goto	u3751
  2760   002C74  EF3E  F016         	goto	u3750
  2761   002C78                     u3751:
  2762   002C78  EF20  F017         	goto	l5153
  2763   002C7C                     u3750:
  2764   002C7C                     
  2765                           ;set_time.c: 96:     {;set_time.c: 97:         if(t==0)
  2766   002C7C  5013               	movf	set_time@t^0,w,c
  2767   002C7E  A4D8               	btfss	status,2,c
  2768   002C80  EF44  F016         	goto	u3761
  2769   002C84  EF46  F016         	goto	u3760
  2770   002C88                     u3761:
  2771   002C88  EF99  F016         	goto	l5135
  2772   002C8C                     u3760:
  2773   002C8C                     
  2774                           ;set_time.c: 98:         {;set_time.c: 99:             if(field==0)
  2775   002C8C  0100               	movlb	0	; () banked
  2776   002C8E  5181               	movf	_field& (0+255),w,b
  2777   002C90  1182               	iorwf	(_field+1)& (0+255),w,b
  2778   002C92  A4D8               	btfss	status,2,c
  2779   002C94  EF4E  F016         	goto	u3771
  2780   002C98  EF50  F016         	goto	u3770
  2781   002C9C                     u3771:
  2782   002C9C  EF62  F016         	goto	l5127
  2783   002CA0                     u3770:
  2784   002CA0                     
  2785                           ; BSR set to: 0
  2786                           ;set_time.c: 100:                 secs=(secs+1)%60;
  2787   002CA0  0E01               	movlw	1
  2788   002CA2  257B               	addwf	_secs& (0+255),w,b
  2789   002CA4  6E01               	movwf	___lwmod@dividend^0,c
  2790   002CA6  0E00               	movlw	0
  2791   002CA8  217C               	addwfc	(_secs+1)& (0+255),w,b
  2792   002CAA  6E02               	movwf	(___lwmod@dividend+1)^0,c
  2793   002CAC  0E00               	movlw	0
  2794   002CAE  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2795   002CB0  0E3C               	movlw	60
  2796   002CB2  6E03               	movwf	___lwmod@divisor^0,c
  2797   002CB4  ECCE  F002         	call	___lwmod	;wreg free
  2798   002CB8  C001  F07B         	movff	?___lwmod,_secs
  2799   002CBC  C002  F07C         	movff	?___lwmod+1,_secs+1
  2800   002CC0  EF5A  F017         	goto	l1217
  2801   002CC4                     l5127:
  2802                           
  2803                           ; BSR set to: 0
  2804   002CC4  0581               	decf	_field& (0+255),w,b
  2805   002CC6  1182               	iorwf	(_field+1)& (0+255),w,b
  2806   002CC8  A4D8               	btfss	status,2,c
  2807   002CCA  EF69  F016         	goto	u3781
  2808   002CCE  EF6B  F016         	goto	u3780
  2809   002CD2                     u3781:
  2810   002CD2  EF7D  F016         	goto	l5131
  2811   002CD6                     u3780:
  2812   002CD6                     
  2813                           ; BSR set to: 0
  2814                           ;set_time.c: 102:                 min=(min+1)%60;
  2815   002CD6  0E01               	movlw	1
  2816   002CD8  257D               	addwf	_min& (0+255),w,b
  2817   002CDA  6E01               	movwf	___lwmod@dividend^0,c
  2818   002CDC  0E00               	movlw	0
  2819   002CDE  217E               	addwfc	(_min+1)& (0+255),w,b
  2820   002CE0  6E02               	movwf	(___lwmod@dividend+1)^0,c
  2821   002CE2  0E00               	movlw	0
  2822   002CE4  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2823   002CE6  0E3C               	movlw	60
  2824   002CE8  6E03               	movwf	___lwmod@divisor^0,c
  2825   002CEA  ECCE  F002         	call	___lwmod	;wreg free
  2826   002CEE  C001  F07D         	movff	?___lwmod,_min
  2827   002CF2  C002  F07E         	movff	?___lwmod+1,_min+1
  2828   002CF6  EF5A  F017         	goto	l1217
  2829   002CFA                     l5131:
  2830                           
  2831                           ; BSR set to: 0
  2832   002CFA  0E02               	movlw	2
  2833   002CFC  1981               	xorwf	_field& (0+255),w,b
  2834   002CFE  1182               	iorwf	(_field+1)& (0+255),w,b
  2835   002D00  A4D8               	btfss	status,2,c
  2836   002D02  EF85  F016         	goto	u3791
  2837   002D06  EF87  F016         	goto	u3790
  2838   002D0A                     u3791:
  2839   002D0A  EF1B  F014         	goto	l5037
  2840   002D0E                     u3790:
  2841   002D0E                     
  2842                           ; BSR set to: 0
  2843                           ;set_time.c: 104:                 hr=(hr+1)%24;
  2844   002D0E  0E01               	movlw	1
  2845   002D10  2579               	addwf	_hr& (0+255),w,b
  2846   002D12  6E01               	movwf	___lwmod@dividend^0,c
  2847   002D14  0E00               	movlw	0
  2848   002D16  217A               	addwfc	(_hr+1)& (0+255),w,b
  2849   002D18  6E02               	movwf	(___lwmod@dividend+1)^0,c
  2850   002D1A  0E00               	movlw	0
  2851   002D1C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2852   002D1E  0E18               	movlw	24
  2853   002D20  6E03               	movwf	___lwmod@divisor^0,c
  2854   002D22  ECCE  F002         	call	___lwmod	;wreg free
  2855   002D26  C001  F079         	movff	?___lwmod,_hr
  2856   002D2A  C002  F07A         	movff	?___lwmod+1,_hr+1
  2857   002D2E  EF5A  F017         	goto	l1217
  2858   002D32                     l5135:
  2859   002D32  0413               	decf	set_time@t^0,w,c
  2860   002D34  A4D8               	btfss	status,2,c
  2861   002D36  EF9F  F016         	goto	u3801
  2862   002D3A  EFA1  F016         	goto	u3800
  2863   002D3E                     u3801:
  2864   002D3E  EF5A  F017         	goto	l1217
  2865   002D42                     u3800:
  2866   002D42                     
  2867                           ;set_time.c: 107:         {;set_time.c: 108:             unsigned char hr_reg = ((hr/10)
      +                          &0xF)<<4 | (hr%10)&0xF;
  2868   002D42  C079  F001         	movff	_hr,___lwmod@dividend
  2869   002D46  C07A  F002         	movff	_hr+1,___lwmod@dividend+1
  2870   002D4A  0E00               	movlw	0
  2871   002D4C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2872   002D4E  0E0A               	movlw	10
  2873   002D50  6E03               	movwf	___lwmod@divisor^0,c
  2874   002D52  ECCE  F002         	call	___lwmod	;wreg free
  2875   002D56  C001  F014         	movff	?___lwmod,??_set_time
  2876   002D5A  C002  F015         	movff	?___lwmod+1,??_set_time+1
  2877   002D5E  0E0F               	movlw	15
  2878   002D60  1614               	andwf	??_set_time^0,f,c
  2879   002D62  C079  F006         	movff	_hr,___lwdiv@dividend
  2880   002D66  C07A  F007         	movff	_hr+1,___lwdiv@dividend+1
  2881   002D6A  0E00               	movlw	0
  2882   002D6C  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2883   002D6E  0E0A               	movlw	10
  2884   002D70  6E08               	movwf	___lwdiv@divisor^0,c
  2885   002D72  EC36  F003         	call	___lwdiv	;wreg free
  2886   002D76  0E0F               	movlw	15
  2887   002D78  1606               	andwf	?___lwdiv^0,f,c
  2888   002D7A  3806               	swapf	?___lwdiv^0,w,c
  2889   002D7C  0BF0               	andlw	240
  2890   002D7E  1014               	iorwf	??_set_time^0,w,c
  2891   002D80  6E16               	movwf	set_time@hr_reg^0,c
  2892                           
  2893                           ;set_time.c: 109:             unsigned char min_reg = ((min/10)&0xF)<<4 | (min%10)&0xF;
  2894   002D82  C07D  F001         	movff	_min,___lwmod@dividend
  2895   002D86  C07E  F002         	movff	_min+1,___lwmod@dividend+1
  2896   002D8A  0E00               	movlw	0
  2897   002D8C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2898   002D8E  0E0A               	movlw	10
  2899   002D90  6E03               	movwf	___lwmod@divisor^0,c
  2900   002D92  ECCE  F002         	call	___lwmod	;wreg free
  2901   002D96  C001  F014         	movff	?___lwmod,??_set_time
  2902   002D9A  C002  F015         	movff	?___lwmod+1,??_set_time+1
  2903   002D9E  0E0F               	movlw	15
  2904   002DA0  1614               	andwf	??_set_time^0,f,c
  2905   002DA2  C07D  F006         	movff	_min,___lwdiv@dividend
  2906   002DA6  C07E  F007         	movff	_min+1,___lwdiv@dividend+1
  2907   002DAA  0E00               	movlw	0
  2908   002DAC  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2909   002DAE  0E0A               	movlw	10
  2910   002DB0  6E08               	movwf	___lwdiv@divisor^0,c
  2911   002DB2  EC36  F003         	call	___lwdiv	;wreg free
  2912   002DB6  0E0F               	movlw	15
  2913   002DB8  1606               	andwf	?___lwdiv^0,f,c
  2914   002DBA  3806               	swapf	?___lwdiv^0,w,c
  2915   002DBC  0BF0               	andlw	240
  2916   002DBE  1014               	iorwf	??_set_time^0,w,c
  2917   002DC0  6E17               	movwf	set_time@min_reg^0,c
  2918                           
  2919                           ;set_time.c: 110:             unsigned char sec_reg = ((secs/10)&0xF)<<4 | (secs%10)&0xF
      +                          ;
  2920   002DC2  C07B  F001         	movff	_secs,___lwmod@dividend
  2921   002DC6  C07C  F002         	movff	_secs+1,___lwmod@dividend+1
  2922   002DCA  0E00               	movlw	0
  2923   002DCC  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2924   002DCE  0E0A               	movlw	10
  2925   002DD0  6E03               	movwf	___lwmod@divisor^0,c
  2926   002DD2  ECCE  F002         	call	___lwmod	;wreg free
  2927   002DD6  C001  F014         	movff	?___lwmod,??_set_time
  2928   002DDA  C002  F015         	movff	?___lwmod+1,??_set_time+1
  2929   002DDE  0E0F               	movlw	15
  2930   002DE0  1614               	andwf	??_set_time^0,f,c
  2931   002DE2  C07B  F006         	movff	_secs,___lwdiv@dividend
  2932   002DE6  C07C  F007         	movff	_secs+1,___lwdiv@dividend+1
  2933   002DEA  0E00               	movlw	0
  2934   002DEC  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2935   002DEE  0E0A               	movlw	10
  2936   002DF0  6E08               	movwf	___lwdiv@divisor^0,c
  2937   002DF2  EC36  F003         	call	___lwdiv	;wreg free
  2938   002DF6  0E0F               	movlw	15
  2939   002DF8  1606               	andwf	?___lwdiv^0,f,c
  2940   002DFA  3806               	swapf	?___lwdiv^0,w,c
  2941   002DFC  0BF0               	andlw	240
  2942   002DFE  1014               	iorwf	??_set_time^0,w,c
  2943   002E00  6E18               	movwf	set_time@sec_reg^0,c
  2944   002E02                     
  2945                           ;set_time.c: 112:             write_ds1307(0x02, hr_reg);
  2946   002E02  C016  F002         	movff	set_time@hr_reg,write_ds1307@data
  2947   002E06  0E02               	movlw	2
  2948   002E08  EC11  F001         	call	_write_ds1307
  2949   002E0C                     
  2950                           ;set_time.c: 113:             write_ds1307(0x01, min_reg);
  2951   002E0C  C017  F002         	movff	set_time@min_reg,write_ds1307@data
  2952   002E10  0E01               	movlw	1
  2953   002E12  EC11  F001         	call	_write_ds1307
  2954   002E16                     
  2955                           ;set_time.c: 114:             write_ds1307(0x00, sec_reg);
  2956   002E16  C018  F002         	movff	set_time@sec_reg,write_ds1307@data
  2957   002E1A  0E00               	movlw	0
  2958   002E1C  EC11  F001         	call	_write_ds1307
  2959   002E20                     
  2960                           ;set_time.c: 115:             timeout=2;
  2961   002E20  0E00               	movlw	0
  2962   002E22  0100               	movlb	0	; () banked
  2963   002E24  6F98               	movwf	(_timeout+1)& (0+255),b
  2964   002E26  0E02               	movlw	2
  2965   002E28  6F97               	movwf	_timeout& (0+255),b
  2966   002E2A                     
  2967                           ; BSR set to: 0
  2968                           ;set_time.c: 116:             tc_flag=1;
  2969   002E2A  0E00               	movlw	0
  2970   002E2C  6F70               	movwf	(set_time@tc_flag+1)& (0+255),b
  2971   002E2E  0E01               	movlw	1
  2972   002E30  6F6F               	movwf	set_time@tc_flag& (0+255),b
  2973   002E32                     
  2974                           ; BSR set to: 0
  2975                           ;set_time.c: 117:             clcd_write(0x01, 0);
  2976   002E32  0E00               	movlw	0
  2977   002E34  6E01               	movwf	clcd_write@control_bit^0,c
  2978   002E36  0E01               	movlw	1
  2979   002E38  EC7D  F001         	call	_clcd_write
  2980   002E3C  EF5A  F017         	goto	l1217
  2981   002E40                     l5153:
  2982   002E40  0E0C               	movlw	12
  2983   002E42  1819               	xorwf	set_time@key^0,w,c
  2984   002E44  A4D8               	btfss	status,2,c
  2985   002E46  EF27  F017         	goto	u3811
  2986   002E4A  EF29  F017         	goto	u3810
  2987   002E4E                     u3811:
  2988   002E4E  EF5A  F017         	goto	l1217
  2989   002E52                     u3810:
  2990   002E52                     
  2991                           ;set_time.c: 122:     {;set_time.c: 123:         if(t==0)
  2992   002E52  5013               	movf	set_time@t^0,w,c
  2993   002E54  A4D8               	btfss	status,2,c
  2994   002E56  EF2F  F017         	goto	u3821
  2995   002E5A  EF31  F017         	goto	u3820
  2996   002E5E                     u3821:
  2997   002E5E  EF44  F017         	goto	l5159
  2998   002E62                     u3820:
  2999   002E62                     
  3000                           ;set_time.c: 124:         {;set_time.c: 125:             field=(field+1)%3;
  3001   002E62  0E01               	movlw	1
  3002   002E64  0100               	movlb	0	; () banked
  3003   002E66  2581               	addwf	_field& (0+255),w,b
  3004   002E68  6E01               	movwf	___lwmod@dividend^0,c
  3005   002E6A  0E00               	movlw	0
  3006   002E6C  2182               	addwfc	(_field+1)& (0+255),w,b
  3007   002E6E  6E02               	movwf	(___lwmod@dividend+1)^0,c
  3008   002E70  0E00               	movlw	0
  3009   002E72  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3010   002E74  0E03               	movlw	3
  3011   002E76  6E03               	movwf	___lwmod@divisor^0,c
  3012   002E78  ECCE  F002         	call	___lwmod	;wreg free
  3013   002E7C  C001  F081         	movff	?___lwmod,_field
  3014   002E80  C002  F082         	movff	?___lwmod+1,_field+1
  3015                           
  3016                           ;set_time.c: 126:         }
  3017   002E84  EF5A  F017         	goto	l1217
  3018   002E88                     l5159:
  3019   002E88  0413               	decf	set_time@t^0,w,c
  3020   002E8A  A4D8               	btfss	status,2,c
  3021   002E8C  EF4A  F017         	goto	u3831
  3022   002E90  EF4C  F017         	goto	u3830
  3023   002E94                     u3831:
  3024   002E94  EF5A  F017         	goto	l1217
  3025   002E98                     u3830:
  3026   002E98                     
  3027                           ;set_time.c: 128:         {;set_time.c: 129:             timeout=2;
  3028   002E98  0E00               	movlw	0
  3029   002E9A  0100               	movlb	0	; () banked
  3030   002E9C  6F98               	movwf	(_timeout+1)& (0+255),b
  3031   002E9E  0E02               	movlw	2
  3032   002EA0  6F97               	movwf	_timeout& (0+255),b
  3033                           
  3034                           ;set_time.c: 130:             tc_flag=2;
  3035   002EA2  0E00               	movlw	0
  3036   002EA4  6F70               	movwf	(set_time@tc_flag+1)& (0+255),b
  3037   002EA6  0E02               	movlw	2
  3038   002EA8  6F6F               	movwf	set_time@tc_flag& (0+255),b
  3039   002EAA                     
  3040                           ; BSR set to: 0
  3041                           ;set_time.c: 131:             clcd_write(0x01, 0);
  3042   002EAA  0E00               	movlw	0
  3043   002EAC  6E01               	movwf	clcd_write@control_bit^0,c
  3044   002EAE  0E01               	movlw	1
  3045   002EB0  EC7D  F001         	call	_clcd_write
  3046   002EB4                     l1217:
  3047   002EB4  0012               	return		;funcret
  3048   002EB6                     __end_of_set_time:
  3049                           	callstack 0
  3050                           
  3051 ;; *************** function _read_switches *****************
  3052 ;; Defined at:
  3053 ;;		line 9 in file "matrix_keypad.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;  detection       1    wreg     unsigned char 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  detection       1    0[COMRAM] unsigned char 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      unsigned char 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, status,0, cstack
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3067 ;;      Params:         0       0       0       0       0       0       0
  3068 ;;      Locals:         1       0       0       0       0       0       0
  3069 ;;      Temps:          0       0       0       0       0       0       0
  3070 ;;      Totals:         1       0       0       0       0       0       0
  3071 ;;Total ram usage:        1 bytes
  3072 ;; Hardware stack levels used: 1
  3073 ;; Hardware stack levels required when called: 1
  3074 ;; This function calls:
  3075 ;;		_scan_key
  3076 ;; This function is called by:
  3077 ;;		_main
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text3
  3082   0006E0                     __ptext3:
  3083                           	callstack 0
  3084   0006E0                     _read_switches:
  3085                           	callstack 29
  3086                           
  3087                           ;incstack = 0
  3088                           ;read_switches@detection stored from wreg
  3089   0006E0  6E01               	movwf	read_switches@detection^0,c
  3090   0006E2                     
  3091                           ;matrix_keypad.c: 9: unsigned char read_switches(unsigned char detection);matrix_keypad.
      +                          c: 10: {;matrix_keypad.c: 11:     static unsigned char once=1, key;;matrix_keypad.c: 12:
      +                               if(detection == 0)
  3092   0006E2  5001               	movf	read_switches@detection^0,w,c
  3093   0006E4  A4D8               	btfss	status,2,c
  3094   0006E6  EF77  F003         	goto	u3111
  3095   0006EA  EF79  F003         	goto	u3110
  3096   0006EE                     u3111:
  3097   0006EE  EF7D  F003         	goto	l4627
  3098   0006F2                     u3110:
  3099   0006F2                     
  3100                           ;matrix_keypad.c: 13:     {;matrix_keypad.c: 14:         return scan_key();
  3101   0006F2  EC5C  F005         	call	_scan_key	;wreg free
  3102   0006F6  EFAB  F003         	goto	l941
  3103   0006FA                     l4627:
  3104   0006FA  0401               	decf	read_switches@detection^0,w,c
  3105   0006FC  A4D8               	btfss	status,2,c
  3106   0006FE  EF83  F003         	goto	u3121
  3107   000702  EF85  F003         	goto	u3120
  3108   000706                     u3121:
  3109   000706  EFAA  F003         	goto	l4645
  3110   00070A                     u3120:
  3111   00070A                     
  3112                           ;matrix_keypad.c: 17:     {;matrix_keypad.c: 18:         key=scan_key();
  3113   00070A  EC5C  F005         	call	_scan_key	;wreg free
  3114   00070E  0100               	movlb	0	; () banked
  3115   000710  6FA3               	movwf	read_switches@key& (0+255),b
  3116   000712                     
  3117                           ; BSR set to: 0
  3118                           ;matrix_keypad.c: 19:         if (key != 0xFF && once)
  3119   000712  29A3               	incf	read_switches@key& (0+255),w,b
  3120   000714  B4D8               	btfsc	status,2,c
  3121   000716  EF8F  F003         	goto	u3131
  3122   00071A  EF91  F003         	goto	u3130
  3123   00071E                     u3131:
  3124   00071E  EF9E  F003         	goto	l4641
  3125   000722                     u3130:
  3126   000722                     
  3127                           ; BSR set to: 0
  3128   000722  51D5               	movf	read_switches@once& (0+255),w,b
  3129   000724  B4D8               	btfsc	status,2,c
  3130   000726  EF97  F003         	goto	u3141
  3131   00072A  EF99  F003         	goto	u3140
  3132   00072E                     u3141:
  3133   00072E  EF9E  F003         	goto	l4641
  3134   000732                     u3140:
  3135   000732                     
  3136                           ; BSR set to: 0
  3137                           ;matrix_keypad.c: 20:         {;matrix_keypad.c: 21:             once=0;
  3138   000732  0E00               	movlw	0
  3139   000734  6FD5               	movwf	read_switches@once& (0+255),b
  3140                           
  3141                           ;matrix_keypad.c: 22:             return key;
  3142   000736  51A3               	movf	read_switches@key& (0+255),w,b
  3143   000738  EFAB  F003         	goto	l941
  3144   00073C                     l4641:
  3145                           
  3146                           ; BSR set to: 0
  3147   00073C  29A3               	incf	read_switches@key& (0+255),w,b
  3148   00073E  A4D8               	btfss	status,2,c
  3149   000740  EFA4  F003         	goto	u3151
  3150   000744  EFA6  F003         	goto	u3150
  3151   000748                     u3151:
  3152   000748  EFAA  F003         	goto	l943
  3153   00074C                     u3150:
  3154   00074C                     
  3155                           ; BSR set to: 0
  3156                           ;matrix_keypad.c: 25:             once=1;
  3157   00074C  0E01               	movlw	1
  3158   00074E  6FD5               	movwf	read_switches@once& (0+255),b
  3159   000750  EFAA  F003         	goto	l4645
  3160   000754                     l943:
  3161   000754                     l4645:
  3162                           
  3163                           ;matrix_keypad.c: 27:     return 0xFF;
  3164   000754  0EFF               	movlw	255
  3165   000756                     l941:
  3166   000756  0012               	return		;funcret
  3167   000758                     __end_of_read_switches:
  3168                           	callstack 0
  3169                           
  3170 ;; *************** function _password *****************
  3171 ;; Defined at:
  3172 ;;		line 3 in file "password.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  key             1    wreg     unsigned char 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;  key             1   21[COMRAM] unsigned char 
  3177 ;;  j               2   22[COMRAM] int 
  3178 ;;  e_password      5   16[COMRAM] unsigned char [5]
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  1    wreg      void 
  3181 ;; Registers used:
  3182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3188 ;;      Params:         0       0       0       0       0       0       0
  3189 ;;      Locals:         8       0       0       0       0       0       0
  3190 ;;      Temps:          2       0       0       0       0       0       0
  3191 ;;      Totals:        10       0       0       0       0       0       0
  3192 ;;Total ram usage:       10 bytes
  3193 ;; Hardware stack levels used: 1
  3194 ;; Hardware stack levels required when called: 2
  3195 ;; This function calls:
  3196 ;;		___lwdiv
  3197 ;;		___lwmod
  3198 ;;		_clcd_print
  3199 ;;		_clcd_putch
  3200 ;;		_clcd_write
  3201 ;; This function is called by:
  3202 ;;		_main
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           	psect	text4
  3207   001BF2                     __ptext4:
  3208                           	callstack 0
  3209   001BF2                     _password:
  3210                           	callstack 28
  3211                           
  3212                           ;incstack = 0
  3213                           ;password@key stored from wreg
  3214   001BF2  6E16               	movwf	password@key^0,c
  3215   001BF4                     
  3216                           ;password.c: 3: void password(unsigned char key);password.c: 4: {;password.c: 5:     uns
      +                          igned char e_password[5];;password.c: 6:     static int pa_flag=0;;password.c: 7:     if
      +                          (pa_flag==1)
  3217   001BF4  0100               	movlb	0	; () banked
  3218   001BF6  0571               	decf	password@pa_flag& (0+255),w,b
  3219   001BF8  1172               	iorwf	(password@pa_flag+1)& (0+255),w,b
  3220   001BFA  A4D8               	btfss	status,2,c
  3221   001BFC  EF02  F00E         	goto	u3161
  3222   001C00  EF04  F00E         	goto	u3160
  3223   001C04                     u3161:
  3224   001C04  EF6C  F00E         	goto	l4681
  3225   001C08                     u3160:
  3226   001C08                     
  3227                           ; BSR set to: 0
  3228                           ;password.c: 8:     {;password.c: 9:         if(success==1)
  3229   001C08  0591               	decf	_success& (0+255),w,b
  3230   001C0A  1192               	iorwf	(_success+1)& (0+255),w,b
  3231   001C0C  A4D8               	btfss	status,2,c
  3232   001C0E  EF0B  F00E         	goto	u3171
  3233   001C12  EF0D  F00E         	goto	u3170
  3234   001C16                     u3171:
  3235   001C16  EF37  F00E         	goto	l4667
  3236   001C1A                     u3170:
  3237   001C1A                     
  3238                           ; BSR set to: 0
  3239                           ;password.c: 10:         {;password.c: 11:             clcd_print("Access Granted", (0x8
      +                          0 + (0)));
  3240   001C1A  0E3A               	movlw	low STR_8
  3241   001C1C  6E0C               	movwf	clcd_print@data^0,c
  3242   001C1E  0E2F               	movlw	high STR_8
  3243   001C20  6E0D               	movwf	(clcd_print@data+1)^0,c
  3244   001C22  0E80               	movlw	128
  3245   001C24  6E0E               	movwf	clcd_print@addr^0,c
  3246   001C26  EC00  F003         	call	_clcd_print	;wreg free
  3247                           
  3248                           ;password.c: 12:             clcd_print("****",(0xC0 + (0)));
  3249   001C2A  0EEC               	movlw	low STR_9
  3250   001C2C  6E0C               	movwf	clcd_print@data^0,c
  3251   001C2E  0E2F               	movlw	high STR_9
  3252   001C30  6E0D               	movwf	(clcd_print@data+1)^0,c
  3253   001C32  0EC0               	movlw	192
  3254   001C34  6E0E               	movwf	clcd_print@addr^0,c
  3255   001C36  EC00  F003         	call	_clcd_print	;wreg free
  3256   001C3A                     
  3257                           ;password.c: 13:             if(timeout==0)
  3258   001C3A  0100               	movlb	0	; () banked
  3259   001C3C  5197               	movf	_timeout& (0+255),w,b
  3260   001C3E  1198               	iorwf	(_timeout+1)& (0+255),w,b
  3261   001C40  A4D8               	btfss	status,2,c
  3262   001C42  EF25  F00E         	goto	u3181
  3263   001C46  EF27  F00E         	goto	u3180
  3264   001C4A                     u3181:
  3265   001C4A  EFD5  F00F         	goto	l1125
  3266   001C4E                     u3180:
  3267   001C4E                     
  3268                           ; BSR set to: 0
  3269                           ;password.c: 14:             {;password.c: 15:                 clcd_write(0x01, 0);
  3270   001C4E  0E00               	movlw	0
  3271   001C50  6E01               	movwf	clcd_write@control_bit^0,c
  3272   001C52  0E01               	movlw	1
  3273   001C54  EC7D  F001         	call	_clcd_write
  3274   001C58                     
  3275                           ;password.c: 16:                 main_f=2;
  3276   001C58  0E00               	movlw	0
  3277   001C5A  0100               	movlb	0	; () banked
  3278   001C5C  6FA2               	movwf	(_main_f+1)& (0+255),b
  3279   001C5E  0E02               	movlw	2
  3280   001C60  6FA1               	movwf	_main_f& (0+255),b
  3281   001C62                     
  3282                           ; BSR set to: 0
  3283                           ;password.c: 17:                 pa_flag=0;
  3284   001C62  0E00               	movlw	0
  3285   001C64  6F72               	movwf	(password@pa_flag+1)& (0+255),b
  3286   001C66  0E00               	movlw	0
  3287   001C68  6F71               	movwf	password@pa_flag& (0+255),b
  3288   001C6A  EFD5  F00F         	goto	l1125
  3289   001C6E                     l4667:
  3290                           
  3291                           ; BSR set to: 0
  3292   001C6E  5191               	movf	_success& (0+255),w,b
  3293   001C70  1192               	iorwf	(_success+1)& (0+255),w,b
  3294   001C72  A4D8               	btfss	status,2,c
  3295   001C74  EF3E  F00E         	goto	u3191
  3296   001C78  EF40  F00E         	goto	u3190
  3297   001C7C                     u3191:
  3298   001C7C  EF6C  F00E         	goto	l4681
  3299   001C80                     u3190:
  3300   001C80                     
  3301                           ; BSR set to: 0
  3302                           ;password.c: 22:         {;password.c: 23:             clcd_print("Attempt Failed", (0x8
      +                          0 + (0)));
  3303   001C80  0E2B               	movlw	low STR_10
  3304   001C82  6E0C               	movwf	clcd_print@data^0,c
  3305   001C84  0E2F               	movlw	high STR_10
  3306   001C86  6E0D               	movwf	(clcd_print@data+1)^0,c
  3307   001C88  0E80               	movlw	128
  3308   001C8A  6E0E               	movwf	clcd_print@addr^0,c
  3309   001C8C  EC00  F003         	call	_clcd_print	;wreg free
  3310                           
  3311                           ;password.c: 24:             clcd_print("Attempt Left - ", (0xC0 + (0)));
  3312   001C90  0EFD               	movlw	low STR_11
  3313   001C92  6E0C               	movwf	clcd_print@data^0,c
  3314   001C94  0E2E               	movlw	high STR_11
  3315   001C96  6E0D               	movwf	(clcd_print@data+1)^0,c
  3316   001C98  0EC0               	movlw	192
  3317   001C9A  6E0E               	movwf	clcd_print@addr^0,c
  3318   001C9C  EC00  F003         	call	_clcd_print	;wreg free
  3319   001CA0                     
  3320                           ;password.c: 25:             clcd_putch((unsigned char)attempts+48,(0xC0 + (15)));
  3321   001CA0  0ECF               	movlw	207
  3322   001CA2  6E0D               	movwf	clcd_putch@addr^0,c
  3323   001CA4  0100               	movlb	0	; () banked
  3324   001CA6  51D3               	movf	_attempts& (0+255),w,b
  3325   001CA8  0F30               	addlw	48
  3326   001CAA  ECDD  F000         	call	_clcd_putch
  3327   001CAE                     
  3328                           ;password.c: 26:             if(timeout==0)
  3329   001CAE  0100               	movlb	0	; () banked
  3330   001CB0  5197               	movf	_timeout& (0+255),w,b
  3331   001CB2  1198               	iorwf	(_timeout+1)& (0+255),w,b
  3332   001CB4  A4D8               	btfss	status,2,c
  3333   001CB6  EF5F  F00E         	goto	u3201
  3334   001CBA  EF61  F00E         	goto	u3200
  3335   001CBE                     u3201:
  3336   001CBE  EFD5  F00F         	goto	l1125
  3337   001CC2                     u3200:
  3338   001CC2                     
  3339                           ; BSR set to: 0
  3340                           ;password.c: 27:             {;password.c: 28:                 pa_flag=0;
  3341   001CC2  0E00               	movlw	0
  3342   001CC4  6F72               	movwf	(password@pa_flag+1)& (0+255),b
  3343   001CC6  0E00               	movlw	0
  3344   001CC8  6F71               	movwf	password@pa_flag& (0+255),b
  3345   001CCA                     
  3346                           ; BSR set to: 0
  3347                           ;password.c: 29:                 clcd_write(0x01, 0);
  3348   001CCA  0E00               	movlw	0
  3349   001CCC  6E01               	movwf	clcd_write@control_bit^0,c
  3350   001CCE  0E01               	movlw	1
  3351   001CD0  EC7D  F001         	call	_clcd_write
  3352   001CD4  EFD5  F00F         	goto	l1125
  3353   001CD8                     l4681:
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;password.c: 34:     if(timeout==1)
  3357   001CD8  0597               	decf	_timeout& (0+255),w,b
  3358   001CDA  1198               	iorwf	(_timeout+1)& (0+255),w,b
  3359   001CDC  A4D8               	btfss	status,2,c
  3360   001CDE  EF73  F00E         	goto	u3211
  3361   001CE2  EF75  F00E         	goto	u3210
  3362   001CE6                     u3211:
  3363   001CE6  EF84  F00E         	goto	l4689
  3364   001CEA                     u3210:
  3365   001CEA                     
  3366                           ; BSR set to: 0
  3367                           ;password.c: 35:     {;password.c: 36:         main_f=0;
  3368   001CEA  0E00               	movlw	0
  3369   001CEC  6FA2               	movwf	(_main_f+1)& (0+255),b
  3370   001CEE  0E00               	movlw	0
  3371   001CF0  6FA1               	movwf	_main_f& (0+255),b
  3372                           
  3373                           ;password.c: 37:         pass_index=0;
  3374   001CF2  0E00               	movlw	0
  3375   001CF4  6F94               	movwf	(_pass_index+1)& (0+255),b
  3376   001CF6  0E00               	movlw	0
  3377   001CF8  6F93               	movwf	_pass_index& (0+255),b
  3378   001CFA                     
  3379                           ; BSR set to: 0
  3380                           ;password.c: 38:         clcd_write(0x01, 0);
  3381   001CFA  0E00               	movlw	0
  3382   001CFC  6E01               	movwf	clcd_write@control_bit^0,c
  3383   001CFE  0E01               	movlw	1
  3384   001D00  EC7D  F001         	call	_clcd_write
  3385   001D04  EFD5  F00F         	goto	l1125
  3386   001D08                     l4689:
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;password.c: 41:     if(attempts==0)
  3390   001D08  51D3               	movf	_attempts& (0+255),w,b
  3391   001D0A  11D4               	iorwf	(_attempts+1)& (0+255),w,b
  3392   001D0C  A4D8               	btfss	status,2,c
  3393   001D0E  EF8B  F00E         	goto	u3221
  3394   001D12  EF8D  F00E         	goto	u3220
  3395   001D16                     u3221:
  3396   001D16  EFF8  F00E         	goto	l4709
  3397   001D1A                     u3220:
  3398   001D1A                     
  3399                           ; BSR set to: 0
  3400                           ;password.c: 42:     {;password.c: 43:         clcd_print("Try after...", (0x80 + (0)));
  3401   001D1A  0E7F               	movlw	low STR_12
  3402   001D1C  6E0C               	movwf	clcd_print@data^0,c
  3403   001D1E  0E2F               	movlw	high STR_12
  3404   001D20  6E0D               	movwf	(clcd_print@data+1)^0,c
  3405   001D22  0E80               	movlw	128
  3406   001D24  6E0E               	movwf	clcd_print@addr^0,c
  3407   001D26  EC00  F003         	call	_clcd_print	;wreg free
  3408                           
  3409                           ;password.c: 44:         clcd_print("Retry in ", (0xC0 + (0)));
  3410   001D2A  0EC6               	movlw	low STR_13
  3411   001D2C  6E0C               	movwf	clcd_print@data^0,c
  3412   001D2E  0E2F               	movlw	high STR_13
  3413   001D30  6E0D               	movwf	(clcd_print@data+1)^0,c
  3414   001D32  0EC0               	movlw	192
  3415   001D34  6E0E               	movwf	clcd_print@addr^0,c
  3416   001D36  EC00  F003         	call	_clcd_print	;wreg free
  3417   001D3A                     
  3418                           ;password.c: 45:         clcd_putch(sec/100+48, (0xC0 + (9)));
  3419   001D3A  0EC9               	movlw	201
  3420   001D3C  6E0D               	movwf	clcd_putch@addr^0,c
  3421   001D3E  C09D  F006         	movff	_sec,___lwdiv@dividend
  3422   001D42  C09E  F007         	movff	_sec+1,___lwdiv@dividend+1
  3423   001D46  0E00               	movlw	0
  3424   001D48  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  3425   001D4A  0E64               	movlw	100
  3426   001D4C  6E08               	movwf	___lwdiv@divisor^0,c
  3427   001D4E  EC36  F003         	call	___lwdiv	;wreg free
  3428   001D52  5006               	movf	?___lwdiv^0,w,c
  3429   001D54  0F30               	addlw	48
  3430   001D56  ECDD  F000         	call	_clcd_putch
  3431   001D5A                     
  3432                           ;password.c: 46:         clcd_putch((sec%100)/10+48, (0xC0 + (10)));
  3433   001D5A  0ECA               	movlw	202
  3434   001D5C  6E0D               	movwf	clcd_putch@addr^0,c
  3435   001D5E  0E00               	movlw	0
  3436   001D60  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3437   001D62  0E64               	movlw	100
  3438   001D64  6E03               	movwf	___lwmod@divisor^0,c
  3439   001D66  C09D  F001         	movff	_sec,___lwmod@dividend
  3440   001D6A  C09E  F002         	movff	_sec+1,___lwmod@dividend+1
  3441   001D6E  ECCE  F002         	call	___lwmod	;wreg free
  3442   001D72  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  3443   001D76  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  3444   001D7A  0E00               	movlw	0
  3445   001D7C  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  3446   001D7E  0E0A               	movlw	10
  3447   001D80  6E08               	movwf	___lwdiv@divisor^0,c
  3448   001D82  EC36  F003         	call	___lwdiv	;wreg free
  3449   001D86  5006               	movf	?___lwdiv^0,w,c
  3450   001D88  0F30               	addlw	48
  3451   001D8A  ECDD  F000         	call	_clcd_putch
  3452   001D8E                     
  3453                           ;password.c: 47:         clcd_putch(sec%10+48, (0xC0 + (11)));
  3454   001D8E  0ECB               	movlw	203
  3455   001D90  6E0D               	movwf	clcd_putch@addr^0,c
  3456   001D92  C09D  F001         	movff	_sec,___lwmod@dividend
  3457   001D96  C09E  F002         	movff	_sec+1,___lwmod@dividend+1
  3458   001D9A  0E00               	movlw	0
  3459   001D9C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3460   001D9E  0E0A               	movlw	10
  3461   001DA0  6E03               	movwf	___lwmod@divisor^0,c
  3462   001DA2  ECCE  F002         	call	___lwmod	;wreg free
  3463   001DA6  5001               	movf	?___lwmod^0,w,c
  3464   001DA8  0F30               	addlw	48
  3465   001DAA  ECDD  F000         	call	_clcd_putch
  3466   001DAE                     
  3467                           ;password.c: 48:         clcd_print("secs", (0xC0 + (12)));
  3468   001DAE  0EF1               	movlw	low STR_14
  3469   001DB0  6E0C               	movwf	clcd_print@data^0,c
  3470   001DB2  0E2F               	movlw	high STR_14
  3471   001DB4  6E0D               	movwf	(clcd_print@data+1)^0,c
  3472   001DB6  0ECC               	movlw	204
  3473   001DB8  6E0E               	movwf	clcd_print@addr^0,c
  3474   001DBA  EC00  F003         	call	_clcd_print	;wreg free
  3475   001DBE                     
  3476                           ;password.c: 49:         if(sec==0)
  3477   001DBE  0100               	movlb	0	; () banked
  3478   001DC0  519D               	movf	_sec& (0+255),w,b
  3479   001DC2  119E               	iorwf	(_sec+1)& (0+255),w,b
  3480   001DC4  A4D8               	btfss	status,2,c
  3481   001DC6  EFE7  F00E         	goto	u3231
  3482   001DCA  EFE9  F00E         	goto	u3230
  3483   001DCE                     u3231:
  3484   001DCE  EFD5  F00F         	goto	l1125
  3485   001DD2                     u3230:
  3486   001DD2                     
  3487                           ; BSR set to: 0
  3488                           ;password.c: 50:         {;password.c: 51:             attempts=3;
  3489   001DD2  0E00               	movlw	0
  3490   001DD4  6FD4               	movwf	(_attempts+1)& (0+255),b
  3491   001DD6  0E03               	movlw	3
  3492   001DD8  6FD3               	movwf	_attempts& (0+255),b
  3493                           
  3494                           ;password.c: 52:             main_f=0;
  3495   001DDA  0E00               	movlw	0
  3496   001DDC  6FA2               	movwf	(_main_f+1)& (0+255),b
  3497   001DDE  0E00               	movlw	0
  3498   001DE0  6FA1               	movwf	_main_f& (0+255),b
  3499   001DE2                     
  3500                           ; BSR set to: 0
  3501                           ;password.c: 53:             clcd_write(0x01, 0);
  3502   001DE2  0E00               	movlw	0
  3503   001DE4  6E01               	movwf	clcd_write@control_bit^0,c
  3504   001DE6  0E01               	movlw	1
  3505   001DE8  EC7D  F001         	call	_clcd_write
  3506   001DEC  EFD5  F00F         	goto	l1125
  3507   001DF0                     l4709:
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;password.c: 57:     if(clear_dis==1)
  3511   001DF0  0595               	decf	_clear_dis& (0+255),w,b
  3512   001DF2  1196               	iorwf	(_clear_dis+1)& (0+255),w,b
  3513   001DF4  A4D8               	btfss	status,2,c
  3514   001DF6  EFFF  F00E         	goto	u3241
  3515   001DFA  EF01  F00F         	goto	u3240
  3516   001DFE                     u3241:
  3517   001DFE  EF0C  F00F         	goto	l4717
  3518   001E02                     u3240:
  3519   001E02                     
  3520                           ; BSR set to: 0
  3521                           ;password.c: 58:     {;password.c: 59:         clear_dis=0;
  3522   001E02  0E00               	movlw	0
  3523   001E04  6F96               	movwf	(_clear_dis+1)& (0+255),b
  3524   001E06  0E00               	movlw	0
  3525   001E08  6F95               	movwf	_clear_dis& (0+255),b
  3526   001E0A                     
  3527                           ; BSR set to: 0
  3528                           ;password.c: 60:         clcd_write(0x01, 0);
  3529   001E0A  0E00               	movlw	0
  3530   001E0C  6E01               	movwf	clcd_write@control_bit^0,c
  3531   001E0E  0E01               	movlw	1
  3532   001E10  EC7D  F001         	call	_clcd_write
  3533   001E14                     
  3534                           ;password.c: 61:         key=0;
  3535   001E14  0E00               	movlw	0
  3536   001E16  6E16               	movwf	password@key^0,c
  3537   001E18                     l4717:
  3538                           
  3539                           ;password.c: 63:     if(pass_index<4)
  3540   001E18  0100               	movlb	0	; () banked
  3541   001E1A  5194               	movf	(_pass_index+1)& (0+255),w,b
  3542   001E1C  E107               	bnz	u3251
  3543   001E1E  0E04               	movlw	4
  3544   001E20  5D93               	subwf	_pass_index& (0+255),w,b
  3545   001E22  B0D8               	btfsc	status,0,c
  3546   001E24  EF16  F00F         	goto	u3251
  3547   001E28  EF18  F00F         	goto	u3250
  3548   001E2C                     u3251:
  3549   001E2C  EF72  F00F         	goto	l4747
  3550   001E30                     u3250:
  3551   001E30                     
  3552                           ; BSR set to: 0
  3553                           ;password.c: 64:     {;password.c: 65:         clcd_print("ENTER PASSWORD", (0x80 + (0))
      +                          );
  3554   001E30  0E1C               	movlw	low STR_15
  3555   001E32  6E0C               	movwf	clcd_print@data^0,c
  3556   001E34  0E2F               	movlw	high STR_15
  3557   001E36  6E0D               	movwf	(clcd_print@data+1)^0,c
  3558   001E38  0E80               	movlw	128
  3559   001E3A  6E0E               	movwf	clcd_print@addr^0,c
  3560   001E3C  EC00  F003         	call	_clcd_print	;wreg free
  3561   001E40                     
  3562                           ;password.c: 66:         if(sec%2==0)
  3563   001E40  0100               	movlb	0	; () banked
  3564   001E42  B19D               	btfsc	_sec& (0+255),0,b
  3565   001E44  EF26  F00F         	goto	u3261
  3566   001E48  EF28  F00F         	goto	u3260
  3567   001E4C                     u3261:
  3568   001E4C  EF30  F00F         	goto	l4725
  3569   001E50                     u3260:
  3570   001E50                     
  3571                           ; BSR set to: 0
  3572                           ;password.c: 67:             clcd_putch('_',(0xC0 + (pass_index)));
  3573   001E50  5193               	movf	_pass_index& (0+255),w,b
  3574   001E52  0FC0               	addlw	192
  3575   001E54  6E0D               	movwf	clcd_putch@addr^0,c
  3576   001E56  0E5F               	movlw	95
  3577   001E58  ECDD  F000         	call	_clcd_putch
  3578   001E5C  EF36  F00F         	goto	l4727
  3579   001E60                     l4725:
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;password.c: 69:             clcd_putch(' ',(0xC0 + (pass_index)));
  3583   001E60  5193               	movf	_pass_index& (0+255),w,b
  3584   001E62  0FC0               	addlw	192
  3585   001E64  6E0D               	movwf	clcd_putch@addr^0,c
  3586   001E66  0E20               	movlw	32
  3587   001E68  ECDD  F000         	call	_clcd_putch
  3588   001E6C                     l4727:
  3589                           
  3590                           ;password.c: 70:         if(key==11)
  3591   001E6C  0E0B               	movlw	11
  3592   001E6E  1816               	xorwf	password@key^0,w,c
  3593   001E70  A4D8               	btfss	status,2,c
  3594   001E72  EF3D  F00F         	goto	u3271
  3595   001E76  EF3F  F00F         	goto	u3270
  3596   001E7A                     u3271:
  3597   001E7A  EF57  F00F         	goto	l4737
  3598   001E7E                     u3270:
  3599   001E7E                     
  3600                           ;password.c: 71:         {;password.c: 72:             clcd_putch('*',(0xC0 + (pass_inde
      +                          x)));
  3601   001E7E  0100               	movlb	0	; () banked
  3602   001E80  5193               	movf	_pass_index& (0+255),w,b
  3603   001E82  0FC0               	addlw	192
  3604   001E84  6E0D               	movwf	clcd_putch@addr^0,c
  3605   001E86  0E2A               	movlw	42
  3606   001E88  ECDD  F000         	call	_clcd_putch
  3607   001E8C                     
  3608                           ;password.c: 73:             e_password[pass_index++]='1';
  3609   001E8C  0E11               	movlw	low password@e_password
  3610   001E8E  0100               	movlb	0	; () banked
  3611   001E90  2593               	addwf	_pass_index& (0+255),w,b
  3612   001E92  6ED9               	movwf	fsr2l,c
  3613   001E94  0E00               	movlw	high password@e_password
  3614   001E96  2194               	addwfc	(_pass_index+1)& (0+255),w,b
  3615   001E98  6EDA               	movwf	fsr2h,c
  3616   001E9A  0E31               	movlw	49
  3617   001E9C  6EDF               	movwf	indf2,c
  3618   001E9E                     l4733:
  3619                           
  3620                           ; BSR set to: 0
  3621   001E9E  4B93               	infsnz	_pass_index& (0+255),f,b
  3622   001EA0  2B94               	incf	(_pass_index+1)& (0+255),f,b
  3623   001EA2                     
  3624                           ; BSR set to: 0
  3625                           ;password.c: 74:             timeout=9;
  3626   001EA2  0E00               	movlw	0
  3627   001EA4  6F98               	movwf	(_timeout+1)& (0+255),b
  3628   001EA6  0E09               	movlw	9
  3629   001EA8  6F97               	movwf	_timeout& (0+255),b
  3630                           
  3631                           ;password.c: 75:         }
  3632   001EAA  EFD5  F00F         	goto	l1125
  3633   001EAE                     l4737:
  3634   001EAE  0E0C               	movlw	12
  3635   001EB0  1816               	xorwf	password@key^0,w,c
  3636   001EB2  A4D8               	btfss	status,2,c
  3637   001EB4  EF5E  F00F         	goto	u3281
  3638   001EB8  EF60  F00F         	goto	u3280
  3639   001EBC                     u3281:
  3640   001EBC  EFD5  F00F         	goto	l1125
  3641   001EC0                     u3280:
  3642   001EC0                     
  3643                           ;password.c: 77:         {;password.c: 78:             clcd_putch('*',(0xC0 + (pass_inde
      +                          x)));
  3644   001EC0  0100               	movlb	0	; () banked
  3645   001EC2  5193               	movf	_pass_index& (0+255),w,b
  3646   001EC4  0FC0               	addlw	192
  3647   001EC6  6E0D               	movwf	clcd_putch@addr^0,c
  3648   001EC8  0E2A               	movlw	42
  3649   001ECA  ECDD  F000         	call	_clcd_putch
  3650   001ECE                     
  3651                           ;password.c: 79:             e_password[pass_index++]='0';
  3652   001ECE  0E11               	movlw	low password@e_password
  3653   001ED0  0100               	movlb	0	; () banked
  3654   001ED2  2593               	addwf	_pass_index& (0+255),w,b
  3655   001ED4  6ED9               	movwf	fsr2l,c
  3656   001ED6  0E00               	movlw	high password@e_password
  3657   001ED8  2194               	addwfc	(_pass_index+1)& (0+255),w,b
  3658   001EDA  6EDA               	movwf	fsr2h,c
  3659   001EDC  0E30               	movlw	48
  3660   001EDE  6EDF               	movwf	indf2,c
  3661   001EE0  EF4F  F00F         	goto	l4733
  3662   001EE4                     l4747:
  3663                           
  3664                           ; BSR set to: 0
  3665   001EE4  5194               	movf	(_pass_index+1)& (0+255),w,b
  3666   001EE6  E109               	bnz	u3290
  3667   001EE8  0E04               	movlw	4
  3668   001EEA  5D93               	subwf	_pass_index& (0+255),w,b
  3669   001EEC  A0D8               	btfss	status,0,c
  3670   001EEE  EF7B  F00F         	goto	u3291
  3671   001EF2  EF7D  F00F         	goto	u3290
  3672   001EF6                     u3291:
  3673   001EF6  EFD5  F00F         	goto	l1125
  3674   001EFA                     u3290:
  3675   001EFA                     
  3676                           ; BSR set to: 0
  3677                           ;password.c: 84:     {;password.c: 85:         pass_index=0;
  3678   001EFA  0E00               	movlw	0
  3679   001EFC  6F94               	movwf	(_pass_index+1)& (0+255),b
  3680   001EFE  0E00               	movlw	0
  3681   001F00  6F93               	movwf	_pass_index& (0+255),b
  3682                           
  3683                           ;password.c: 86:         success=1;
  3684   001F02  0E00               	movlw	0
  3685   001F04  6F92               	movwf	(_success+1)& (0+255),b
  3686   001F06  0E01               	movlw	1
  3687   001F08  6F91               	movwf	_success& (0+255),b
  3688                           
  3689                           ;password.c: 87:         e_password[4]='\0';
  3690   001F0A  0E00               	movlw	0
  3691   001F0C  6E15               	movwf	(password@e_password+4)^0,c
  3692                           
  3693                           ;password.c: 88:         for(int j=0;j<4;j++)
  3694   001F0E  0E00               	movlw	0
  3695   001F10  6E18               	movwf	(password@j+1)^0,c
  3696   001F12  0E00               	movlw	0
  3697   001F14  6E17               	movwf	password@j^0,c
  3698   001F16                     l4755:
  3699                           
  3700                           ;password.c: 89:         {;password.c: 90:             if(m_password[j] != e_password[j]
      +                          )
  3701   001F16  0E11               	movlw	low password@e_password
  3702   001F18  2417               	addwf	password@j^0,w,c
  3703   001F1A  6ED9               	movwf	fsr2l,c
  3704   001F1C  0E00               	movlw	high password@e_password
  3705   001F1E  2018               	addwfc	(password@j+1)^0,w,c
  3706   001F20  6EDA               	movwf	fsr2h,c
  3707   001F22  0ECE               	movlw	low _m_password
  3708   001F24  2417               	addwf	password@j^0,w,c
  3709   001F26  6EE1               	movwf	fsr1l,c
  3710   001F28  0E00               	movlw	high _m_password
  3711   001F2A  2018               	addwfc	(password@j+1)^0,w,c
  3712   001F2C  6EE2               	movwf	fsr1h,c
  3713   001F2E  50DE               	movf	postinc2,w,c
  3714   001F30  18E6               	xorwf	postinc1,w,c
  3715   001F32  B4D8               	btfsc	status,2,c
  3716   001F34  EF9E  F00F         	goto	u3301
  3717   001F38  EFA0  F00F         	goto	u3300
  3718   001F3C                     u3301:
  3719   001F3C  EFB7  F00F         	goto	l4761
  3720   001F40                     u3300:
  3721   001F40                     
  3722                           ;password.c: 91:             {;password.c: 92:                 if(--attempts==0)
  3723   001F40  0100               	movlb	0	; () banked
  3724   001F42  07D3               	decf	_attempts& (0+255),f,b
  3725   001F44  A0D8               	btfss	status,0,c
  3726   001F46  07D4               	decf	(_attempts+1)& (0+255),f,b
  3727   001F48  51D3               	movf	_attempts& (0+255),w,b
  3728   001F4A  11D4               	iorwf	(_attempts+1)& (0+255),w,b
  3729   001F4C  A4D8               	btfss	status,2,c
  3730   001F4E  EFAB  F00F         	goto	u3311
  3731   001F52  EFAD  F00F         	goto	u3310
  3732   001F56                     u3311:
  3733   001F56  EFB1  F00F         	goto	l1144
  3734   001F5A                     u3310:
  3735   001F5A                     
  3736                           ; BSR set to: 0
  3737                           ;password.c: 93:                     sec=120;
  3738   001F5A  0E00               	movlw	0
  3739   001F5C  6F9E               	movwf	(_sec+1)& (0+255),b
  3740   001F5E  0E78               	movlw	120
  3741   001F60  6F9D               	movwf	_sec& (0+255),b
  3742   001F62                     l1144:
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;password.c: 94:                 success=0;
  3746   001F62  0E00               	movlw	0
  3747   001F64  6F92               	movwf	(_success+1)& (0+255),b
  3748   001F66  0E00               	movlw	0
  3749   001F68  6F91               	movwf	_success& (0+255),b
  3750                           
  3751                           ;password.c: 95:                 break;
  3752   001F6A  EFC7  F00F         	goto	l4765
  3753   001F6E                     l4761:
  3754                           
  3755                           ;password.c: 97:         }
  3756   001F6E  4A17               	infsnz	password@j^0,f,c
  3757   001F70  2A18               	incf	(password@j+1)^0,f,c
  3758   001F72  BE18               	btfsc	(password@j+1)^0,7,c
  3759   001F74  EFC5  F00F         	goto	u3321
  3760   001F78  5018               	movf	(password@j+1)^0,w,c
  3761   001F7A  E109               	bnz	u3320
  3762   001F7C  0E04               	movlw	4
  3763   001F7E  5C17               	subwf	password@j^0,w,c
  3764   001F80  A0D8               	btfss	status,0,c
  3765   001F82  EFC5  F00F         	goto	u3321
  3766   001F86  EFC7  F00F         	goto	u3320
  3767   001F8A                     u3321:
  3768   001F8A  EF8B  F00F         	goto	l4755
  3769   001F8E                     u3320:
  3770   001F8E                     l4765:
  3771                           
  3772                           ;password.c: 98:         pa_flag=1;
  3773   001F8E  0E00               	movlw	0
  3774   001F90  0100               	movlb	0	; () banked
  3775   001F92  6F72               	movwf	(password@pa_flag+1)& (0+255),b
  3776   001F94  0E01               	movlw	1
  3777   001F96  6F71               	movwf	password@pa_flag& (0+255),b
  3778                           
  3779                           ;password.c: 99:         timeout=2;
  3780   001F98  0E00               	movlw	0
  3781   001F9A  6F98               	movwf	(_timeout+1)& (0+255),b
  3782   001F9C  0E02               	movlw	2
  3783   001F9E  6F97               	movwf	_timeout& (0+255),b
  3784   001FA0                     
  3785                           ; BSR set to: 0
  3786                           ;password.c: 100:         clcd_write(0x01, 0);
  3787   001FA0  0E00               	movlw	0
  3788   001FA2  6E01               	movwf	clcd_write@control_bit^0,c
  3789   001FA4  0E01               	movlw	1
  3790   001FA6  EC7D  F001         	call	_clcd_write
  3791   001FAA                     l1125:
  3792   001FAA  0012               	return		;funcret
  3793   001FAC                     __end_of_password:
  3794                           	callstack 0
  3795                           
  3796 ;; *************** function _menu *****************
  3797 ;; Defined at:
  3798 ;;		line 3 in file "menu.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;  key             1    wreg     unsigned char 
  3801 ;;  t               1   14[COMRAM] unsigned char 
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;  key             1   90[COMRAM] unsigned char 
  3804 ;;  menu           75   15[COMRAM] unsigned char [15][5]
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  1    wreg      void 
  3807 ;; Registers used:
  3808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3814 ;;      Params:         1       0       0       0       0       0       0
  3815 ;;      Locals:        76       0       0       0       0       0       0
  3816 ;;      Temps:          0       0       0       0       0       0       0
  3817 ;;      Totals:        77       0       0       0       0       0       0
  3818 ;;Total ram usage:       77 bytes
  3819 ;; Hardware stack levels used: 1
  3820 ;; Hardware stack levels required when called: 2
  3821 ;; This function calls:
  3822 ;;		___wmul
  3823 ;;		_clcd_print
  3824 ;;		_clcd_putch
  3825 ;;		_clcd_write
  3826 ;; This function is called by:
  3827 ;;		_main
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831                           	psect	text5
  3832   0010E8                     __ptext5:
  3833                           	callstack 0
  3834   0010E8                     _menu:
  3835                           	callstack 28
  3836                           
  3837                           ;incstack = 0
  3838                           ;menu@key stored from wreg
  3839   0010E8  6E5B               	movwf	menu@key^0,c
  3840   0010EA                     
  3841                           ;menu.c: 3: void menu(unsigned char key,unsigned char t);menu.c: 4: {;menu.c: 5:     uns
      +                          igned char menu[5][15]={"View log","Download log","Clear log","Set time","Change passwor
      +                          d"};
  3842   0010EA  EE21  F000         	lfsr	2,menu@F10538
  3843   0010EE  EE10  F010         	lfsr	1,menu@menu
  3844   0010F2  0E4A               	movlw	74
  3845   0010F4                     u3331:
  3846   0010F4  CFDB FFE3          	movff	plusw2,plusw1
  3847   0010F8  06E8               	decf	wreg,f,c
  3848   0010FA  E2FC               	bc	u3331
  3849   0010FC                     
  3850                           ;menu.c: 6:     clcd_print(menu[L], (0x80 + (1)));
  3851   0010FC  C08D  F006         	movff	_L,___wmul@multiplier
  3852   001100  C08E  F007         	movff	_L+1,___wmul@multiplier+1
  3853   001104  0E00               	movlw	0
  3854   001106  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  3855   001108  0E0F               	movlw	15
  3856   00110A  6E08               	movwf	___wmul@multiplicand^0,c
  3857   00110C  EC40  F001         	call	___wmul	;wreg free
  3858   001110  0E10               	movlw	low menu@menu
  3859   001112  2406               	addwf	?___wmul^0,w,c
  3860   001114  6E0C               	movwf	clcd_print@data^0,c
  3861   001116  0E00               	movlw	high menu@menu
  3862   001118  2007               	addwfc	(?___wmul+1)^0,w,c
  3863   00111A  6E0D               	movwf	(clcd_print@data+1)^0,c
  3864   00111C  0E81               	movlw	129
  3865   00111E  6E0E               	movwf	clcd_print@addr^0,c
  3866   001120  EC00  F003         	call	_clcd_print	;wreg free
  3867   001124                     
  3868                           ;menu.c: 7:     clcd_print(menu[L+1], (0xC0 + (1)));
  3869   001124  C08D  F006         	movff	_L,___wmul@multiplier
  3870   001128  C08E  F007         	movff	_L+1,___wmul@multiplier+1
  3871   00112C  0E00               	movlw	0
  3872   00112E  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  3873   001130  0E0F               	movlw	15
  3874   001132  6E08               	movwf	___wmul@multiplicand^0,c
  3875   001134  EC40  F001         	call	___wmul	;wreg free
  3876   001138  0E0F               	movlw	15
  3877   00113A  2606               	addwf	?___wmul^0,f,c
  3878   00113C  0E00               	movlw	0
  3879   00113E  2207               	addwfc	(?___wmul+1)^0,f,c
  3880   001140  0E10               	movlw	low menu@menu
  3881   001142  2406               	addwf	?___wmul^0,w,c
  3882   001144  6E0C               	movwf	clcd_print@data^0,c
  3883   001146  0E00               	movlw	high menu@menu
  3884   001148  2007               	addwfc	(?___wmul+1)^0,w,c
  3885   00114A  6E0D               	movwf	(clcd_print@data+1)^0,c
  3886   00114C  0EC1               	movlw	193
  3887   00114E  6E0E               	movwf	clcd_print@addr^0,c
  3888   001150  EC00  F003         	call	_clcd_print	;wreg free
  3889   001154                     
  3890                           ;menu.c: 8:     if(sel==0)
  3891   001154  0100               	movlb	0	; () banked
  3892   001156  518B               	movf	_sel& (0+255),w,b
  3893   001158  118C               	iorwf	(_sel+1)& (0+255),w,b
  3894   00115A  A4D8               	btfss	status,2,c
  3895   00115C  EFB2  F008         	goto	u3341
  3896   001160  EFB4  F008         	goto	u3340
  3897   001164                     u3341:
  3898   001164  EFBB  F008         	goto	l4779
  3899   001168                     u3340:
  3900   001168                     
  3901                           ; BSR set to: 0
  3902                           ;menu.c: 9:         clcd_putch('*', (0x80 + (0)));
  3903   001168  0E80               	movlw	128
  3904   00116A  6E0D               	movwf	clcd_putch@addr^0,c
  3905   00116C  0E2A               	movlw	42
  3906   00116E  ECDD  F000         	call	_clcd_putch
  3907   001172  EFC0  F008         	goto	l4781
  3908   001176                     l4779:
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;menu.c: 11:         clcd_putch('*', (0xC0 + (0)));
  3912   001176  0EC0               	movlw	192
  3913   001178  6E0D               	movwf	clcd_putch@addr^0,c
  3914   00117A  0E2A               	movlw	42
  3915   00117C  ECDD  F000         	call	_clcd_putch
  3916   001180                     l4781:
  3917                           
  3918                           ;menu.c: 12:     if(key==12)
  3919   001180  0E0C               	movlw	12
  3920   001182  185B               	xorwf	menu@key^0,w,c
  3921   001184  A4D8               	btfss	status,2,c
  3922   001186  EFC7  F008         	goto	u3351
  3923   00118A  EFC9  F008         	goto	u3350
  3924   00118E                     u3351:
  3925   00118E  EF11  F009         	goto	l4805
  3926   001192                     u3350:
  3927   001192                     
  3928                           ;menu.c: 13:     {;menu.c: 14:         if(t==0)
  3929   001192  500F               	movf	menu@t^0,w,c
  3930   001194  A4D8               	btfss	status,2,c
  3931   001196  EFCF  F008         	goto	u3361
  3932   00119A  EFD1  F008         	goto	u3360
  3933   00119E                     u3361:
  3934   00119E  EFF5  F008         	goto	l4795
  3935   0011A2                     u3360:
  3936   0011A2                     
  3937                           ;menu.c: 15:         {;menu.c: 16:             if(sel==0)
  3938   0011A2  0100               	movlb	0	; () banked
  3939   0011A4  518B               	movf	_sel& (0+255),w,b
  3940   0011A6  118C               	iorwf	(_sel+1)& (0+255),w,b
  3941   0011A8  A4D8               	btfss	status,2,c
  3942   0011AA  EFD9  F008         	goto	u3371
  3943   0011AE  EFDB  F008         	goto	u3370
  3944   0011B2                     u3371:
  3945   0011B2  EFE1  F008         	goto	l4789
  3946   0011B6                     u3370:
  3947   0011B6                     
  3948                           ; BSR set to: 0
  3949                           ;menu.c: 17:                 sel=1;
  3950   0011B6  0E00               	movlw	0
  3951   0011B8  6F8C               	movwf	(_sel+1)& (0+255),b
  3952   0011BA  0E01               	movlw	1
  3953   0011BC  6F8B               	movwf	_sel& (0+255),b
  3954   0011BE  EFEE  F008         	goto	l4793
  3955   0011C2                     l4789:
  3956                           
  3957                           ; BSR set to: 0
  3958   0011C2  518E               	movf	(_L+1)& (0+255),w,b
  3959   0011C4  E107               	bnz	u3381
  3960   0011C6  0E03               	movlw	3
  3961   0011C8  5D8D               	subwf	_L& (0+255),w,b
  3962   0011CA  B0D8               	btfsc	status,0,c
  3963   0011CC  EFEA  F008         	goto	u3381
  3964   0011D0  EFEC  F008         	goto	u3380
  3965   0011D4                     u3381:
  3966   0011D4  EFEE  F008         	goto	l4793
  3967   0011D8                     u3380:
  3968   0011D8                     
  3969                           ; BSR set to: 0
  3970                           ;menu.c: 19:                 L++;
  3971   0011D8  4B8D               	infsnz	_L& (0+255),f,b
  3972   0011DA  2B8E               	incf	(_L+1)& (0+255),f,b
  3973   0011DC                     l4793:
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;menu.c: 20:             clcd_write(0x01, 0);
  3977   0011DC  0E00               	movlw	0
  3978   0011DE  6E01               	movwf	clcd_write@control_bit^0,c
  3979   0011E0  0E01               	movlw	1
  3980   0011E2  EC7D  F001         	call	_clcd_write
  3981                           
  3982                           ;menu.c: 21:         }
  3983   0011E6  EF73  F009         	goto	l1055
  3984   0011EA                     l4795:
  3985   0011EA  040F               	decf	menu@t^0,w,c
  3986   0011EC  A4D8               	btfss	status,2,c
  3987   0011EE  EFFB  F008         	goto	u3391
  3988   0011F2  EFFD  F008         	goto	u3390
  3989   0011F6                     u3391:
  3990   0011F6  EF73  F009         	goto	l1055
  3991   0011FA                     u3390:
  3992   0011FA                     
  3993                           ;menu.c: 23:         {;menu.c: 24:             clcd_write(0x01, 0);
  3994   0011FA  0E00               	movlw	0
  3995   0011FC  6E01               	movwf	clcd_write@control_bit^0,c
  3996   0011FE  0E01               	movlw	1
  3997   001200  EC7D  F001         	call	_clcd_write
  3998   001204                     
  3999                           ;menu.c: 25:             L=0;
  4000   001204  0E00               	movlw	0
  4001   001206  0100               	movlb	0	; () banked
  4002   001208  6F8E               	movwf	(_L+1)& (0+255),b
  4003   00120A  0E00               	movlw	0
  4004   00120C  6F8D               	movwf	_L& (0+255),b
  4005   00120E                     
  4006                           ; BSR set to: 0
  4007                           ;menu.c: 26:             sel=0;
  4008   00120E  0E00               	movlw	0
  4009   001210  6F8C               	movwf	(_sel+1)& (0+255),b
  4010   001212  0E00               	movlw	0
  4011   001214  6F8B               	movwf	_sel& (0+255),b
  4012   001216                     
  4013                           ; BSR set to: 0
  4014                           ;menu.c: 27:             main_f=0;
  4015   001216  0E00               	movlw	0
  4016   001218  6FA2               	movwf	(_main_f+1)& (0+255),b
  4017   00121A  0E00               	movlw	0
  4018   00121C  6FA1               	movwf	_main_f& (0+255),b
  4019   00121E  EF73  F009         	goto	l1055
  4020   001222                     l4805:
  4021   001222  0E0B               	movlw	11
  4022   001224  185B               	xorwf	menu@key^0,w,c
  4023   001226  A4D8               	btfss	status,2,c
  4024   001228  EF18  F009         	goto	u3401
  4025   00122C  EF1A  F009         	goto	u3400
  4026   001230                     u3401:
  4027   001230  EF73  F009         	goto	l1055
  4028   001234                     u3400:
  4029   001234                     
  4030                           ;menu.c: 31:     {;menu.c: 32:         if(t==0)
  4031   001234  500F               	movf	menu@t^0,w,c
  4032   001236  A4D8               	btfss	status,2,c
  4033   001238  EF20  F009         	goto	u3411
  4034   00123C  EF22  F009         	goto	u3410
  4035   001240                     u3411:
  4036   001240  EF45  F009         	goto	l4819
  4037   001244                     u3410:
  4038   001244                     
  4039                           ;menu.c: 33:         {;menu.c: 34:             if(sel==1)
  4040   001244  0100               	movlb	0	; () banked
  4041   001246  058B               	decf	_sel& (0+255),w,b
  4042   001248  118C               	iorwf	(_sel+1)& (0+255),w,b
  4043   00124A  A4D8               	btfss	status,2,c
  4044   00124C  EF2A  F009         	goto	u3421
  4045   001250  EF2C  F009         	goto	u3420
  4046   001254                     u3421:
  4047   001254  EF32  F009         	goto	l4813
  4048   001258                     u3420:
  4049   001258                     
  4050                           ; BSR set to: 0
  4051                           ;menu.c: 35:                 sel=0;
  4052   001258  0E00               	movlw	0
  4053   00125A  6F8C               	movwf	(_sel+1)& (0+255),b
  4054   00125C  0E00               	movlw	0
  4055   00125E  6F8B               	movwf	_sel& (0+255),b
  4056   001260  EF3E  F009         	goto	l4817
  4057   001264                     l4813:
  4058                           
  4059                           ; BSR set to: 0
  4060   001264  518D               	movf	_L& (0+255),w,b
  4061   001266  118E               	iorwf	(_L+1)& (0+255),w,b
  4062   001268  B4D8               	btfsc	status,2,c
  4063   00126A  EF39  F009         	goto	u3431
  4064   00126E  EF3B  F009         	goto	u3430
  4065   001272                     u3431:
  4066   001272  EF3E  F009         	goto	l4817
  4067   001276                     u3430:
  4068   001276                     
  4069                           ; BSR set to: 0
  4070                           ;menu.c: 37:                 L--;
  4071   001276  078D               	decf	_L& (0+255),f,b
  4072   001278  A0D8               	btfss	status,0,c
  4073   00127A  078E               	decf	(_L+1)& (0+255),f,b
  4074   00127C                     l4817:
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;menu.c: 38:             clcd_write(0x01, 0);
  4078   00127C  0E00               	movlw	0
  4079   00127E  6E01               	movwf	clcd_write@control_bit^0,c
  4080   001280  0E01               	movlw	1
  4081   001282  EC7D  F001         	call	_clcd_write
  4082                           
  4083                           ;menu.c: 39:         }
  4084   001286  EF73  F009         	goto	l1055
  4085   00128A                     l4819:
  4086   00128A  040F               	decf	menu@t^0,w,c
  4087   00128C  A4D8               	btfss	status,2,c
  4088   00128E  EF4B  F009         	goto	u3441
  4089   001292  EF4D  F009         	goto	u3440
  4090   001296                     u3441:
  4091   001296  EF73  F009         	goto	l1055
  4092   00129A                     u3440:
  4093   00129A                     
  4094                           ;menu.c: 41:         {;menu.c: 42:             clcd_write(0x01, 0);
  4095   00129A  0E00               	movlw	0
  4096   00129C  6E01               	movwf	clcd_write@control_bit^0,c
  4097   00129E  0E01               	movlw	1
  4098   0012A0  EC7D  F001         	call	_clcd_write
  4099   0012A4                     
  4100                           ;menu.c: 43:             main_f=3;
  4101   0012A4  0E00               	movlw	0
  4102   0012A6  0100               	movlb	0	; () banked
  4103   0012A8  6FA2               	movwf	(_main_f+1)& (0+255),b
  4104   0012AA  0E03               	movlw	3
  4105   0012AC  6FA1               	movwf	_main_f& (0+255),b
  4106   0012AE                     
  4107                           ; BSR set to: 0
  4108                           ;menu.c: 44:             menu_f=L+sel;
  4109   0012AE  518B               	movf	_sel& (0+255),w,b
  4110   0012B0  258D               	addwf	_L& (0+255),w,b
  4111   0012B2  6F9F               	movwf	_menu_f& (0+255),b
  4112   0012B4  518C               	movf	(_sel+1)& (0+255),w,b
  4113   0012B6  218E               	addwfc	(_L+1)& (0+255),w,b
  4114   0012B8  6FA0               	movwf	(_menu_f+1)& (0+255),b
  4115   0012BA                     
  4116                           ; BSR set to: 0
  4117                           ;menu.c: 45:             if(menu_f==3)
  4118   0012BA  0E03               	movlw	3
  4119   0012BC  199F               	xorwf	_menu_f& (0+255),w,b
  4120   0012BE  11A0               	iorwf	(_menu_f+1)& (0+255),w,b
  4121   0012C0  A4D8               	btfss	status,2,c
  4122   0012C2  EF65  F009         	goto	u3451
  4123   0012C6  EF67  F009         	goto	u3450
  4124   0012CA                     u3451:
  4125   0012CA  EF6B  F009         	goto	l1054
  4126   0012CE                     u3450:
  4127   0012CE                     
  4128                           ; BSR set to: 0
  4129                           ;menu.c: 46:                 in_flag=0;
  4130   0012CE  0E00               	movlw	0
  4131   0012D0  6F84               	movwf	(_in_flag+1)& (0+255),b
  4132   0012D2  0E00               	movlw	0
  4133   0012D4  6F83               	movwf	_in_flag& (0+255),b
  4134   0012D6                     l1054:
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;menu.c: 47:             L=0;
  4138   0012D6  0E00               	movlw	0
  4139   0012D8  6F8E               	movwf	(_L+1)& (0+255),b
  4140   0012DA  0E00               	movlw	0
  4141   0012DC  6F8D               	movwf	_L& (0+255),b
  4142                           
  4143                           ;menu.c: 48:             sel=0;
  4144   0012DE  0E00               	movlw	0
  4145   0012E0  6F8C               	movwf	(_sel+1)& (0+255),b
  4146   0012E2  0E00               	movlw	0
  4147   0012E4  6F8B               	movwf	_sel& (0+255),b
  4148   0012E6                     l1055:
  4149   0012E6  0012               	return		;funcret
  4150   0012E8                     __end_of_menu:
  4151                           	callstack 0
  4152                           
  4153 ;; *************** function _long_short_press *****************
  4154 ;; Defined at:
  4155 ;;		line 3 in file "key_press.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;  t               2    0[COMRAM] PTR unsigned char 
  4158 ;;		 -> main@t(1), 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;  l               2    5[COMRAM] unsigned int 
  4161 ;;  key             1    4[COMRAM] unsigned char 
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  1    wreg      unsigned char 
  4164 ;; Registers used:
  4165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4171 ;;      Params:         2       0       0       0       0       0       0
  4172 ;;      Locals:         3       0       0       0       0       0       0
  4173 ;;      Temps:          2       0       0       0       0       0       0
  4174 ;;      Totals:         7       0       0       0       0       0       0
  4175 ;;Total ram usage:        7 bytes
  4176 ;; Hardware stack levels used: 1
  4177 ;; Hardware stack levels required when called: 1
  4178 ;; This function calls:
  4179 ;;		_scan_key
  4180 ;; This function is called by:
  4181 ;;		_main
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text6
  4186   00086C                     __ptext6:
  4187                           	callstack 0
  4188   00086C                     _long_short_press:
  4189                           	callstack 29
  4190   00086C                     
  4191                           ;key_press.c: 6:     unsigned char key;;key_press.c: 7:     key = scan_key();
  4192   00086C  EC5C  F005         	call	_scan_key	;wreg free
  4193   000870  6E05               	movwf	long_short_press@key^0,c
  4194   000872                     
  4195                           ;key_press.c: 8:     l=0;
  4196   000872  0E00               	movlw	0
  4197   000874  6E07               	movwf	(long_short_press@l+1)^0,c
  4198   000876  0E00               	movlw	0
  4199   000878  6E06               	movwf	long_short_press@l^0,c
  4200   00087A                     
  4201                           ;key_press.c: 9:     if(key!=0xFF)
  4202   00087A  2805               	incf	long_short_press@key^0,w,c
  4203   00087C  B4D8               	btfsc	status,2,c
  4204   00087E  EF43  F004         	goto	u3061
  4205   000882  EF45  F004         	goto	u3060
  4206   000886                     u3061:
  4207   000886  EF68  F004         	goto	l4593
  4208   00088A                     u3060:
  4209   00088A  EF5E  F004         	goto	l4591
  4210   00088E                     l4587:
  4211                           
  4212                           ;key_press.c: 12:         {;key_press.c: 13:             if(l++ > 16000)
  4213   00088E  5006               	movf	long_short_press@l^0,w,c
  4214   000890  6E03               	movwf	??_long_short_press^0,c
  4215   000892  5007               	movf	(long_short_press@l+1)^0,w,c
  4216   000894  6E04               	movwf	(??_long_short_press+1)^0,c
  4217   000896  4A06               	infsnz	long_short_press@l^0,f,c
  4218   000898  2A07               	incf	(long_short_press@l+1)^0,f,c
  4219   00089A  0E81               	movlw	129
  4220   00089C  5C03               	subwf	??_long_short_press^0,w,c
  4221   00089E  0E3E               	movlw	62
  4222   0008A0  5804               	subwfb	(??_long_short_press+1)^0,w,c
  4223   0008A2  A0D8               	btfss	status,0,c
  4224   0008A4  EF56  F004         	goto	u3071
  4225   0008A8  EF58  F004         	goto	u3070
  4226   0008AC                     u3071:
  4227   0008AC  EF5E  F004         	goto	l4591
  4228   0008B0                     u3070:
  4229   0008B0                     
  4230                           ;key_press.c: 14:             {;key_press.c: 15:                 *t = 1;
  4231   0008B0  C001  FFD9         	movff	long_short_press@t,fsr2l
  4232   0008B4  C002  FFDA         	movff	long_short_press@t+1,fsr2h
  4233   0008B8  0E01               	movlw	1
  4234   0008BA  6EDF               	movwf	indf2,c
  4235   0008BC                     l4591:
  4236                           
  4237                           ;key_press.c: 11:         while(key==scan_key())
  4238   0008BC  EC5C  F005         	call	_scan_key	;wreg free
  4239   0008C0  1805               	xorwf	long_short_press@key^0,w,c
  4240   0008C2  B4D8               	btfsc	status,2,c
  4241   0008C4  EF66  F004         	goto	u3081
  4242   0008C8  EF68  F004         	goto	u3080
  4243   0008CC                     u3081:
  4244   0008CC  EF47  F004         	goto	l4587
  4245   0008D0                     u3080:
  4246   0008D0                     l4593:
  4247                           
  4248                           ;key_press.c: 19:     if(l > 0 && l < 16000)
  4249   0008D0  5006               	movf	long_short_press@l^0,w,c
  4250   0008D2  1007               	iorwf	(long_short_press@l+1)^0,w,c
  4251   0008D4  B4D8               	btfsc	status,2,c
  4252   0008D6  EF6F  F004         	goto	u3091
  4253   0008DA  EF71  F004         	goto	u3090
  4254   0008DE                     u3091:
  4255   0008DE  EF83  F004         	goto	l4601
  4256   0008E2                     u3090:
  4257   0008E2  0E80               	movlw	128
  4258   0008E4  5C06               	subwf	long_short_press@l^0,w,c
  4259   0008E6  0E3E               	movlw	62
  4260   0008E8  5807               	subwfb	(long_short_press@l+1)^0,w,c
  4261   0008EA  B0D8               	btfsc	status,0,c
  4262   0008EC  EF7A  F004         	goto	u3101
  4263   0008F0  EF7C  F004         	goto	u3100
  4264   0008F4                     u3101:
  4265   0008F4  EF83  F004         	goto	l4601
  4266   0008F8                     u3100:
  4267   0008F8                     
  4268                           ;key_press.c: 22:         *t=0;
  4269   0008F8  C001  FFD9         	movff	long_short_press@t,fsr2l
  4270   0008FC  C002  FFDA         	movff	long_short_press@t+1,fsr2h
  4271   000900  6ADF               	clrf	indf2,c
  4272                           
  4273                           ;key_press.c: 23:     }
  4274   000902  EF83  F004         	goto	l731
  4275   000906                     l4601:
  4276   000906                     l731:
  4277                           
  4278                           ;key_press.c: 28:     return key;
  4279   000906  5005               	movf	long_short_press@key^0,w,c
  4280   000908  0012               	return		;funcret
  4281   00090A                     __end_of_long_short_press:
  4282                           	callstack 0
  4283                           
  4284 ;; *************** function _scan_key *****************
  4285 ;; Defined at:
  4286 ;;		line 30 in file "matrix_keypad.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;		None
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;		None
  4291 ;; Return value:  Size  Location     Type
  4292 ;;                  1    wreg      unsigned char 
  4293 ;; Registers used:
  4294 ;;		wreg
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4300 ;;      Params:         0       0       0       0       0       0       0
  4301 ;;      Locals:         0       0       0       0       0       0       0
  4302 ;;      Temps:          0       0       0       0       0       0       0
  4303 ;;      Totals:         0       0       0       0       0       0       0
  4304 ;;Total ram usage:        0 bytes
  4305 ;; Hardware stack levels used: 1
  4306 ;; This function calls:
  4307 ;;		Nothing
  4308 ;; This function is called by:
  4309 ;;		_long_short_press
  4310 ;;		_read_switches
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           	psect	text7
  4315   000AB8                     __ptext7:
  4316                           	callstack 0
  4317   000AB8                     _scan_key:
  4318                           	callstack 29
  4319   000AB8                     
  4320                           ;matrix_keypad.c: 32:     RB5=0;
  4321   000AB8  9A81               	bcf	3969,5,c	;volatile
  4322                           
  4323                           ;matrix_keypad.c: 33:     RB6=RB7=1;
  4324   000ABA  8E81               	bsf	3969,7,c	;volatile
  4325   000ABC  8C81               	bsf	3969,6,c	;volatile
  4326                           
  4327                           ;matrix_keypad.c: 34:     if(RB1==0)
  4328   000ABE  B281               	btfsc	3969,1,c	;volatile
  4329   000AC0  EF64  F005         	goto	u2211
  4330   000AC4  EF66  F005         	goto	u2210
  4331   000AC8                     u2211:
  4332   000AC8  EF69  F005         	goto	l949
  4333   000ACC                     u2210:
  4334   000ACC                     
  4335                           ;matrix_keypad.c: 35:         return 1;
  4336   000ACC  0E01               	movlw	1
  4337   000ACE  EFDF  F005         	goto	l950
  4338   000AD2                     l949:
  4339   000AD2  B481               	btfsc	3969,2,c	;volatile
  4340   000AD4  EF6E  F005         	goto	u2221
  4341   000AD8  EF70  F005         	goto	u2220
  4342   000ADC                     u2221:
  4343   000ADC  EF73  F005         	goto	l952
  4344   000AE0                     u2220:
  4345   000AE0                     
  4346                           ;matrix_keypad.c: 37:         return 4;
  4347   000AE0  0E04               	movlw	4
  4348   000AE2  EFDF  F005         	goto	l950
  4349   000AE6                     l952:
  4350   000AE6  B681               	btfsc	3969,3,c	;volatile
  4351   000AE8  EF78  F005         	goto	u2231
  4352   000AEC  EF7A  F005         	goto	u2230
  4353   000AF0                     u2231:
  4354   000AF0  EF7D  F005         	goto	l954
  4355   000AF4                     u2230:
  4356   000AF4                     
  4357                           ;matrix_keypad.c: 39:         return 7;
  4358   000AF4  0E07               	movlw	7
  4359   000AF6  EFDF  F005         	goto	l950
  4360   000AFA                     l954:
  4361   000AFA  B881               	btfsc	3969,4,c	;volatile
  4362   000AFC  EF82  F005         	goto	u2241
  4363   000B00  EF84  F005         	goto	u2240
  4364   000B04                     u2241:
  4365   000B04  EF87  F005         	goto	l951
  4366   000B08                     u2240:
  4367   000B08                     
  4368                           ;matrix_keypad.c: 41:         return 10;
  4369   000B08  0E0A               	movlw	10
  4370   000B0A  EFDF  F005         	goto	l950
  4371   000B0E                     l951:
  4372                           
  4373                           ;matrix_keypad.c: 43:     RB6=0;
  4374   000B0E  9C81               	bcf	3969,6,c	;volatile
  4375                           
  4376                           ;matrix_keypad.c: 44:     RB5=RB7=1;
  4377   000B10  8E81               	bsf	3969,7,c	;volatile
  4378   000B12  8A81               	bsf	3969,5,c	;volatile
  4379                           
  4380                           ;matrix_keypad.c: 45:     if(RB1==0)
  4381   000B14  B281               	btfsc	3969,1,c	;volatile
  4382   000B16  EF8F  F005         	goto	u2251
  4383   000B1A  EF91  F005         	goto	u2250
  4384   000B1E                     u2251:
  4385   000B1E  EF94  F005         	goto	l957
  4386   000B22                     u2250:
  4387   000B22                     
  4388                           ;matrix_keypad.c: 46:         return 2;
  4389   000B22  0E02               	movlw	2
  4390   000B24  EFDF  F005         	goto	l950
  4391   000B28                     l957:
  4392   000B28  B481               	btfsc	3969,2,c	;volatile
  4393   000B2A  EF99  F005         	goto	u2261
  4394   000B2E  EF9B  F005         	goto	u2260
  4395   000B32                     u2261:
  4396   000B32  EF9E  F005         	goto	l959
  4397   000B36                     u2260:
  4398   000B36                     
  4399                           ;matrix_keypad.c: 48:         return 5;
  4400   000B36  0E05               	movlw	5
  4401   000B38  EFDF  F005         	goto	l950
  4402   000B3C                     l959:
  4403   000B3C  B681               	btfsc	3969,3,c	;volatile
  4404   000B3E  EFA3  F005         	goto	u2271
  4405   000B42  EFA5  F005         	goto	u2270
  4406   000B46                     u2271:
  4407   000B46  EFA8  F005         	goto	l961
  4408   000B4A                     u2270:
  4409   000B4A                     
  4410                           ;matrix_keypad.c: 50:         return 8;
  4411   000B4A  0E08               	movlw	8
  4412   000B4C  EFDF  F005         	goto	l950
  4413   000B50                     l961:
  4414   000B50  B881               	btfsc	3969,4,c	;volatile
  4415   000B52  EFAD  F005         	goto	u2281
  4416   000B56  EFAF  F005         	goto	u2280
  4417   000B5A                     u2281:
  4418   000B5A  EFB2  F005         	goto	l958
  4419   000B5E                     u2280:
  4420   000B5E                     
  4421                           ;matrix_keypad.c: 52:         return 11;
  4422   000B5E  0E0B               	movlw	11
  4423   000B60  EFDF  F005         	goto	l950
  4424   000B64                     l958:
  4425                           
  4426                           ;matrix_keypad.c: 54:     RB7=0;
  4427   000B64  9E81               	bcf	3969,7,c	;volatile
  4428                           
  4429                           ;matrix_keypad.c: 55:     RB7=0;
  4430   000B66  9E81               	bcf	3969,7,c	;volatile
  4431                           
  4432                           ;matrix_keypad.c: 56:     RB5=RB6=1;
  4433   000B68  8C81               	bsf	3969,6,c	;volatile
  4434   000B6A  8A81               	bsf	3969,5,c	;volatile
  4435                           
  4436                           ;matrix_keypad.c: 57:     if(RB1==0)
  4437   000B6C  B281               	btfsc	3969,1,c	;volatile
  4438   000B6E  EFBB  F005         	goto	u2291
  4439   000B72  EFBD  F005         	goto	u2290
  4440   000B76                     u2291:
  4441   000B76  EFC0  F005         	goto	l964
  4442   000B7A                     u2290:
  4443   000B7A                     
  4444                           ;matrix_keypad.c: 58:         return 3;
  4445   000B7A  0E03               	movlw	3
  4446   000B7C  EFDF  F005         	goto	l950
  4447   000B80                     l964:
  4448   000B80  B481               	btfsc	3969,2,c	;volatile
  4449   000B82  EFC5  F005         	goto	u2301
  4450   000B86  EFC7  F005         	goto	u2300
  4451   000B8A                     u2301:
  4452   000B8A  EFCA  F005         	goto	l966
  4453   000B8E                     u2300:
  4454   000B8E                     
  4455                           ;matrix_keypad.c: 60:         return 6;
  4456   000B8E  0E06               	movlw	6
  4457   000B90  EFDF  F005         	goto	l950
  4458   000B94                     l966:
  4459   000B94  B681               	btfsc	3969,3,c	;volatile
  4460   000B96  EFCF  F005         	goto	u2311
  4461   000B9A  EFD1  F005         	goto	u2310
  4462   000B9E                     u2311:
  4463   000B9E  EFD4  F005         	goto	l968
  4464   000BA2                     u2310:
  4465   000BA2                     
  4466                           ;matrix_keypad.c: 62:         return 9;
  4467   000BA2  0E09               	movlw	9
  4468   000BA4  EFDF  F005         	goto	l950
  4469   000BA8                     l968:
  4470   000BA8  B881               	btfsc	3969,4,c	;volatile
  4471   000BAA  EFD9  F005         	goto	u2321
  4472   000BAE  EFDB  F005         	goto	u2320
  4473   000BB2                     u2321:
  4474   000BB2  EFDE  F005         	goto	l967
  4475   000BB6                     u2320:
  4476   000BB6                     
  4477                           ;matrix_keypad.c: 64:         return 12;
  4478   000BB6  0E0C               	movlw	12
  4479   000BB8  EFDF  F005         	goto	l950
  4480   000BBC                     l967:
  4481   000BBC                     
  4482                           ;matrix_keypad.c: 65:     return 0xFF;
  4483   000BBC  0EFF               	movlw	255
  4484   000BBE                     l950:
  4485   000BBE  0012               	return		;funcret
  4486   000BC0                     __end_of_scan_key:
  4487                           	callstack 0
  4488                           
  4489 ;; *************** function _init_config *****************
  4490 ;; Defined at:
  4491 ;;		line 12 in file "main.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;		None
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;		None
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  1    wreg      void 
  4498 ;; Registers used:
  4499 ;;		wreg, status,2, status,0, cstack
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4505 ;;      Params:         0       0       0       0       0       0       0
  4506 ;;      Locals:         0       0       0       0       0       0       0
  4507 ;;      Temps:          0       0       0       0       0       0       0
  4508 ;;      Totals:         0       0       0       0       0       0       0
  4509 ;;Total ram usage:        0 bytes
  4510 ;; Hardware stack levels used: 1
  4511 ;; Hardware stack levels required when called: 5
  4512 ;; This function calls:
  4513 ;;		_init_adc
  4514 ;;		_init_clcd
  4515 ;;		_init_ds1307
  4516 ;;		_init_i2c
  4517 ;;		_init_matrix_keypad
  4518 ;;		_init_password
  4519 ;;		_init_uart
  4520 ;; This function is called by:
  4521 ;;		_main
  4522 ;; This function uses a non-reentrant model
  4523 ;;
  4524                           
  4525                           	psect	text8
  4526   000240                     __ptext8:
  4527                           	callstack 0
  4528   000240                     _init_config:
  4529                           	callstack 25
  4530   000240                     
  4531                           ;main.c: 14:     init_clcd();
  4532   000240  EC85  F004         	call	_init_clcd	;wreg free
  4533   000244                     
  4534                           ;main.c: 15:     init_matrix_keypad();
  4535   000244  ECB9  F000         	call	_init_matrix_keypad	;wreg free
  4536   000248                     
  4537                           ;main.c: 16:     init_adc();
  4538   000248  EC02  F001         	call	_init_adc	;wreg free
  4539   00024C                     
  4540                           ;main.c: 17:  init_i2c();
  4541   00024C  ECD2  F000         	call	_init_i2c	;wreg free
  4542   000250                     
  4543                           ;main.c: 18:  init_ds1307();
  4544   000250  EC00  F002         	call	_init_ds1307	;wreg free
  4545   000254                     
  4546                           ;main.c: 19:     init_password();
  4547   000254  ECBA  F001         	call	_init_password	;wreg free
  4548   000258                     
  4549                           ;main.c: 20:     init_uart();
  4550   000258  EC2F  F001         	call	_init_uart	;wreg free
  4551   00025C  0012               	return		;funcret
  4552   00025E                     __end_of_init_config:
  4553                           	callstack 0
  4554                           
  4555 ;; *************** function _init_uart *****************
  4556 ;; Defined at:
  4557 ;;		line 3 in file "uart.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;		None
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;		None
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1    wreg      void 
  4564 ;; Registers used:
  4565 ;;		wreg, status,2
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4571 ;;      Params:         0       0       0       0       0       0       0
  4572 ;;      Locals:         0       0       0       0       0       0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0
  4574 ;;      Totals:         0       0       0       0       0       0       0
  4575 ;;Total ram usage:        0 bytes
  4576 ;; Hardware stack levels used: 1
  4577 ;; This function calls:
  4578 ;;		Nothing
  4579 ;; This function is called by:
  4580 ;;		_init_config
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584                           	psect	text9
  4585   00025E                     __ptext9:
  4586                           	callstack 0
  4587   00025E                     _init_uart:
  4588                           	callstack 29
  4589   00025E                     
  4590                           ;uart.c: 5:     TRISC7=1;
  4591   00025E  8E94               	bsf	3988,7,c	;volatile
  4592                           
  4593                           ;uart.c: 6:     TRISC6=0;
  4594   000260  9C94               	bcf	3988,6,c	;volatile
  4595                           
  4596                           ;uart.c: 8:     TX9=0;
  4597   000262  9CAC               	bcf	4012,6,c	;volatile
  4598                           
  4599                           ;uart.c: 9:     TXEN=1;
  4600   000264  8AAC               	bsf	4012,5,c	;volatile
  4601                           
  4602                           ;uart.c: 10:     SYNC=0;
  4603   000266  98AC               	bcf	4012,4,c	;volatile
  4604                           
  4605                           ;uart.c: 11:     BRGH=1;
  4606   000268  84AC               	bsf	4012,2,c	;volatile
  4607                           
  4608                           ;uart.c: 13:     SPEN=1;
  4609   00026A  8EAB               	bsf	4011,7,c	;volatile
  4610                           
  4611                           ;uart.c: 14:     CREN=1;
  4612   00026C  88AB               	bsf	4011,4,c	;volatile
  4613                           
  4614                           ;uart.c: 15:     RX9=0;
  4615   00026E  9CAB               	bcf	4011,6,c	;volatile
  4616                           
  4617                           ;uart.c: 17:     BRG16=0;
  4618   000270  96B8               	bcf	4024,3,c	;volatile
  4619   000272                     
  4620                           ;uart.c: 19:     SPBRG=129;
  4621   000272  0E81               	movlw	129
  4622   000274  6EAF               	movwf	175,c	;volatile
  4623   000276                     
  4624                           ;uart.c: 21:     TXIE=1;
  4625   000276  889D               	bsf	3997,4,c	;volatile
  4626   000278                     
  4627                           ;uart.c: 22:     TXIF=0;
  4628   000278  989E               	bcf	3998,4,c	;volatile
  4629   00027A                     
  4630                           ;uart.c: 23:     RCIE=1;
  4631   00027A  8A9D               	bsf	3997,5,c	;volatile
  4632   00027C                     
  4633                           ;uart.c: 24:     RCIF=0;
  4634   00027C  9A9E               	bcf	3998,5,c	;volatile
  4635   00027E  0012               	return		;funcret
  4636   000280                     __end_of_init_uart:
  4637                           	callstack 0
  4638                           
  4639 ;; *************** function _init_password *****************
  4640 ;; Defined at:
  4641 ;;		line 121 in file "change_password.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;		None
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;		None
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  1    wreg      void 
  4648 ;; Registers used:
  4649 ;;		wreg, status,2, cstack
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4655 ;;      Params:         0       0       0       0       0       0       0
  4656 ;;      Locals:         0       0       0       0       0       0       0
  4657 ;;      Temps:          0       0       0       0       0       0       0
  4658 ;;      Totals:         0       0       0       0       0       0       0
  4659 ;;Total ram usage:        0 bytes
  4660 ;; Hardware stack levels used: 1
  4661 ;; Hardware stack levels required when called: 4
  4662 ;; This function calls:
  4663 ;;		_read_external_eeprom
  4664 ;; This function is called by:
  4665 ;;		_init_config
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           	psect	text10
  4670   000374                     __ptext10:
  4671                           	callstack 0
  4672   000374                     _init_password:
  4673                           	callstack 25
  4674   000374                     
  4675                           ;change_password.c: 123:     if (read_external_eeprom(0x84) == 'z')
  4676   000374  0E84               	movlw	132
  4677   000376  EC68  F001         	call	_read_external_eeprom
  4678   00037A  0A7A               	xorlw	122
  4679   00037C  A4D8               	btfss	status,2,c
  4680   00037E  EFC3  F001         	goto	u2151
  4681   000382  EFC5  F001         	goto	u2150
  4682   000386                     u2151:
  4683   000386  EFDB  F001         	goto	l211
  4684   00038A                     u2150:
  4685   00038A                     
  4686                           ;change_password.c: 124:     {;change_password.c: 125:         m_password[0] = read_exte
      +                          rnal_eeprom(0x80);
  4687   00038A  0E80               	movlw	128
  4688   00038C  EC68  F001         	call	_read_external_eeprom
  4689   000390  0100               	movlb	0	; () banked
  4690   000392  6FCE               	movwf	_m_password& (0+255),b
  4691                           
  4692                           ;change_password.c: 126:         m_password[1] = read_external_eeprom(0x81);
  4693   000394  0E81               	movlw	129
  4694   000396  EC68  F001         	call	_read_external_eeprom
  4695   00039A  0100               	movlb	0	; () banked
  4696   00039C  6FCF               	movwf	(_m_password+1)& (0+255),b
  4697                           
  4698                           ;change_password.c: 127:         m_password[2] = read_external_eeprom(0x82);
  4699   00039E  0E82               	movlw	130
  4700   0003A0  EC68  F001         	call	_read_external_eeprom
  4701   0003A4  0100               	movlb	0	; () banked
  4702   0003A6  6FD0               	movwf	(_m_password+2)& (0+255),b
  4703                           
  4704                           ;change_password.c: 128:         m_password[3] = read_external_eeprom(0x83);
  4705   0003A8  0E83               	movlw	131
  4706   0003AA  EC68  F001         	call	_read_external_eeprom
  4707   0003AE  0100               	movlb	0	; () banked
  4708   0003B0  6FD1               	movwf	(_m_password+3)& (0+255),b
  4709   0003B2                     
  4710                           ; BSR set to: 0
  4711                           ;change_password.c: 129:         m_password[4] = '\0';
  4712   0003B2  0E00               	movlw	0
  4713   0003B4  6FD2               	movwf	(_m_password+4)& (0+255),b
  4714   0003B6                     l211:
  4715   0003B6  0012               	return		;funcret
  4716   0003B8                     __end_of_init_password:
  4717                           	callstack 0
  4718                           
  4719 ;; *************** function _init_matrix_keypad *****************
  4720 ;; Defined at:
  4721 ;;		line 3 in file "matrix_keypad.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;		None
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;		None
  4726 ;; Return value:  Size  Location     Type
  4727 ;;                  1    wreg      void 
  4728 ;; Registers used:
  4729 ;;		wreg, status,2
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/0
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4735 ;;      Params:         0       0       0       0       0       0       0
  4736 ;;      Locals:         0       0       0       0       0       0       0
  4737 ;;      Temps:          0       0       0       0       0       0       0
  4738 ;;      Totals:         0       0       0       0       0       0       0
  4739 ;;Total ram usage:        0 bytes
  4740 ;; Hardware stack levels used: 1
  4741 ;; This function calls:
  4742 ;;		Nothing
  4743 ;; This function is called by:
  4744 ;;		_init_config
  4745 ;; This function uses a non-reentrant model
  4746 ;;
  4747                           
  4748                           	psect	text11
  4749   000172                     __ptext11:
  4750                           	callstack 0
  4751   000172                     _init_matrix_keypad:
  4752                           	callstack 29
  4753   000172                     
  4754                           ;matrix_keypad.c: 5:     TRISB = 0x1E;
  4755   000172  0E1E               	movlw	30
  4756   000174  6E93               	movwf	147,c	;volatile
  4757   000176                     
  4758                           ;matrix_keypad.c: 6:     RBPU = 0;
  4759   000176  9EF1               	bcf	4081,7,c	;volatile
  4760   000178  0012               	return		;funcret
  4761   00017A                     __end_of_init_matrix_keypad:
  4762                           	callstack 0
  4763                           
  4764 ;; *************** function _init_i2c *****************
  4765 ;; Defined at:
  4766 ;;		line 3 in file "i2c.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;		None
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;		None
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  1    wreg      void 
  4773 ;; Registers used:
  4774 ;;		wreg, status,2
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4780 ;;      Params:         0       0       0       0       0       0       0
  4781 ;;      Locals:         0       0       0       0       0       0       0
  4782 ;;      Temps:          0       0       0       0       0       0       0
  4783 ;;      Totals:         0       0       0       0       0       0       0
  4784 ;;Total ram usage:        0 bytes
  4785 ;; Hardware stack levels used: 1
  4786 ;; This function calls:
  4787 ;;		Nothing
  4788 ;; This function is called by:
  4789 ;;		_init_config
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           	psect	text12
  4794   0001A4                     __ptext12:
  4795                           	callstack 0
  4796   0001A4                     _init_i2c:
  4797                           	callstack 29
  4798   0001A4                     
  4799                           ;i2c.c: 6:  TRISC3 = 1;
  4800   0001A4  8694               	bsf	3988,3,c	;volatile
  4801                           
  4802                           ;i2c.c: 7:  TRISC4 = 1;
  4803   0001A6  8894               	bsf	3988,4,c	;volatile
  4804   0001A8                     
  4805                           ;i2c.c: 9:  SSPCON1 = 0x28;
  4806   0001A8  0E28               	movlw	40
  4807   0001AA  6EC6               	movwf	198,c	;volatile
  4808                           
  4809                           ;i2c.c: 11:  SSPADD = 0x31;
  4810   0001AC  0E31               	movlw	49
  4811   0001AE  6EC8               	movwf	200,c	;volatile
  4812   0001B0                     
  4813                           ;i2c.c: 13:  CKE = 0;
  4814   0001B0  9CC7               	bcf	4039,6,c	;volatile
  4815   0001B2                     
  4816                           ;i2c.c: 15:  SMP = 1;
  4817   0001B2  8EC7               	bsf	4039,7,c	;volatile
  4818   0001B4                     
  4819                           ;i2c.c: 17:  SSPIF = 0;
  4820   0001B4  969E               	bcf	3998,3,c	;volatile
  4821   0001B6                     
  4822                           ;i2c.c: 19:  BCLIF = 0;
  4823   0001B6  96A1               	bcf	4001,3,c	;volatile
  4824   0001B8  0012               	return		;funcret
  4825   0001BA                     __end_of_init_i2c:
  4826                           	callstack 0
  4827                           
  4828 ;; *************** function _init_ds1307 *****************
  4829 ;; Defined at:
  4830 ;;		line 2 in file "ds1307.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;		None
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;  dummy           1    3[COMRAM] unsigned char 
  4835 ;; Return value:  Size  Location     Type
  4836 ;;                  1    wreg      void 
  4837 ;; Registers used:
  4838 ;;		wreg, status,2, status,0, cstack
  4839 ;; Tracked objects:
  4840 ;;		On entry : 0/0
  4841 ;;		On exit  : 0/0
  4842 ;;		Unchanged: 0/0
  4843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4844 ;;      Params:         0       0       0       0       0       0       0
  4845 ;;      Locals:         1       0       0       0       0       0       0
  4846 ;;      Temps:          0       0       0       0       0       0       0
  4847 ;;      Totals:         1       0       0       0       0       0       0
  4848 ;;Total ram usage:        1 bytes
  4849 ;; Hardware stack levels used: 1
  4850 ;; Hardware stack levels required when called: 4
  4851 ;; This function calls:
  4852 ;;		_read_ds1307
  4853 ;;		_write_ds1307
  4854 ;; This function is called by:
  4855 ;;		_init_config
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           
  4859                           	psect	text13
  4860   000400                     __ptext13:
  4861                           	callstack 0
  4862   000400                     _init_ds1307:
  4863                           	callstack 25
  4864   000400                     
  4865                           ;ds1307.c: 4:  unsigned char dummy;;ds1307.c: 7:  dummy = read_ds1307(0x00);
  4866   000400  0E00               	movlw	0
  4867   000402  EC53  F001         	call	_read_ds1307
  4868   000406  6E04               	movwf	init_ds1307@dummy^0,c
  4869   000408                     
  4870                           ;ds1307.c: 8:  write_ds1307(0x00, dummy | 0x80);
  4871   000408  5004               	movf	init_ds1307@dummy^0,w,c
  4872   00040A  0980               	iorlw	128
  4873   00040C  6E02               	movwf	write_ds1307@data^0,c
  4874   00040E  0E00               	movlw	0
  4875   000410  EC11  F001         	call	_write_ds1307
  4876   000414                     
  4877                           ;ds1307.c: 11:  dummy = read_ds1307(0x02);
  4878   000414  0E02               	movlw	2
  4879   000416  EC53  F001         	call	_read_ds1307
  4880   00041A  6E04               	movwf	init_ds1307@dummy^0,c
  4881                           
  4882                           ;ds1307.c: 12:  write_ds1307(0x02, dummy & 0xBF);
  4883   00041C  5004               	movf	init_ds1307@dummy^0,w,c
  4884   00041E  0BBF               	andlw	191
  4885   000420  6E02               	movwf	write_ds1307@data^0,c
  4886   000422  0E02               	movlw	2
  4887   000424  EC11  F001         	call	_write_ds1307
  4888   000428                     
  4889                           ;ds1307.c: 15:  write_ds1307(0x07, 0x93);
  4890   000428  0E93               	movlw	147
  4891   00042A  6E02               	movwf	write_ds1307@data^0,c
  4892   00042C  0E07               	movlw	7
  4893   00042E  EC11  F001         	call	_write_ds1307
  4894   000432                     
  4895                           ;ds1307.c: 18:  dummy = read_ds1307(0x00);
  4896   000432  0E00               	movlw	0
  4897   000434  EC53  F001         	call	_read_ds1307
  4898   000438  6E04               	movwf	init_ds1307@dummy^0,c
  4899                           
  4900                           ;ds1307.c: 19:  write_ds1307(0x00, dummy & 0x7F);
  4901   00043A  5004               	movf	init_ds1307@dummy^0,w,c
  4902   00043C  0B7F               	andlw	127
  4903   00043E  6E02               	movwf	write_ds1307@data^0,c
  4904   000440  0E00               	movlw	0
  4905   000442  EC11  F001         	call	_write_ds1307
  4906   000446  0012               	return		;funcret
  4907   000448                     __end_of_init_ds1307:
  4908                           	callstack 0
  4909                           
  4910 ;; *************** function _write_ds1307 *****************
  4911 ;; Defined at:
  4912 ;;		line 23 in file "ds1307.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;  address         1    wreg     unsigned char 
  4915 ;;  data            1    1[COMRAM] unsigned char 
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;  address         1    2[COMRAM] unsigned char 
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  1    wreg      void 
  4920 ;; Registers used:
  4921 ;;		wreg, status,2, cstack
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4927 ;;      Params:         1       0       0       0       0       0       0
  4928 ;;      Locals:         1       0       0       0       0       0       0
  4929 ;;      Temps:          0       0       0       0       0       0       0
  4930 ;;      Totals:         2       0       0       0       0       0       0
  4931 ;;Total ram usage:        2 bytes
  4932 ;; Hardware stack levels used: 1
  4933 ;; Hardware stack levels required when called: 2
  4934 ;; This function calls:
  4935 ;;		_i2c_start
  4936 ;;		_i2c_stop
  4937 ;;		_i2c_write
  4938 ;; This function is called by:
  4939 ;;		_init_ds1307
  4940 ;;		_set_time
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           	psect	text14
  4945   000222                     __ptext14:
  4946                           	callstack 0
  4947   000222                     _write_ds1307:
  4948                           	callstack 27
  4949                           
  4950                           ;incstack = 0
  4951                           ;write_ds1307@address stored from wreg
  4952   000222  6E03               	movwf	write_ds1307@address^0,c
  4953   000224                     
  4954                           ;ds1307.c: 23: void write_ds1307(unsigned char address, unsigned char data);ds1307.c: 24
      +                          : {;ds1307.c: 25:  i2c_start();
  4955   000224  ECA9  F000         	call	_i2c_start	;wreg free
  4956   000228                     
  4957                           ;ds1307.c: 26:  i2c_write(0xD0);
  4958   000228  0ED0               	movlw	208
  4959   00022A  ECBD  F000         	call	_i2c_write
  4960   00022E                     
  4961                           ;ds1307.c: 27:  i2c_write(address);
  4962   00022E  5003               	movf	write_ds1307@address^0,w,c
  4963   000230  ECBD  F000         	call	_i2c_write
  4964   000234                     
  4965                           ;ds1307.c: 28:  i2c_write(data);
  4966   000234  5002               	movf	write_ds1307@data^0,w,c
  4967   000236  ECBD  F000         	call	_i2c_write
  4968   00023A                     
  4969                           ;ds1307.c: 29:  i2c_stop();
  4970   00023A  ECAD  F000         	call	_i2c_stop	;wreg free
  4971   00023E  0012               	return		;funcret
  4972   000240                     __end_of_write_ds1307:
  4973                           	callstack 0
  4974                           
  4975 ;; *************** function _init_clcd *****************
  4976 ;; Defined at:
  4977 ;;		line 26 in file "clcd.c"
  4978 ;; Parameters:    Size  Location     Type
  4979 ;;		None
  4980 ;; Auto vars:     Size  Location     Type
  4981 ;;		None
  4982 ;; Return value:  Size  Location     Type
  4983 ;;                  1    wreg      void 
  4984 ;; Registers used:
  4985 ;;		wreg, status,2, status,0, cstack
  4986 ;; Tracked objects:
  4987 ;;		On entry : 0/0
  4988 ;;		On exit  : 0/0
  4989 ;;		Unchanged: 0/0
  4990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4991 ;;      Params:         0       0       0       0       0       0       0
  4992 ;;      Locals:         0       0       0       0       0       0       0
  4993 ;;      Temps:          1       0       0       0       0       0       0
  4994 ;;      Totals:         1       0       0       0       0       0       0
  4995 ;;Total ram usage:        1 bytes
  4996 ;; Hardware stack levels used: 1
  4997 ;; Hardware stack levels required when called: 1
  4998 ;; This function calls:
  4999 ;;		_clcd_write
  5000 ;; This function is called by:
  5001 ;;		_init_config
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005                           	psect	text15
  5006   00090A                     __ptext15:
  5007                           	callstack 0
  5008   00090A                     _init_clcd:
  5009                           	callstack 28
  5010   00090A                     
  5011                           ;clcd.c: 29:  TRISD = 0x00;
  5012   00090A  0E00               	movlw	0
  5013   00090C  6E95               	movwf	149,c	;volatile
  5014   00090E                     
  5015                           ;clcd.c: 31:  TRISC = TRISC & 0xF8;
  5016   00090E  5094               	movf	148,w,c	;volatile
  5017   000910  0BF8               	andlw	248
  5018   000912  6E94               	movwf	148,c	;volatile
  5019   000914                     
  5020                           ;clcd.c: 33:  RC0 = 0;
  5021   000914  9082               	bcf	3970,0,c	;volatile
  5022   000916                     
  5023                           ;clcd.c: 37:     _delay((unsigned long)((30)*(20000000/4000.0)));
  5024   000916  0EC3               	movlw	195
  5025   000918  6E03               	movwf	??_init_clcd^0,c
  5026   00091A  0ECD               	movlw	205
  5027   00091C                     u3967:
  5028   00091C  2EE8               	decfsz	wreg,f,c
  5029   00091E  D7FE               	bra	u3967
  5030   000920  2E03               	decfsz	??_init_clcd^0,f,c
  5031   000922  D7FC               	bra	u3967
  5032   000924  F000               	nop	
  5033   000926                     
  5034                           ;clcd.c: 40:     clcd_write(0x33, 0 );
  5035   000926  0E00               	movlw	0
  5036   000928  6E01               	movwf	clcd_write@control_bit^0,c
  5037   00092A  0E33               	movlw	51
  5038   00092C  EC7D  F001         	call	_clcd_write
  5039   000930                     
  5040                           ;clcd.c: 41:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  5041   000930  0E1B               	movlw	27
  5042   000932  6E03               	movwf	??_init_clcd^0,c
  5043   000934  0E9E               	movlw	158
  5044   000936                     u3977:
  5045   000936  2EE8               	decfsz	wreg,f,c
  5046   000938  D7FE               	bra	u3977
  5047   00093A  2E03               	decfsz	??_init_clcd^0,f,c
  5048   00093C  D7FC               	bra	u3977
  5049   00093E  D000               	nop2	
  5050   000940                     
  5051                           ;clcd.c: 42:     clcd_write(0x33, 0 );
  5052   000940  0E00               	movlw	0
  5053   000942  6E01               	movwf	clcd_write@control_bit^0,c
  5054   000944  0E33               	movlw	51
  5055   000946  EC7D  F001         	call	_clcd_write
  5056   00094A                     
  5057                           ;clcd.c: 43:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5058   00094A  0EA6               	movlw	166
  5059   00094C                     u3987:
  5060   00094C  2EE8               	decfsz	wreg,f,c
  5061   00094E  D7FE               	bra	u3987
  5062   000950  D000               	nop2	
  5063   000952                     
  5064                           ;clcd.c: 44:     clcd_write(0x33, 0 );
  5065   000952  0E00               	movlw	0
  5066   000954  6E01               	movwf	clcd_write@control_bit^0,c
  5067   000956  0E33               	movlw	51
  5068   000958  EC7D  F001         	call	_clcd_write
  5069   00095C                     
  5070                           ;clcd.c: 45:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  5071   00095C  D000               	nop2		;2 cycle nop
  5072   00095E  D000               	nop2		;2 cycle nop
  5073   000960  F000               	nop	
  5074   000962                     
  5075                           ;clcd.c: 47:     clcd_write(0x02, 0);
  5076   000962  0E00               	movlw	0
  5077   000964  6E01               	movwf	clcd_write@control_bit^0,c
  5078   000966  0E02               	movlw	2
  5079   000968  EC7D  F001         	call	_clcd_write
  5080   00096C                     
  5081                           ;clcd.c: 48:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5082   00096C  0EA6               	movlw	166
  5083   00096E                     u3997:
  5084   00096E  2EE8               	decfsz	wreg,f,c
  5085   000970  D7FE               	bra	u3997
  5086   000972  D000               	nop2	
  5087   000974                     
  5088                           ;clcd.c: 49:     clcd_write(0x38, 0);
  5089   000974  0E00               	movlw	0
  5090   000976  6E01               	movwf	clcd_write@control_bit^0,c
  5091   000978  0E38               	movlw	56
  5092   00097A  EC7D  F001         	call	_clcd_write
  5093   00097E                     
  5094                           ;clcd.c: 50:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5095   00097E  0EA6               	movlw	166
  5096   000980                     u4007:
  5097   000980  2EE8               	decfsz	wreg,f,c
  5098   000982  D7FE               	bra	u4007
  5099   000984  D000               	nop2	
  5100   000986                     
  5101                           ;clcd.c: 51:     clcd_write(0x01, 0);
  5102   000986  0E00               	movlw	0
  5103   000988  6E01               	movwf	clcd_write@control_bit^0,c
  5104   00098A  0E01               	movlw	1
  5105   00098C  EC7D  F001         	call	_clcd_write
  5106   000990                     
  5107                           ;clcd.c: 52:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  5108   000990  0E04               	movlw	4
  5109   000992  6E03               	movwf	??_init_clcd^0,c
  5110   000994  0E3E               	movlw	62
  5111   000996                     u4017:
  5112   000996  2EE8               	decfsz	wreg,f,c
  5113   000998  D7FE               	bra	u4017
  5114   00099A  2E03               	decfsz	??_init_clcd^0,f,c
  5115   00099C  D7FC               	bra	u4017
  5116   00099E                     
  5117                           ;clcd.c: 53:     clcd_write(0x0C, 0);
  5118   00099E  0E00               	movlw	0
  5119   0009A0  6E01               	movwf	clcd_write@control_bit^0,c
  5120   0009A2  0E0C               	movlw	12
  5121   0009A4  EC7D  F001         	call	_clcd_write
  5122   0009A8                     
  5123                           ;clcd.c: 54:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5124   0009A8  0EA6               	movlw	166
  5125   0009AA                     u4027:
  5126   0009AA  2EE8               	decfsz	wreg,f,c
  5127   0009AC  D7FE               	bra	u4027
  5128   0009AE  D000               	nop2	
  5129   0009B0  0012               	return		;funcret
  5130   0009B2                     __end_of_init_clcd:
  5131                           	callstack 0
  5132                           
  5133 ;; *************** function _init_adc *****************
  5134 ;; Defined at:
  5135 ;;		line 4 in file "adc.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;		None
  5138 ;; Auto vars:     Size  Location     Type
  5139 ;;		None
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  1    wreg      void 
  5142 ;; Registers used:
  5143 ;;		None
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5149 ;;      Params:         0       0       0       0       0       0       0
  5150 ;;      Locals:         0       0       0       0       0       0       0
  5151 ;;      Temps:          0       0       0       0       0       0       0
  5152 ;;      Totals:         0       0       0       0       0       0       0
  5153 ;;Total ram usage:        0 bytes
  5154 ;; Hardware stack levels used: 1
  5155 ;; This function calls:
  5156 ;;		Nothing
  5157 ;; This function is called by:
  5158 ;;		_init_config
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           	psect	text16
  5163   000204                     __ptext16:
  5164                           	callstack 0
  5165   000204                     _init_adc:
  5166                           	callstack 29
  5167   000204                     
  5168                           ;adc.c: 6:     ADON=1;
  5169   000204  80C2               	bsf	4034,0,c	;volatile
  5170                           
  5171                           ;adc.c: 7:     VCFG1=0;
  5172   000206  9AC1               	bcf	4033,5,c	;volatile
  5173                           
  5174                           ;adc.c: 8:     VCFG0=0;
  5175   000208  98C1               	bcf	4033,4,c	;volatile
  5176                           
  5177                           ;adc.c: 9:     PCFG3=1;
  5178   00020A  86C1               	bsf	4033,3,c	;volatile
  5179                           
  5180                           ;adc.c: 10:     PCFG2=0;
  5181   00020C  94C1               	bcf	4033,2,c	;volatile
  5182                           
  5183                           ;adc.c: 11:     PCFG1=1;
  5184   00020E  82C1               	bsf	4033,1,c	;volatile
  5185                           
  5186                           ;adc.c: 12:     PCFG0=0;
  5187   000210  90C1               	bcf	4033,0,c	;volatile
  5188                           
  5189                           ;adc.c: 13:     ADFM=1;
  5190   000212  8EC0               	bsf	4032,7,c	;volatile
  5191                           
  5192                           ;adc.c: 14:     ADCS2=0;
  5193   000214  94C0               	bcf	4032,2,c	;volatile
  5194                           
  5195                           ;adc.c: 15:     ADCS1=1;
  5196   000216  82C0               	bsf	4032,1,c	;volatile
  5197                           
  5198                           ;adc.c: 16:     ADCS0=0;
  5199   000218  90C0               	bcf	4032,0,c	;volatile
  5200                           
  5201                           ;adc.c: 17:     ACQT2=1;
  5202   00021A  8AC0               	bsf	4032,5,c	;volatile
  5203                           
  5204                           ;adc.c: 18:     ACQT1=0;
  5205   00021C  98C0               	bcf	4032,4,c	;volatile
  5206                           
  5207                           ;adc.c: 19:     ACQT0=0;
  5208   00021E  96C0               	bcf	4032,3,c	;volatile
  5209   000220  0012               	return		;funcret
  5210   000222                     __end_of_init_adc:
  5211                           	callstack 0
  5212                           
  5213 ;; *************** function _download_log *****************
  5214 ;; Defined at:
  5215 ;;		line 87 in file "view_log.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;		None
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;  j               2   18[COMRAM] int 
  5220 ;;  i               2   20[COMRAM] int 
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  1    wreg      void 
  5223 ;; Registers used:
  5224 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5225 ;; Tracked objects:
  5226 ;;		On entry : 0/0
  5227 ;;		On exit  : 0/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5230 ;;      Params:         0       0       0       0       0       0       0
  5231 ;;      Locals:         6       0       0       0       0       0       0
  5232 ;;      Temps:          2       0       0       0       0       0       0
  5233 ;;      Totals:         8       0       0       0       0       0       0
  5234 ;;Total ram usage:        8 bytes
  5235 ;; Hardware stack levels used: 1
  5236 ;; Hardware stack levels required when called: 4
  5237 ;; This function calls:
  5238 ;;		___lwmod
  5239 ;;		___wmul
  5240 ;;		_clcd_print
  5241 ;;		_clcd_write
  5242 ;;		_puts
  5243 ;;		_read_external_eeprom
  5244 ;; This function is called by:
  5245 ;;		_main
  5246 ;; This function uses a non-reentrant model
  5247 ;;
  5248                           
  5249                           	psect	text17
  5250   0014FE                     __ptext17:
  5251                           	callstack 0
  5252   0014FE                     _download_log:
  5253                           	callstack 26
  5254   0014FE                     
  5255                           ;view_log.c: 89:     if(in_flag==0)
  5256   0014FE  0100               	movlb	0	; () banked
  5257   001500  5183               	movf	_in_flag& (0+255),w,b
  5258   001502  1184               	iorwf	(_in_flag+1)& (0+255),w,b
  5259   001504  A4D8               	btfss	status,2,c
  5260   001506  EF87  F00A         	goto	u3571
  5261   00150A  EF89  F00A         	goto	u3570
  5262   00150E                     u3571:
  5263   00150E  EF01  F00C         	goto	l4989
  5264   001512                     u3570:
  5265   001512                     
  5266                           ; BSR set to: 0
  5267                           ;view_log.c: 90:     {;view_log.c: 91:         int i;;view_log.c: 92:         puts("# TI
      +                          ME     EV SP\n\r");
  5268   001512  0EB7               	movlw	low STR_29
  5269   001514  6E02               	movwf	puts@data^0,c
  5270   001516  0E2E               	movlw	high STR_29
  5271   001518  6E03               	movwf	(puts@data+1)^0,c
  5272   00151A  EC9F  F002         	call	_puts	;wreg free
  5273   00151E                     
  5274                           ;view_log.c: 93:         for(int j=0;j<log_count;j++)
  5275   00151E  0E00               	movlw	0
  5276   001520  6E14               	movwf	(download_log@j+1)^0,c
  5277   001522  0E00               	movlw	0
  5278   001524  6E13               	movwf	download_log@j^0,c
  5279   001526  EFE8  F00B         	goto	l4983
  5280   00152A                     l4935:
  5281                           
  5282                           ; BSR set to: 0
  5283                           ;view_log.c: 94:         {;view_log.c: 95:             for(i=0;i<8;i++)
  5284   00152A  0E00               	movlw	0
  5285   00152C  6E16               	movwf	(download_log@i+1)^0,c
  5286   00152E  0E00               	movlw	0
  5287   001530  6E15               	movwf	download_log@i^0,c
  5288   001532                     l4941:
  5289                           
  5290                           ;view_log.c: 96:                 view_event[i]=read_external_eeprom((unsigned char)(i+((
      +                          (log_index+9-j)%10)*12)%0x78));
  5291   001532  0E00               	movlw	0
  5292   001534  6E04               	movwf	(___lwmod@divisor+1)^0,c
  5293   001536  0E0A               	movlw	10
  5294   001538  6E03               	movwf	___lwmod@divisor^0,c
  5295   00153A  5013               	movf	download_log@j^0,w,c
  5296   00153C  0100               	movlb	0	; () banked
  5297   00153E  5D89               	subwf	_log_index& (0+255),w,b
  5298   001540  6E0F               	movwf	??_download_log^0,c
  5299   001542  5014               	movf	(download_log@j+1)^0,w,c
  5300   001544  598A               	subwfb	(_log_index+1)& (0+255),w,b
  5301   001546  6E10               	movwf	(??_download_log+1)^0,c
  5302   001548  0E09               	movlw	9
  5303   00154A  240F               	addwf	??_download_log^0,w,c
  5304   00154C  6E01               	movwf	___lwmod@dividend^0,c
  5305   00154E  0E00               	movlw	0
  5306   001550  2010               	addwfc	(??_download_log+1)^0,w,c
  5307   001552  6E02               	movwf	(___lwmod@dividend+1)^0,c
  5308   001554  ECCE  F002         	call	___lwmod	;wreg free
  5309   001558  C001  F006         	movff	?___lwmod,___wmul@multiplier
  5310   00155C  C002  F007         	movff	?___lwmod+1,___wmul@multiplier+1
  5311   001560  0E00               	movlw	0
  5312   001562  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  5313   001564  0E0C               	movlw	12
  5314   001566  6E08               	movwf	___wmul@multiplicand^0,c
  5315   001568  EC40  F001         	call	___wmul	;wreg free
  5316   00156C  C006  F011         	movff	?___wmul,_download_log$1547
  5317   001570  C007  F012         	movff	?___wmul+1,_download_log$1547+1
  5318   001574                     
  5319                           ;view_log.c: 96:                 view_event[i]=read_external_eeprom((unsigned char)(i+((
      +                          (log_index+9-j)%10)*12)%0x78));
  5320   001574  0EA4               	movlw	low _view_event
  5321   001576  2415               	addwf	download_log@i^0,w,c
  5322   001578  6ED9               	movwf	fsr2l,c
  5323   00157A  0E00               	movlw	high _view_event
  5324   00157C  2016               	addwfc	(download_log@i+1)^0,w,c
  5325   00157E  6EDA               	movwf	fsr2h,c
  5326   001580  C011  F001         	movff	_download_log$1547,___lwmod@dividend
  5327   001584  C012  F002         	movff	_download_log$1547+1,___lwmod@dividend+1
  5328   001588  0E00               	movlw	0
  5329   00158A  6E04               	movwf	(___lwmod@divisor+1)^0,c
  5330   00158C  0E78               	movlw	120
  5331   00158E  6E03               	movwf	___lwmod@divisor^0,c
  5332   001590  ECCE  F002         	call	___lwmod	;wreg free
  5333   001594  5001               	movf	?___lwmod^0,w,c
  5334   001596  2415               	addwf	download_log@i^0,w,c
  5335   001598  EC68  F001         	call	_read_external_eeprom
  5336   00159C  6EDF               	movwf	indf2,c
  5337   00159E  4A15               	infsnz	download_log@i^0,f,c
  5338   0015A0  2A16               	incf	(download_log@i+1)^0,f,c
  5339   0015A2  BE16               	btfsc	(download_log@i+1)^0,7,c
  5340   0015A4  EFDD  F00A         	goto	u3581
  5341   0015A8  5016               	movf	(download_log@i+1)^0,w,c
  5342   0015AA  E109               	bnz	u3580
  5343   0015AC  0E08               	movlw	8
  5344   0015AE  5C15               	subwf	download_log@i^0,w,c
  5345   0015B0  A0D8               	btfss	status,0,c
  5346   0015B2  EFDD  F00A         	goto	u3581
  5347   0015B6  EFDF  F00A         	goto	u3580
  5348   0015BA                     u3581:
  5349   0015BA  EF99  F00A         	goto	l4941
  5350   0015BE                     u3580:
  5351   0015BE                     
  5352                           ;view_log.c: 97:             view_event[i]=' ';
  5353   0015BE  0EA4               	movlw	low _view_event
  5354   0015C0  2415               	addwf	download_log@i^0,w,c
  5355   0015C2  6ED9               	movwf	fsr2l,c
  5356   0015C4  0E00               	movlw	high _view_event
  5357   0015C6  2016               	addwfc	(download_log@i+1)^0,w,c
  5358   0015C8  6EDA               	movwf	fsr2h,c
  5359   0015CA  0E20               	movlw	32
  5360   0015CC  6EDF               	movwf	indf2,c
  5361   0015CE                     
  5362                           ;view_log.c: 98:             i++;
  5363   0015CE  4A15               	infsnz	download_log@i^0,f,c
  5364   0015D0  2A16               	incf	(download_log@i+1)^0,f,c
  5365   0015D2                     
  5366                           ;view_log.c: 99:             view_event[i]=read_external_eeprom((unsigned char)(i-1+(((l
      +                          og_index+9-j)%10)*12)%0x78));
  5367   0015D2  0E00               	movlw	0
  5368   0015D4  6E04               	movwf	(___lwmod@divisor+1)^0,c
  5369   0015D6  0E0A               	movlw	10
  5370   0015D8  6E03               	movwf	___lwmod@divisor^0,c
  5371   0015DA  5013               	movf	download_log@j^0,w,c
  5372   0015DC  0100               	movlb	0	; () banked
  5373   0015DE  5D89               	subwf	_log_index& (0+255),w,b
  5374   0015E0  6E0F               	movwf	??_download_log^0,c
  5375   0015E2  5014               	movf	(download_log@j+1)^0,w,c
  5376   0015E4  598A               	subwfb	(_log_index+1)& (0+255),w,b
  5377   0015E6  6E10               	movwf	(??_download_log+1)^0,c
  5378   0015E8  0E09               	movlw	9
  5379   0015EA  240F               	addwf	??_download_log^0,w,c
  5380   0015EC  6E01               	movwf	___lwmod@dividend^0,c
  5381   0015EE  0E00               	movlw	0
  5382   0015F0  2010               	addwfc	(??_download_log+1)^0,w,c
  5383   0015F2  6E02               	movwf	(___lwmod@dividend+1)^0,c
  5384   0015F4  ECCE  F002         	call	___lwmod	;wreg free
  5385   0015F8  C001  F006         	movff	?___lwmod,___wmul@multiplier
  5386   0015FC  C002  F007         	movff	?___lwmod+1,___wmul@multiplier+1
  5387   001600  0E00               	movlw	0
  5388   001602  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  5389   001604  0E0C               	movlw	12
  5390   001606  6E08               	movwf	___wmul@multiplicand^0,c
  5391   001608  EC40  F001         	call	___wmul	;wreg free
  5392   00160C  C006  F011         	movff	?___wmul,_download_log$1547
  5393   001610  C007  F012         	movff	?___wmul+1,_download_log$1547+1
  5394   001614                     
  5395                           ;view_log.c: 99:             view_event[i]=read_external_eeprom((unsigned char)(i-1+(((l
      +                          og_index+9-j)%10)*12)%0x78));
  5396   001614  0EA4               	movlw	low _view_event
  5397   001616  2415               	addwf	download_log@i^0,w,c
  5398   001618  6ED9               	movwf	fsr2l,c
  5399   00161A  0E00               	movlw	high _view_event
  5400   00161C  2016               	addwfc	(download_log@i+1)^0,w,c
  5401   00161E  6EDA               	movwf	fsr2h,c
  5402   001620  C011  F001         	movff	_download_log$1547,___lwmod@dividend
  5403   001624  C012  F002         	movff	_download_log$1547+1,___lwmod@dividend+1
  5404   001628  0E00               	movlw	0
  5405   00162A  6E04               	movwf	(___lwmod@divisor+1)^0,c
  5406   00162C  0E78               	movlw	120
  5407   00162E  6E03               	movwf	___lwmod@divisor^0,c
  5408   001630  ECCE  F002         	call	___lwmod	;wreg free
  5409   001634  5001               	movf	?___lwmod^0,w,c
  5410   001636  2415               	addwf	download_log@i^0,w,c
  5411   001638  6E0F               	movwf	??_download_log^0,c
  5412   00163A  040F               	decf	??_download_log^0,w,c
  5413   00163C  EC68  F001         	call	_read_external_eeprom
  5414   001640  6EDF               	movwf	indf2,c
  5415   001642                     
  5416                           ;view_log.c: 100:             i++;
  5417   001642  4A15               	infsnz	download_log@i^0,f,c
  5418   001644  2A16               	incf	(download_log@i+1)^0,f,c
  5419   001646                     
  5420                           ;view_log.c: 101:             view_event[i]=read_external_eeprom((unsigned char)(i-1+(((
      +                          log_index+9-j)%10)*12)%0x78));
  5421   001646  0E00               	movlw	0
  5422   001648  6E04               	movwf	(___lwmod@divisor+1)^0,c
  5423   00164A  0E0A               	movlw	10
  5424   00164C  6E03               	movwf	___lwmod@divisor^0,c
  5425   00164E  5013               	movf	download_log@j^0,w,c
  5426   001650  0100               	movlb	0	; () banked
  5427   001652  5D89               	subwf	_log_index& (0+255),w,b
  5428   001654  6E0F               	movwf	??_download_log^0,c
  5429   001656  5014               	movf	(download_log@j+1)^0,w,c
  5430   001658  598A               	subwfb	(_log_index+1)& (0+255),w,b
  5431   00165A  6E10               	movwf	(??_download_log+1)^0,c
  5432   00165C  0E09               	movlw	9
  5433   00165E  240F               	addwf	??_download_log^0,w,c
  5434   001660  6E01               	movwf	___lwmod@dividend^0,c
  5435   001662  0E00               	movlw	0
  5436   001664  2010               	addwfc	(??_download_log+1)^0,w,c
  5437   001666  6E02               	movwf	(___lwmod@dividend+1)^0,c
  5438   001668  ECCE  F002         	call	___lwmod	;wreg free
  5439   00166C  C001  F006         	movff	?___lwmod,___wmul@multiplier
  5440   001670  C002  F007         	movff	?___lwmod+1,___wmul@multiplier+1
  5441   001674  0E00               	movlw	0
  5442   001676  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  5443   001678  0E0C               	movlw	12
  5444   00167A  6E08               	movwf	___wmul@multiplicand^0,c
  5445   00167C  EC40  F001         	call	___wmul	;wreg free
  5446   001680  C006  F011         	movff	?___wmul,_download_log$1547
  5447   001684  C007  F012         	movff	?___wmul+1,_download_log$1547+1
  5448   001688                     
  5449                           ;view_log.c: 101:             view_event[i]=read_external_eeprom((unsigned char)(i-1+(((
      +                          log_index+9-j)%10)*12)%0x78));
  5450   001688  0EA4               	movlw	low _view_event
  5451   00168A  2415               	addwf	download_log@i^0,w,c
  5452   00168C  6ED9               	movwf	fsr2l,c
  5453   00168E  0E00               	movlw	high _view_event
  5454   001690  2016               	addwfc	(download_log@i+1)^0,w,c
  5455   001692  6EDA               	movwf	fsr2h,c
  5456   001694  C011  F001         	movff	_download_log$1547,___lwmod@dividend
  5457   001698  C012  F002         	movff	_download_log$1547+1,___lwmod@dividend+1
  5458   00169C  0E00               	movlw	0
  5459   00169E  6E04               	movwf	(___lwmod@divisor+1)^0,c
  5460   0016A0  0E78               	movlw	120
  5461   0016A2  6E03               	movwf	___lwmod@divisor^0,c
  5462   0016A4  ECCE  F002         	call	___lwmod	;wreg free
  5463   0016A8  5001               	movf	?___lwmod^0,w,c
  5464   0016AA  2415               	addwf	download_log@i^0,w,c
  5465   0016AC  6E0F               	movwf	??_download_log^0,c
  5466   0016AE  040F               	decf	??_download_log^0,w,c
  5467   0016B0  EC68  F001         	call	_read_external_eeprom
  5468   0016B4  6EDF               	movwf	indf2,c
  5469   0016B6                     
  5470                           ;view_log.c: 102:             i++;
  5471   0016B6  4A15               	infsnz	download_log@i^0,f,c
  5472   0016B8  2A16               	incf	(download_log@i+1)^0,f,c
  5473   0016BA                     
  5474                           ;view_log.c: 103:             view_event[i]=' ';
  5475   0016BA  0EA4               	movlw	low _view_event
  5476   0016BC  2415               	addwf	download_log@i^0,w,c
  5477   0016BE  6ED9               	movwf	fsr2l,c
  5478   0016C0  0E00               	movlw	high _view_event
  5479   0016C2  2016               	addwfc	(download_log@i+1)^0,w,c
  5480   0016C4  6EDA               	movwf	fsr2h,c
  5481   0016C6  0E20               	movlw	32
  5482   0016C8  6EDF               	movwf	indf2,c
  5483                           
  5484                           ;view_log.c: 104:             i++;
  5485   0016CA  4A15               	infsnz	download_log@i^0,f,c
  5486   0016CC  2A16               	incf	(download_log@i+1)^0,f,c
  5487   0016CE                     
  5488                           ;view_log.c: 105:             view_event[i]=read_external_eeprom((unsigned char)(i-2+(((
      +                          log_index+9-j)%10)*12)%0x78));
  5489   0016CE  0E00               	movlw	0
  5490   0016D0  6E04               	movwf	(___lwmod@divisor+1)^0,c
  5491   0016D2  0E0A               	movlw	10
  5492   0016D4  6E03               	movwf	___lwmod@divisor^0,c
  5493   0016D6  5013               	movf	download_log@j^0,w,c
  5494   0016D8  0100               	movlb	0	; () banked
  5495   0016DA  5D89               	subwf	_log_index& (0+255),w,b
  5496   0016DC  6E0F               	movwf	??_download_log^0,c
  5497   0016DE  5014               	movf	(download_log@j+1)^0,w,c
  5498   0016E0  598A               	subwfb	(_log_index+1)& (0+255),w,b
  5499   0016E2  6E10               	movwf	(??_download_log+1)^0,c
  5500   0016E4  0E09               	movlw	9
  5501   0016E6  240F               	addwf	??_download_log^0,w,c
  5502   0016E8  6E01               	movwf	___lwmod@dividend^0,c
  5503   0016EA  0E00               	movlw	0
  5504   0016EC  2010               	addwfc	(??_download_log+1)^0,w,c
  5505   0016EE  6E02               	movwf	(___lwmod@dividend+1)^0,c
  5506   0016F0  ECCE  F002         	call	___lwmod	;wreg free
  5507   0016F4  C001  F006         	movff	?___lwmod,___wmul@multiplier
  5508   0016F8  C002  F007         	movff	?___lwmod+1,___wmul@multiplier+1
  5509   0016FC  0E00               	movlw	0
  5510   0016FE  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  5511   001700  0E0C               	movlw	12
  5512   001702  6E08               	movwf	___wmul@multiplicand^0,c
  5513   001704  EC40  F001         	call	___wmul	;wreg free
  5514   001708  C006  F011         	movff	?___wmul,_download_log$1547
  5515   00170C  C007  F012         	movff	?___wmul+1,_download_log$1547+1
  5516   001710                     
  5517                           ;view_log.c: 105:             view_event[i]=read_external_eeprom((unsigned char)(i-2+(((
      +                          log_index+9-j)%10)*12)%0x78));
  5518   001710  0EA4               	movlw	low _view_event
  5519   001712  2415               	addwf	download_log@i^0,w,c
  5520   001714  6ED9               	movwf	fsr2l,c
  5521   001716  0E00               	movlw	high _view_event
  5522   001718  2016               	addwfc	(download_log@i+1)^0,w,c
  5523   00171A  6EDA               	movwf	fsr2h,c
  5524   00171C  C011  F001         	movff	_download_log$1547,___lwmod@dividend
  5525   001720  C012  F002         	movff	_download_log$1547+1,___lwmod@dividend+1
  5526   001724  0E00               	movlw	0
  5527   001726  6E04               	movwf	(___lwmod@divisor+1)^0,c
  5528   001728  0E78               	movlw	120
  5529   00172A  6E03               	movwf	___lwmod@divisor^0,c
  5530   00172C  ECCE  F002         	call	___lwmod	;wreg free
  5531   001730  5001               	movf	?___lwmod^0,w,c
  5532   001732  2415               	addwf	download_log@i^0,w,c
  5533   001734  0FFE               	addlw	254
  5534   001736  EC68  F001         	call	_read_external_eeprom
  5535   00173A  6EDF               	movwf	indf2,c
  5536   00173C                     
  5537                           ;view_log.c: 106:             i++;
  5538   00173C  4A15               	infsnz	download_log@i^0,f,c
  5539   00173E  2A16               	incf	(download_log@i+1)^0,f,c
  5540   001740                     
  5541                           ;view_log.c: 107:             view_event[i]=read_external_eeprom((unsigned char)(i-2+(((
      +                          log_index+9-j)%10)*12)%0x78));
  5542   001740  0E00               	movlw	0
  5543   001742  6E04               	movwf	(___lwmod@divisor+1)^0,c
  5544   001744  0E0A               	movlw	10
  5545   001746  6E03               	movwf	___lwmod@divisor^0,c
  5546   001748  5013               	movf	download_log@j^0,w,c
  5547   00174A  0100               	movlb	0	; () banked
  5548   00174C  5D89               	subwf	_log_index& (0+255),w,b
  5549   00174E  6E0F               	movwf	??_download_log^0,c
  5550   001750  5014               	movf	(download_log@j+1)^0,w,c
  5551   001752  598A               	subwfb	(_log_index+1)& (0+255),w,b
  5552   001754  6E10               	movwf	(??_download_log+1)^0,c
  5553   001756  0E09               	movlw	9
  5554   001758  240F               	addwf	??_download_log^0,w,c
  5555   00175A  6E01               	movwf	___lwmod@dividend^0,c
  5556   00175C  0E00               	movlw	0
  5557   00175E  2010               	addwfc	(??_download_log+1)^0,w,c
  5558   001760  6E02               	movwf	(___lwmod@dividend+1)^0,c
  5559   001762  ECCE  F002         	call	___lwmod	;wreg free
  5560   001766  C001  F006         	movff	?___lwmod,___wmul@multiplier
  5561   00176A  C002  F007         	movff	?___lwmod+1,___wmul@multiplier+1
  5562   00176E  0E00               	movlw	0
  5563   001770  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  5564   001772  0E0C               	movlw	12
  5565   001774  6E08               	movwf	___wmul@multiplicand^0,c
  5566   001776  EC40  F001         	call	___wmul	;wreg free
  5567   00177A  C006  F011         	movff	?___wmul,_download_log$1547
  5568   00177E  C007  F012         	movff	?___wmul+1,_download_log$1547+1
  5569                           
  5570                           ;view_log.c: 107:             view_event[i]=read_external_eeprom((unsigned char)(i-2+(((
      +                          log_index+9-j)%10)*12)%0x78));
  5571   001782  0EA4               	movlw	low _view_event
  5572   001784  2415               	addwf	download_log@i^0,w,c
  5573   001786  6ED9               	movwf	fsr2l,c
  5574   001788  0E00               	movlw	high _view_event
  5575   00178A  2016               	addwfc	(download_log@i+1)^0,w,c
  5576   00178C  6EDA               	movwf	fsr2h,c
  5577   00178E  C011  F001         	movff	_download_log$1547,___lwmod@dividend
  5578   001792  C012  F002         	movff	_download_log$1547+1,___lwmod@dividend+1
  5579   001796  0E00               	movlw	0
  5580   001798  6E04               	movwf	(___lwmod@divisor+1)^0,c
  5581   00179A  0E78               	movlw	120
  5582   00179C  6E03               	movwf	___lwmod@divisor^0,c
  5583   00179E  ECCE  F002         	call	___lwmod	;wreg free
  5584   0017A2  5001               	movf	?___lwmod^0,w,c
  5585   0017A4  2415               	addwf	download_log@i^0,w,c
  5586   0017A6  0FFE               	addlw	254
  5587   0017A8  EC68  F001         	call	_read_external_eeprom
  5588   0017AC  6EDF               	movwf	indf2,c
  5589   0017AE                     
  5590                           ;view_log.c: 108:             view_event[14]='\0';
  5591   0017AE  0E00               	movlw	0
  5592   0017B0  0100               	movlb	0	; () banked
  5593   0017B2  6FB2               	movwf	(_view_event+14)& (0+255),b
  5594   0017B4                     
  5595                           ; BSR set to: 0
  5596                           ;view_log.c: 109:             puts(view_event);
  5597   0017B4  0EA4               	movlw	low _view_event
  5598   0017B6  6E02               	movwf	puts@data^0,c
  5599   0017B8  0E00               	movlw	high _view_event
  5600   0017BA  6E03               	movwf	(puts@data+1)^0,c
  5601   0017BC  EC9F  F002         	call	_puts	;wreg free
  5602   0017C0                     
  5603                           ;view_log.c: 110:             puts("\n\r");
  5604   0017C0  0EC7               	movlw	low (STR_29+16)
  5605   0017C2  6E02               	movwf	puts@data^0,c
  5606   0017C4  0E2E               	movlw	high (STR_29+16)
  5607   0017C6  6E03               	movwf	(puts@data+1)^0,c
  5608   0017C8  EC9F  F002         	call	_puts	;wreg free
  5609   0017CC                     
  5610                           ;view_log.c: 111:         }
  5611   0017CC  4A13               	infsnz	download_log@j^0,f,c
  5612   0017CE  2A14               	incf	(download_log@j+1)^0,f,c
  5613   0017D0                     l4983:
  5614   0017D0  0100               	movlb	0	; () banked
  5615   0017D2  5187               	movf	_log_count& (0+255),w,b
  5616   0017D4  5C13               	subwf	download_log@j^0,w,c
  5617   0017D6  5188               	movf	(_log_count+1)& (0+255),w,b
  5618   0017D8  5814               	subwfb	(download_log@j+1)^0,w,c
  5619   0017DA  A0D8               	btfss	status,0,c
  5620   0017DC  EFF2  F00B         	goto	u3591
  5621   0017E0  EFF4  F00B         	goto	u3590
  5622   0017E4                     u3591:
  5623   0017E4  EF95  F00A         	goto	l4935
  5624   0017E8                     u3590:
  5625   0017E8                     
  5626                           ; BSR set to: 0
  5627                           ;view_log.c: 112:         in_flag=1;
  5628   0017E8  0E00               	movlw	0
  5629   0017EA  6F84               	movwf	(_in_flag+1)& (0+255),b
  5630   0017EC  0E01               	movlw	1
  5631   0017EE  6F83               	movwf	_in_flag& (0+255),b
  5632                           
  5633                           ;view_log.c: 113:         timeout=4;
  5634   0017F0  0E00               	movlw	0
  5635   0017F2  6F98               	movwf	(_timeout+1)& (0+255),b
  5636   0017F4  0E04               	movlw	4
  5637   0017F6  6F97               	movwf	_timeout& (0+255),b
  5638   0017F8                     
  5639                           ; BSR set to: 0
  5640                           ;view_log.c: 114:         clcd_write(0x01, 0);
  5641   0017F8  0E00               	movlw	0
  5642   0017FA  6E01               	movwf	clcd_write@control_bit^0,c
  5643   0017FC  0E01               	movlw	1
  5644   0017FE  EC7D  F001         	call	_clcd_write
  5645   001802                     l4989:
  5646                           
  5647                           ;view_log.c: 116:     if(timeout>0)
  5648   001802  0100               	movlb	0	; () banked
  5649   001804  5197               	movf	_timeout& (0+255),w,b
  5650   001806  1198               	iorwf	(_timeout+1)& (0+255),w,b
  5651   001808  B4D8               	btfsc	status,2,c
  5652   00180A  EF09  F00C         	goto	u3601
  5653   00180E  EF0B  F00C         	goto	u3600
  5654   001812                     u3601:
  5655   001812  EF1D  F00C         	goto	l4993
  5656   001816                     u3600:
  5657   001816                     
  5658                           ; BSR set to: 0
  5659                           ;view_log.c: 117:     {;view_log.c: 118:         clcd_print("Downloading...",(0x80 + (0)
      +                          ));
  5660   001816  0E0D               	movlw	low STR_31
  5661   001818  6E0C               	movwf	clcd_print@data^0,c
  5662   00181A  0E2F               	movlw	high STR_31
  5663   00181C  6E0D               	movwf	(clcd_print@data+1)^0,c
  5664   00181E  0E80               	movlw	128
  5665   001820  6E0E               	movwf	clcd_print@addr^0,c
  5666   001822  EC00  F003         	call	_clcd_print	;wreg free
  5667                           
  5668                           ;view_log.c: 119:         clcd_print("All Events",(0xC0 + (0)));
  5669   001826  0EB1               	movlw	low STR_32
  5670   001828  6E0C               	movwf	clcd_print@data^0,c
  5671   00182A  0E2F               	movlw	high STR_32
  5672   00182C  6E0D               	movwf	(clcd_print@data+1)^0,c
  5673   00182E  0EC0               	movlw	192
  5674   001830  6E0E               	movwf	clcd_print@addr^0,c
  5675   001832  EC00  F003         	call	_clcd_print	;wreg free
  5676                           
  5677                           ;view_log.c: 120:     }
  5678   001836  EF2B  F00C         	goto	l1593
  5679   00183A                     l4993:
  5680                           
  5681                           ; BSR set to: 0
  5682                           ;view_log.c: 122:     {;view_log.c: 123:         clcd_write(0x01, 0);
  5683   00183A  0E00               	movlw	0
  5684   00183C  6E01               	movwf	clcd_write@control_bit^0,c
  5685   00183E  0E01               	movlw	1
  5686   001840  EC7D  F001         	call	_clcd_write
  5687   001844                     
  5688                           ;view_log.c: 124:         in_flag=0;
  5689   001844  0E00               	movlw	0
  5690   001846  0100               	movlb	0	; () banked
  5691   001848  6F84               	movwf	(_in_flag+1)& (0+255),b
  5692   00184A  0E00               	movlw	0
  5693   00184C  6F83               	movwf	_in_flag& (0+255),b
  5694   00184E                     
  5695                           ; BSR set to: 0
  5696                           ;view_log.c: 125:         main_f=2;
  5697   00184E  0E00               	movlw	0
  5698   001850  6FA2               	movwf	(_main_f+1)& (0+255),b
  5699   001852  0E02               	movlw	2
  5700   001854  6FA1               	movwf	_main_f& (0+255),b
  5701   001856                     l1593:
  5702   001856  0012               	return		;funcret
  5703   001858                     __end_of_download_log:
  5704                           	callstack 0
  5705                           
  5706 ;; *************** function _read_external_eeprom *****************
  5707 ;; Defined at:
  5708 ;;		line 13 in file "ext_eeprom.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;  address         1    wreg     unsigned char 
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;  address         1    1[COMRAM] unsigned char 
  5713 ;;  data            1    2[COMRAM] unsigned char 
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  1    wreg      unsigned char 
  5716 ;; Registers used:
  5717 ;;		wreg, status,2, cstack
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5723 ;;      Params:         0       0       0       0       0       0       0
  5724 ;;      Locals:         2       0       0       0       0       0       0
  5725 ;;      Temps:          0       0       0       0       0       0       0
  5726 ;;      Totals:         2       0       0       0       0       0       0
  5727 ;;Total ram usage:        2 bytes
  5728 ;; Hardware stack levels used: 1
  5729 ;; Hardware stack levels required when called: 3
  5730 ;; This function calls:
  5731 ;;		_i2c_read
  5732 ;;		_i2c_rep_start
  5733 ;;		_i2c_start
  5734 ;;		_i2c_stop
  5735 ;;		_i2c_write
  5736 ;; This function is called by:
  5737 ;;		_init_password
  5738 ;;		_view_log
  5739 ;;		_download_log
  5740 ;; This function uses a non-reentrant model
  5741 ;;
  5742                           
  5743                           	psect	text18
  5744   0002D0                     __ptext18:
  5745                           	callstack 0
  5746   0002D0                     _read_external_eeprom:
  5747                           	callstack 26
  5748                           
  5749                           ;incstack = 0
  5750                           ;read_external_eeprom@address stored from wreg
  5751   0002D0  6E02               	movwf	read_external_eeprom@address^0,c
  5752   0002D2                     
  5753                           ;ext_eeprom.c: 13: unsigned char read_external_eeprom(unsigned char address);ext_eeprom.
      +                          c: 14: {;ext_eeprom.c: 15:  unsigned char data;;ext_eeprom.c: 17:  i2c_start();
  5754   0002D2  ECA9  F000         	call	_i2c_start	;wreg free
  5755   0002D6                     
  5756                           ;ext_eeprom.c: 18:  i2c_write(0xA0);
  5757   0002D6  0EA0               	movlw	160
  5758   0002D8  ECBD  F000         	call	_i2c_write
  5759   0002DC                     
  5760                           ;ext_eeprom.c: 19:  i2c_write(address);
  5761   0002DC  5002               	movf	read_external_eeprom@address^0,w,c
  5762   0002DE  ECBD  F000         	call	_i2c_write
  5763   0002E2                     
  5764                           ;ext_eeprom.c: 20:  i2c_rep_start();
  5765   0002E2  ECB5  F000         	call	_i2c_rep_start	;wreg free
  5766   0002E6                     
  5767                           ;ext_eeprom.c: 21:  i2c_write(0xA1);
  5768   0002E6  0EA1               	movlw	161
  5769   0002E8  ECBD  F000         	call	_i2c_write
  5770                           
  5771                           ;ext_eeprom.c: 22:  data = i2c_read();
  5772   0002EC  ECC3  F000         	call	_i2c_read	;wreg free
  5773   0002F0  6E03               	movwf	read_external_eeprom@data^0,c
  5774   0002F2                     
  5775                           ;ext_eeprom.c: 23:  i2c_stop();
  5776   0002F2  ECAD  F000         	call	_i2c_stop	;wreg free
  5777                           
  5778                           ;ext_eeprom.c: 25:  return data;
  5779   0002F6  5003               	movf	read_external_eeprom@data^0,w,c
  5780   0002F8  0012               	return		;funcret
  5781   0002FA                     __end_of_read_external_eeprom:
  5782                           	callstack 0
  5783                           
  5784 ;; *************** function _puts *****************
  5785 ;; Defined at:
  5786 ;;		line 41 in file "uart.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;  data            2    1[COMRAM] PTR unsigned char 
  5789 ;;		 -> STR_30(3), STR_29(19), view_event(15), 
  5790 ;; Auto vars:     Size  Location     Type
  5791 ;;		None
  5792 ;; Return value:  Size  Location     Type
  5793 ;;                  1    wreg      void 
  5794 ;; Registers used:
  5795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5796 ;; Tracked objects:
  5797 ;;		On entry : 0/0
  5798 ;;		On exit  : 0/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5801 ;;      Params:         2       0       0       0       0       0       0
  5802 ;;      Locals:         0       0       0       0       0       0       0
  5803 ;;      Temps:          0       0       0       0       0       0       0
  5804 ;;      Totals:         2       0       0       0       0       0       0
  5805 ;;Total ram usage:        2 bytes
  5806 ;; Hardware stack levels used: 1
  5807 ;; Hardware stack levels required when called: 1
  5808 ;; This function calls:
  5809 ;;		_putch
  5810 ;; This function is called by:
  5811 ;;		_download_log
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815                           	psect	text19
  5816   00053E                     __ptext19:
  5817                           	callstack 0
  5818   00053E                     _puts:
  5819                           	callstack 28
  5820   00053E                     
  5821                           ;uart.c: 41: void puts(unsigned char *data);uart.c: 42: {;uart.c: 43:     while(*data)
  5822   00053E  EFB5  F002         	goto	l4135
  5823   000542                     l4131:
  5824                           
  5825                           ;uart.c: 44:         putch(*data++);
  5826   000542  C002  FFF6         	movff	puts@data,tblptrl
  5827   000546  C003  FFF7         	movff	puts@data+1,tblptrh
  5828   00054A  6AF8               	clrf	tblptru,c
  5829   00054C  0E05               	movlw	(high __ramtop+-1)
  5830   00054E  64F7               	cpfsgt	tblptrh,c
  5831   000550  D003               	bra	u2337
  5832   000552  0008               	tblrd		*
  5833   000554  50F5               	movf	tablat,w,c
  5834   000556  D005               	bra	u2330
  5835   000558                     u2337:
  5836   000558  CFF6 FFE9          	movff	tblptrl,fsr0l
  5837   00055C  CFF7 FFEA          	movff	tblptrh,fsr0h
  5838   000560  50EF               	movf	indf0,w,c
  5839   000562                     u2330:
  5840   000562  ECE9  F000         	call	_putch
  5841   000566  4A02               	infsnz	puts@data^0,f,c
  5842   000568  2A03               	incf	(puts@data+1)^0,f,c
  5843   00056A                     l4135:
  5844                           
  5845                           ;uart.c: 43:     while(*data)
  5846   00056A  C002  FFF6         	movff	puts@data,tblptrl
  5847   00056E  C003  FFF7         	movff	puts@data+1,tblptrh
  5848   000572  6AF8               	clrf	tblptru,c
  5849   000574  0E05               	movlw	(high __ramtop+-1)
  5850   000576  64F7               	cpfsgt	tblptrh,c
  5851   000578  D003               	bra	u2347
  5852   00057A  0008               	tblrd		*
  5853   00057C  50F5               	movf	tablat,w,c
  5854   00057E  D005               	bra	u2340
  5855   000580                     u2347:
  5856   000580  CFF6 FFE9          	movff	tblptrl,fsr0l
  5857   000584  CFF7 FFEA          	movff	tblptrh,fsr0h
  5858   000588  50EF               	movf	indf0,w,c
  5859   00058A                     u2340:
  5860   00058A  0900               	iorlw	0
  5861   00058C  A4D8               	btfss	status,2,c
  5862   00058E  EFCB  F002         	goto	u2351
  5863   000592  EFCD  F002         	goto	u2350
  5864   000596                     u2351:
  5865   000596  EFA1  F002         	goto	l4131
  5866   00059A                     u2350:
  5867   00059A  0012               	return		;funcret
  5868   00059C                     __end_of_puts:
  5869                           	callstack 0
  5870                           
  5871 ;; *************** function _putch *****************
  5872 ;; Defined at:
  5873 ;;		line 34 in file "uart.c"
  5874 ;; Parameters:    Size  Location     Type
  5875 ;;  data            1    wreg     unsigned char 
  5876 ;; Auto vars:     Size  Location     Type
  5877 ;;  data            1    0[COMRAM] unsigned char 
  5878 ;; Return value:  Size  Location     Type
  5879 ;;                  1    wreg      void 
  5880 ;; Registers used:
  5881 ;;		wreg
  5882 ;; Tracked objects:
  5883 ;;		On entry : 0/0
  5884 ;;		On exit  : 0/0
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5887 ;;      Params:         0       0       0       0       0       0       0
  5888 ;;      Locals:         1       0       0       0       0       0       0
  5889 ;;      Temps:          0       0       0       0       0       0       0
  5890 ;;      Totals:         1       0       0       0       0       0       0
  5891 ;;Total ram usage:        1 bytes
  5892 ;; Hardware stack levels used: 1
  5893 ;; This function calls:
  5894 ;;		Nothing
  5895 ;; This function is called by:
  5896 ;;		_puts
  5897 ;; This function uses a non-reentrant model
  5898 ;;
  5899                           
  5900                           	psect	text20
  5901   0001D2                     __ptext20:
  5902                           	callstack 0
  5903   0001D2                     _putch:
  5904                           	callstack 28
  5905                           
  5906                           ;incstack = 0
  5907                           ;putch@data stored from wreg
  5908   0001D2  6E01               	movwf	putch@data^0,c
  5909   0001D4                     l1483:
  5910   0001D4  A89E               	btfss	3998,4,c	;volatile
  5911   0001D6  EFEF  F000         	goto	u2071
  5912   0001DA  EFF1  F000         	goto	u2070
  5913   0001DE                     u2071:
  5914   0001DE  EFEA  F000         	goto	l1483
  5915   0001E2                     u2070:
  5916   0001E2                     
  5917                           ;uart.c: 37:     TXIF=0;
  5918   0001E2  989E               	bcf	3998,4,c	;volatile
  5919   0001E4                     
  5920                           ;uart.c: 38:     TXREG=data;
  5921   0001E4  C001  FFAD         	movff	putch@data,4013	;volatile
  5922   0001E8  0012               	return		;funcret
  5923   0001EA                     __end_of_putch:
  5924                           	callstack 0
  5925                           
  5926 ;; *************** function _dashboard *****************
  5927 ;; Defined at:
  5928 ;;		line 4 in file "dashboard.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;  key             1    wreg     unsigned char 
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;  key             1   51[COMRAM] unsigned char 
  5933 ;;  adc_val         2   49[COMRAM] unsigned short 
  5934 ;; Return value:  Size  Location     Type
  5935 ;;                  1    wreg      void 
  5936 ;; Registers used:
  5937 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5938 ;; Tracked objects:
  5939 ;;		On entry : 0/0
  5940 ;;		On exit  : 0/0
  5941 ;;		Unchanged: 0/0
  5942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5943 ;;      Params:         0       0       0       0       0       0       0
  5944 ;;      Locals:         3       0       0       0       0       0       0
  5945 ;;      Temps:          0       0       0       0       0       0       0
  5946 ;;      Totals:         3       0       0       0       0       0       0
  5947 ;;Total ram usage:        3 bytes
  5948 ;; Hardware stack levels used: 1
  5949 ;; Hardware stack levels required when called: 5
  5950 ;; This function calls:
  5951 ;;		___fldiv
  5952 ;;		___fltol
  5953 ;;		___lwdiv
  5954 ;;		___lwmod
  5955 ;;		___xxtofl
  5956 ;;		_clcd_print
  5957 ;;		_clcd_putch
  5958 ;;		_display_time
  5959 ;;		_get_time
  5960 ;;		_read_adc
  5961 ;;		_store_event
  5962 ;; This function is called by:
  5963 ;;		_main
  5964 ;; This function uses a non-reentrant model
  5965 ;;
  5966                           
  5967                           	psect	text21
  5968   0012E8                     __ptext21:
  5969                           	callstack 0
  5970   0012E8                     _dashboard:
  5971                           	callstack 25
  5972                           
  5973                           ;incstack = 0
  5974                           ;dashboard@key stored from wreg
  5975   0012E8  6E34               	movwf	dashboard@key^0,c
  5976   0012EA                     
  5977                           ;dashboard.c: 4: void dashboard(unsigned char key);dashboard.c: 5: {;dashboard.c: 6:    
      +                           unsigned short adc_val;;dashboard.c: 7:     static int c_flag;;dashboard.c: 12:     if(
      +                          key==2)
  5978   0012EA  0E02               	movlw	2
  5979   0012EC  1834               	xorwf	dashboard@key^0,w,c
  5980   0012EE  A4D8               	btfss	status,2,c
  5981   0012F0  EF7C  F009         	goto	u2961
  5982   0012F4  EF7E  F009         	goto	u2960
  5983   0012F8                     u2961:
  5984   0012F8  EFA3  F009         	goto	l4525
  5985   0012FC                     u2960:
  5986   0012FC                     
  5987                           ;dashboard.c: 13:     {;dashboard.c: 14:         if(c_flag==1)
  5988   0012FC  0100               	movlb	0	; () banked
  5989   0012FE  0573               	decf	dashboard@c_flag& (0+255),w,b
  5990   001300  1174               	iorwf	(dashboard@c_flag+1)& (0+255),w,b
  5991   001302  A4D8               	btfss	status,2,c
  5992   001304  EF86  F009         	goto	u2971
  5993   001308  EF88  F009         	goto	u2970
  5994   00130C                     u2971:
  5995   00130C  EF94  F009         	goto	l4519
  5996   001310                     u2970:
  5997   001310                     l4515:
  5998                           
  5999                           ; BSR set to: 0
  6000                           ;dashboard.c: 15:         {;dashboard.c: 16:             event_index=1;
  6001   001310  0E00               	movlw	0
  6002   001312  6F9C               	movwf	(_event_index+1)& (0+255),b
  6003   001314  0E01               	movlw	1
  6004   001316  6F9B               	movwf	_event_index& (0+255),b
  6005                           
  6006                           ;dashboard.c: 17:             c_flag=0;
  6007   001318  0E00               	movlw	0
  6008   00131A  6F74               	movwf	(dashboard@c_flag+1)& (0+255),b
  6009   00131C  0E00               	movlw	0
  6010   00131E  6F73               	movwf	dashboard@c_flag& (0+255),b
  6011   001320                     l4517:
  6012                           
  6013                           ; BSR set to: 0
  6014                           ;dashboard.c: 18:             store_event();
  6015   001320  EC88  F007         	call	_store_event	;wreg free
  6016                           
  6017                           ;dashboard.c: 19:         }
  6018   001324  EFEE  F009         	goto	l4551
  6019   001328                     l4519:
  6020                           
  6021                           ; BSR set to: 0
  6022   001328  519C               	movf	(_event_index+1)& (0+255),w,b
  6023   00132A  E107               	bnz	u2981
  6024   00132C  0E07               	movlw	7
  6025   00132E  5D9B               	subwf	_event_index& (0+255),w,b
  6026   001330  B0D8               	btfsc	status,0,c
  6027   001332  EF9D  F009         	goto	u2981
  6028   001336  EF9F  F009         	goto	u2980
  6029   00133A                     u2981:
  6030   00133A  EFEE  F009         	goto	l4551
  6031   00133E                     u2980:
  6032   00133E                     
  6033                           ; BSR set to: 0
  6034                           ;dashboard.c: 21:         {;dashboard.c: 22:             event_index++;
  6035   00133E  4B9B               	infsnz	_event_index& (0+255),f,b
  6036   001340  2B9C               	incf	(_event_index+1)& (0+255),f,b
  6037   001342  EF90  F009         	goto	l4517
  6038   001346                     l4525:
  6039   001346  0E03               	movlw	3
  6040   001348  1834               	xorwf	dashboard@key^0,w,c
  6041   00134A  A4D8               	btfss	status,2,c
  6042   00134C  EFAA  F009         	goto	u2991
  6043   001350  EFAC  F009         	goto	u2990
  6044   001354                     u2991:
  6045   001354  EFD1  F009         	goto	l4541
  6046   001358                     u2990:
  6047   001358                     
  6048                           ;dashboard.c: 27:     {;dashboard.c: 28:          if(c_flag==1)
  6049   001358  0100               	movlb	0	; () banked
  6050   00135A  0573               	decf	dashboard@c_flag& (0+255),w,b
  6051   00135C  1174               	iorwf	(dashboard@c_flag+1)& (0+255),w,b
  6052   00135E  A4D8               	btfss	status,2,c
  6053   001360  EFB4  F009         	goto	u3001
  6054   001364  EFB6  F009         	goto	u3000
  6055   001368                     u3001:
  6056   001368  EFB8  F009         	goto	l4533
  6057   00136C                     u3000:
  6058   00136C  EF88  F009         	goto	l4515
  6059   001370                     l4533:
  6060                           
  6061                           ; BSR set to: 0
  6062   001370  519C               	movf	(_event_index+1)& (0+255),w,b
  6063   001372  E109               	bnz	u3010
  6064   001374  0E02               	movlw	2
  6065   001376  5D9B               	subwf	_event_index& (0+255),w,b
  6066   001378  A0D8               	btfss	status,0,c
  6067   00137A  EFC1  F009         	goto	u3011
  6068   00137E  EFC3  F009         	goto	u3010
  6069   001382                     u3011:
  6070   001382  EFEE  F009         	goto	l4551
  6071   001386                     u3010:
  6072   001386                     
  6073                           ; BSR set to: 0
  6074   001386  0573               	decf	dashboard@c_flag& (0+255),w,b
  6075   001388  1174               	iorwf	(dashboard@c_flag+1)& (0+255),w,b
  6076   00138A  B4D8               	btfsc	status,2,c
  6077   00138C  EFCA  F009         	goto	u3021
  6078   001390  EFCC  F009         	goto	u3020
  6079   001394                     u3021:
  6080   001394  EFEE  F009         	goto	l4551
  6081   001398                     u3020:
  6082   001398                     
  6083                           ; BSR set to: 0
  6084                           ;dashboard.c: 35:         {;dashboard.c: 36:             event_index--;
  6085   001398  079B               	decf	_event_index& (0+255),f,b
  6086   00139A  A0D8               	btfss	status,0,c
  6087   00139C  079C               	decf	(_event_index+1)& (0+255),f,b
  6088   00139E  EF90  F009         	goto	l4517
  6089   0013A2                     l4541:
  6090   0013A2  0434               	decf	dashboard@key^0,w,c
  6091   0013A4  A4D8               	btfss	status,2,c
  6092   0013A6  EFD7  F009         	goto	u3031
  6093   0013AA  EFD9  F009         	goto	u3030
  6094   0013AE                     u3031:
  6095   0013AE  EFEE  F009         	goto	l4551
  6096   0013B2                     u3030:
  6097   0013B2                     
  6098                           ;dashboard.c: 41:     {;dashboard.c: 42:         c_flag=1;
  6099   0013B2  0E00               	movlw	0
  6100   0013B4  0100               	movlb	0	; () banked
  6101   0013B6  6F74               	movwf	(dashboard@c_flag+1)& (0+255),b
  6102   0013B8  0E01               	movlw	1
  6103   0013BA  6F73               	movwf	dashboard@c_flag& (0+255),b
  6104   0013BC                     
  6105                           ; BSR set to: 0
  6106                           ;dashboard.c: 43:         if(event_index!=8)
  6107   0013BC  0E08               	movlw	8
  6108   0013BE  199B               	xorwf	_event_index& (0+255),w,b
  6109   0013C0  119C               	iorwf	(_event_index+1)& (0+255),w,b
  6110   0013C2  B4D8               	btfsc	status,2,c
  6111   0013C4  EFE6  F009         	goto	u3041
  6112   0013C8  EFE8  F009         	goto	u3040
  6113   0013CC                     u3041:
  6114   0013CC  EFEE  F009         	goto	l4551
  6115   0013D0                     u3040:
  6116   0013D0                     
  6117                           ; BSR set to: 0
  6118                           ;dashboard.c: 44:         {;dashboard.c: 45:             event_index=8;
  6119   0013D0  0E00               	movlw	0
  6120   0013D2  6F9C               	movwf	(_event_index+1)& (0+255),b
  6121   0013D4  0E08               	movlw	8
  6122   0013D6  6F9B               	movwf	_event_index& (0+255),b
  6123   0013D8  EF90  F009         	goto	l4517
  6124   0013DC                     l4551:
  6125                           
  6126                           ;dashboard.c: 49:     clcd_print("TIME    EVNT  SP", (0x80 + (0)));
  6127   0013DC  0EDB               	movlw	low STR_7
  6128   0013DE  6E0C               	movwf	clcd_print@data^0,c
  6129   0013E0  0E2E               	movlw	high STR_7
  6130   0013E2  6E0D               	movwf	(clcd_print@data+1)^0,c
  6131   0013E4  0E80               	movlw	128
  6132   0013E6  6E0E               	movwf	clcd_print@addr^0,c
  6133   0013E8  EC00  F003         	call	_clcd_print	;wreg free
  6134   0013EC                     
  6135                           ;dashboard.c: 51:     get_time();
  6136   0013EC  ECAC  F003         	call	_get_time	;wreg free
  6137   0013F0                     
  6138                           ;dashboard.c: 52:     display_time();
  6139   0013F0  EC4A  F002         	call	_display_time	;wreg free
  6140   0013F4                     
  6141                           ;dashboard.c: 54:     clcd_putch(events[event_index][0], (0xC0 + (10)));
  6142   0013F4  0ECA               	movlw	202
  6143   0013F6  6E0D               	movwf	clcd_putch@addr^0,c
  6144   0013F8  90D8               	bcf	status,0,c
  6145   0013FA  0100               	movlb	0	; () banked
  6146   0013FC  359B               	rlcf	_event_index& (0+255),w,b
  6147   0013FE  6ED9               	movwf	fsr2l,c
  6148   001400  359C               	rlcf	(_event_index+1)& (0+255),w,b
  6149   001402  6EDA               	movwf	fsr2h,c
  6150   001404  0EBC               	movlw	low _events
  6151   001406  26D9               	addwf	fsr2l,f,c
  6152   001408  0E00               	movlw	high _events
  6153   00140A  22DA               	addwfc	fsr2h,f,c
  6154   00140C  50DF               	movf	indf2,w,c
  6155   00140E  ECDD  F000         	call	_clcd_putch
  6156   001412                     
  6157                           ;dashboard.c: 55:     clcd_putch(events[event_index][1], (0xC0 + (11)));
  6158   001412  0ECB               	movlw	203
  6159   001414  6E0D               	movwf	clcd_putch@addr^0,c
  6160   001416  90D8               	bcf	status,0,c
  6161   001418  0100               	movlb	0	; () banked
  6162   00141A  359B               	rlcf	_event_index& (0+255),w,b
  6163   00141C  6ED9               	movwf	fsr2l,c
  6164   00141E  359C               	rlcf	(_event_index+1)& (0+255),w,b
  6165   001420  6EDA               	movwf	fsr2h,c
  6166   001422  0EBD               	movlw	low (_events+1)
  6167   001424  26D9               	addwf	fsr2l,f,c
  6168   001426  0E00               	movlw	high (_events+1)
  6169   001428  22DA               	addwfc	fsr2h,f,c
  6170   00142A  50DF               	movf	indf2,w,c
  6171   00142C  ECDD  F000         	call	_clcd_putch
  6172   001430                     
  6173                           ;dashboard.c: 56:     adc_val=read_adc(4);
  6174   001430  0E04               	movlw	4
  6175   001432  ECDC  F001         	call	_read_adc
  6176   001436  C001  F032         	movff	?_read_adc,dashboard@adc_val
  6177   00143A  C002  F033         	movff	?_read_adc+1,dashboard@adc_val+1
  6178   00143E                     
  6179                           ;dashboard.c: 57:     speed=adc_val/10.33;
  6180   00143E  0EAE               	movlw	174
  6181   001440  6E13               	movwf	___fldiv@a^0,c
  6182   001442  0E47               	movlw	71
  6183   001444  6E14               	movwf	(___fldiv@a+1)^0,c
  6184   001446  0E25               	movlw	37
  6185   001448  6E15               	movwf	(___fldiv@a+2)^0,c
  6186   00144A  0E41               	movlw	65
  6187   00144C  6E16               	movwf	(___fldiv@a+3)^0,c
  6188   00144E  C032  F001         	movff	dashboard@adc_val,___xxtofl@val
  6189   001452  C033  F002         	movff	dashboard@adc_val+1,___xxtofl@val+1
  6190   001456  6A03               	clrf	(___xxtofl@val+2)^0,c
  6191   001458  6A04               	clrf	(___xxtofl@val+3)^0,c
  6192   00145A  0E00               	movlw	0
  6193   00145C  ECAE  F006         	call	___xxtofl
  6194   001460  C001  F00F         	movff	?___xxtofl,___fldiv@b
  6195   001464  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  6196   001468  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  6197   00146C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  6198   001470  EC2C  F00C         	call	___fldiv	;wreg free
  6199   001474  C00F  F028         	movff	?___fldiv,___fltol@f1
  6200   001478  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
  6201   00147C  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
  6202   001480  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
  6203   001484  ECD9  F004         	call	___fltol	;wreg free
  6204   001488  C028  F099         	movff	?___fltol,_speed
  6205   00148C  C029  F09A         	movff	?___fltol+1,_speed+1
  6206   001490                     
  6207                           ;dashboard.c: 58:     clcd_putch(speed/10+48, (0xC0 + (14)));
  6208   001490  0ECE               	movlw	206
  6209   001492  6E0D               	movwf	clcd_putch@addr^0,c
  6210   001494  C099  F006         	movff	_speed,___lwdiv@dividend
  6211   001498  C09A  F007         	movff	_speed+1,___lwdiv@dividend+1
  6212   00149C  0E00               	movlw	0
  6213   00149E  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  6214   0014A0  0E0A               	movlw	10
  6215   0014A2  6E08               	movwf	___lwdiv@divisor^0,c
  6216   0014A4  EC36  F003         	call	___lwdiv	;wreg free
  6217   0014A8  5006               	movf	?___lwdiv^0,w,c
  6218   0014AA  0F30               	addlw	48
  6219   0014AC  ECDD  F000         	call	_clcd_putch
  6220   0014B0                     
  6221                           ;dashboard.c: 59:     clcd_putch(speed%10+48, (0xC0 + (15)));
  6222   0014B0  0ECF               	movlw	207
  6223   0014B2  6E0D               	movwf	clcd_putch@addr^0,c
  6224   0014B4  C099  F001         	movff	_speed,___lwmod@dividend
  6225   0014B8  C09A  F002         	movff	_speed+1,___lwmod@dividend+1
  6226   0014BC  0E00               	movlw	0
  6227   0014BE  6E04               	movwf	(___lwmod@divisor+1)^0,c
  6228   0014C0  0E0A               	movlw	10
  6229   0014C2  6E03               	movwf	___lwmod@divisor^0,c
  6230   0014C4  ECCE  F002         	call	___lwmod	;wreg free
  6231   0014C8  5001               	movf	?___lwmod^0,w,c
  6232   0014CA  0F30               	addlw	48
  6233   0014CC  ECDD  F000         	call	_clcd_putch
  6234   0014D0                     
  6235                           ;dashboard.c: 60:     clear_dis=1;
  6236   0014D0  0E00               	movlw	0
  6237   0014D2  0100               	movlb	0	; () banked
  6238   0014D4  6F96               	movwf	(_clear_dis+1)& (0+255),b
  6239   0014D6  0E01               	movlw	1
  6240   0014D8  6F95               	movwf	_clear_dis& (0+255),b
  6241   0014DA                     
  6242                           ; BSR set to: 0
  6243                           ;dashboard.c: 61:     timeout=9;
  6244   0014DA  0E00               	movlw	0
  6245   0014DC  6F98               	movwf	(_timeout+1)& (0+255),b
  6246   0014DE  0E09               	movlw	9
  6247   0014E0  6F97               	movwf	_timeout& (0+255),b
  6248   0014E2                     
  6249                           ; BSR set to: 0
  6250                           ;dashboard.c: 62:     if(key==11)
  6251   0014E2  0E0B               	movlw	11
  6252   0014E4  1834               	xorwf	dashboard@key^0,w,c
  6253   0014E6  A4D8               	btfss	status,2,c
  6254   0014E8  EF78  F00A         	goto	u3051
  6255   0014EC  EF7A  F00A         	goto	u3050
  6256   0014F0                     u3051:
  6257   0014F0  EF7E  F00A         	goto	l388
  6258   0014F4                     u3050:
  6259   0014F4                     
  6260                           ; BSR set to: 0
  6261                           ;dashboard.c: 63:         main_f=1;
  6262   0014F4  0E00               	movlw	0
  6263   0014F6  6FA2               	movwf	(_main_f+1)& (0+255),b
  6264   0014F8  0E01               	movlw	1
  6265   0014FA  6FA1               	movwf	_main_f& (0+255),b
  6266   0014FC                     l388:
  6267                           
  6268                           ; BSR set to: 0
  6269   0014FC  0012               	return		;funcret
  6270   0014FE                     __end_of_dashboard:
  6271                           	callstack 0
  6272                           
  6273 ;; *************** function _store_event *****************
  6274 ;; Defined at:
  6275 ;;		line 3 in file "store_event.c"
  6276 ;; Parameters:    Size  Location     Type
  6277 ;;		None
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;  i               2   16[COMRAM] int 
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  1    wreg      void 
  6282 ;; Registers used:
  6283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6289 ;;      Params:         0       0       0       0       0       0       0
  6290 ;;      Locals:         2       0       0       0       0       0       0
  6291 ;;      Temps:          0       0       0       0       0       0       0
  6292 ;;      Totals:         2       0       0       0       0       0       0
  6293 ;;Total ram usage:        2 bytes
  6294 ;; Hardware stack levels used: 1
  6295 ;; Hardware stack levels required when called: 3
  6296 ;; This function calls:
  6297 ;;		___lwdiv
  6298 ;;		___lwmod
  6299 ;;		___wmul
  6300 ;;		_write_external_eeprom
  6301 ;; This function is called by:
  6302 ;;		_dashboard
  6303 ;;		_main
  6304 ;;		_set_time
  6305 ;; This function uses a non-reentrant model
  6306 ;;
  6307                           
  6308                           	psect	text22
  6309   000F10                     __ptext22:
  6310                           	callstack 0
  6311   000F10                     _store_event:
  6312                           	callstack 27
  6313   000F10                     
  6314                           ;store_event.c: 5:     int i;;store_event.c: 7:     for(i=0;i<8;i++)
  6315   000F10  0E00               	movlw	0
  6316   000F12  6E12               	movwf	(store_event@i+1)^0,c
  6317   000F14  0E00               	movlw	0
  6318   000F16  6E11               	movwf	store_event@i^0,c
  6319   000F18                     l3969:
  6320                           
  6321                           ;store_event.c: 8:     {;store_event.c: 9:         write_external_eeprom((unsigned char)
      +                          (i+(log_index*12)%0x78),time[i]);
  6322   000F18  0EB3               	movlw	low _time
  6323   000F1A  2411               	addwf	store_event@i^0,w,c
  6324   000F1C  6ED9               	movwf	fsr2l,c
  6325   000F1E  0E00               	movlw	high _time
  6326   000F20  2012               	addwfc	(store_event@i+1)^0,w,c
  6327   000F22  6EDA               	movwf	fsr2h,c
  6328   000F24  50DF               	movf	indf2,w,c
  6329   000F26  6E0D               	movwf	write_external_eeprom@data^0,c
  6330   000F28  C089  F006         	movff	_log_index,___wmul@multiplier
  6331   000F2C  C08A  F007         	movff	_log_index+1,___wmul@multiplier+1
  6332   000F30  0E00               	movlw	0
  6333   000F32  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  6334   000F34  0E0C               	movlw	12
  6335   000F36  6E08               	movwf	___wmul@multiplicand^0,c
  6336   000F38  EC40  F001         	call	___wmul	;wreg free
  6337   000F3C  C006  F001         	movff	?___wmul,___lwmod@dividend
  6338   000F40  C007  F002         	movff	?___wmul+1,___lwmod@dividend+1
  6339   000F44  0E00               	movlw	0
  6340   000F46  6E04               	movwf	(___lwmod@divisor+1)^0,c
  6341   000F48  0E78               	movlw	120
  6342   000F4A  6E03               	movwf	___lwmod@divisor^0,c
  6343   000F4C  ECCE  F002         	call	___lwmod	;wreg free
  6344   000F50  5001               	movf	?___lwmod^0,w,c
  6345   000F52  2411               	addwf	store_event@i^0,w,c
  6346   000F54  EC9A  F001         	call	_write_external_eeprom
  6347   000F58                     
  6348                           ;store_event.c: 10:     }
  6349   000F58  4A11               	infsnz	store_event@i^0,f,c
  6350   000F5A  2A12               	incf	(store_event@i+1)^0,f,c
  6351   000F5C  BE12               	btfsc	(store_event@i+1)^0,7,c
  6352   000F5E  EFBA  F007         	goto	u2161
  6353   000F62  5012               	movf	(store_event@i+1)^0,w,c
  6354   000F64  E109               	bnz	u2160
  6355   000F66  0E08               	movlw	8
  6356   000F68  5C11               	subwf	store_event@i^0,w,c
  6357   000F6A  A0D8               	btfss	status,0,c
  6358   000F6C  EFBA  F007         	goto	u2161
  6359   000F70  EFBC  F007         	goto	u2160
  6360   000F74                     u2161:
  6361   000F74  EF8C  F007         	goto	l3969
  6362   000F78                     u2160:
  6363   000F78                     
  6364                           ;store_event.c: 11:     write_external_eeprom((unsigned char)(i+(log_index*12)%0x78),eve
      +                          nts[event_index][0]);
  6365   000F78  90D8               	bcf	status,0,c
  6366   000F7A  0100               	movlb	0	; () banked
  6367   000F7C  359B               	rlcf	_event_index& (0+255),w,b
  6368   000F7E  6ED9               	movwf	fsr2l,c
  6369   000F80  359C               	rlcf	(_event_index+1)& (0+255),w,b
  6370   000F82  6EDA               	movwf	fsr2h,c
  6371   000F84  0EBC               	movlw	low _events
  6372   000F86  26D9               	addwf	fsr2l,f,c
  6373   000F88  0E00               	movlw	high _events
  6374   000F8A  22DA               	addwfc	fsr2h,f,c
  6375   000F8C  50DF               	movf	indf2,w,c
  6376   000F8E  6E0D               	movwf	write_external_eeprom@data^0,c
  6377   000F90  C089  F006         	movff	_log_index,___wmul@multiplier
  6378   000F94  C08A  F007         	movff	_log_index+1,___wmul@multiplier+1
  6379   000F98  0E00               	movlw	0
  6380   000F9A  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  6381   000F9C  0E0C               	movlw	12
  6382   000F9E  6E08               	movwf	___wmul@multiplicand^0,c
  6383   000FA0  EC40  F001         	call	___wmul	;wreg free
  6384   000FA4  C006  F001         	movff	?___wmul,___lwmod@dividend
  6385   000FA8  C007  F002         	movff	?___wmul+1,___lwmod@dividend+1
  6386   000FAC  0E00               	movlw	0
  6387   000FAE  6E04               	movwf	(___lwmod@divisor+1)^0,c
  6388   000FB0  0E78               	movlw	120
  6389   000FB2  6E03               	movwf	___lwmod@divisor^0,c
  6390   000FB4  ECCE  F002         	call	___lwmod	;wreg free
  6391   000FB8  5001               	movf	?___lwmod^0,w,c
  6392   000FBA  2411               	addwf	store_event@i^0,w,c
  6393   000FBC  EC9A  F001         	call	_write_external_eeprom
  6394   000FC0                     
  6395                           ;store_event.c: 12:     i++;
  6396   000FC0  4A11               	infsnz	store_event@i^0,f,c
  6397   000FC2  2A12               	incf	(store_event@i+1)^0,f,c
  6398   000FC4                     
  6399                           ;store_event.c: 13:     write_external_eeprom((unsigned char)(i+(log_index*12)%0x78),eve
      +                          nts[event_index][1]);
  6400   000FC4  90D8               	bcf	status,0,c
  6401   000FC6  0100               	movlb	0	; () banked
  6402   000FC8  359B               	rlcf	_event_index& (0+255),w,b
  6403   000FCA  6ED9               	movwf	fsr2l,c
  6404   000FCC  359C               	rlcf	(_event_index+1)& (0+255),w,b
  6405   000FCE  6EDA               	movwf	fsr2h,c
  6406   000FD0  0EBD               	movlw	low (_events+1)
  6407   000FD2  26D9               	addwf	fsr2l,f,c
  6408   000FD4  0E00               	movlw	high (_events+1)
  6409   000FD6  22DA               	addwfc	fsr2h,f,c
  6410   000FD8  50DF               	movf	indf2,w,c
  6411   000FDA  6E0D               	movwf	write_external_eeprom@data^0,c
  6412   000FDC  C089  F006         	movff	_log_index,___wmul@multiplier
  6413   000FE0  C08A  F007         	movff	_log_index+1,___wmul@multiplier+1
  6414   000FE4  0E00               	movlw	0
  6415   000FE6  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  6416   000FE8  0E0C               	movlw	12
  6417   000FEA  6E08               	movwf	___wmul@multiplicand^0,c
  6418   000FEC  EC40  F001         	call	___wmul	;wreg free
  6419   000FF0  C006  F001         	movff	?___wmul,___lwmod@dividend
  6420   000FF4  C007  F002         	movff	?___wmul+1,___lwmod@dividend+1
  6421   000FF8  0E00               	movlw	0
  6422   000FFA  6E04               	movwf	(___lwmod@divisor+1)^0,c
  6423   000FFC  0E78               	movlw	120
  6424   000FFE  6E03               	movwf	___lwmod@divisor^0,c
  6425   001000  ECCE  F002         	call	___lwmod	;wreg free
  6426   001004  5001               	movf	?___lwmod^0,w,c
  6427   001006  2411               	addwf	store_event@i^0,w,c
  6428   001008  EC9A  F001         	call	_write_external_eeprom
  6429                           
  6430                           ;store_event.c: 14:     i++;
  6431   00100C  4A11               	infsnz	store_event@i^0,f,c
  6432   00100E  2A12               	incf	(store_event@i+1)^0,f,c
  6433   001010                     
  6434                           ;store_event.c: 15:     write_external_eeprom((unsigned char)(i+(log_index*12)%0x78),(sp
      +                          eed/10)+48);
  6435   001010  C099  F006         	movff	_speed,___lwdiv@dividend
  6436   001014  C09A  F007         	movff	_speed+1,___lwdiv@dividend+1
  6437   001018  0E00               	movlw	0
  6438   00101A  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  6439   00101C  0E0A               	movlw	10
  6440   00101E  6E08               	movwf	___lwdiv@divisor^0,c
  6441   001020  EC36  F003         	call	___lwdiv	;wreg free
  6442   001024  5006               	movf	?___lwdiv^0,w,c
  6443   001026  0F30               	addlw	48
  6444   001028  6E0D               	movwf	write_external_eeprom@data^0,c
  6445   00102A  C089  F006         	movff	_log_index,___wmul@multiplier
  6446   00102E  C08A  F007         	movff	_log_index+1,___wmul@multiplier+1
  6447   001032  0E00               	movlw	0
  6448   001034  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  6449   001036  0E0C               	movlw	12
  6450   001038  6E08               	movwf	___wmul@multiplicand^0,c
  6451   00103A  EC40  F001         	call	___wmul	;wreg free
  6452   00103E  C006  F001         	movff	?___wmul,___lwmod@dividend
  6453   001042  C007  F002         	movff	?___wmul+1,___lwmod@dividend+1
  6454   001046  0E00               	movlw	0
  6455   001048  6E04               	movwf	(___lwmod@divisor+1)^0,c
  6456   00104A  0E78               	movlw	120
  6457   00104C  6E03               	movwf	___lwmod@divisor^0,c
  6458   00104E  ECCE  F002         	call	___lwmod	;wreg free
  6459   001052  5001               	movf	?___lwmod^0,w,c
  6460   001054  2411               	addwf	store_event@i^0,w,c
  6461   001056  EC9A  F001         	call	_write_external_eeprom
  6462   00105A                     
  6463                           ;store_event.c: 16:     i++;
  6464   00105A  4A11               	infsnz	store_event@i^0,f,c
  6465   00105C  2A12               	incf	(store_event@i+1)^0,f,c
  6466                           
  6467                           ;store_event.c: 17:     write_external_eeprom((unsigned char)(i+(log_index*12)%0x78),(sp
      +                          eed%10)+48);
  6468   00105E  C099  F001         	movff	_speed,___lwmod@dividend
  6469   001062  C09A  F002         	movff	_speed+1,___lwmod@dividend+1
  6470   001066  0E00               	movlw	0
  6471   001068  6E04               	movwf	(___lwmod@divisor+1)^0,c
  6472   00106A  0E0A               	movlw	10
  6473   00106C  6E03               	movwf	___lwmod@divisor^0,c
  6474   00106E  ECCE  F002         	call	___lwmod	;wreg free
  6475   001072  5001               	movf	?___lwmod^0,w,c
  6476   001074  0F30               	addlw	48
  6477   001076  6E0D               	movwf	write_external_eeprom@data^0,c
  6478   001078  C089  F006         	movff	_log_index,___wmul@multiplier
  6479   00107C  C08A  F007         	movff	_log_index+1,___wmul@multiplier+1
  6480   001080  0E00               	movlw	0
  6481   001082  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  6482   001084  0E0C               	movlw	12
  6483   001086  6E08               	movwf	___wmul@multiplicand^0,c
  6484   001088  EC40  F001         	call	___wmul	;wreg free
  6485   00108C  C006  F001         	movff	?___wmul,___lwmod@dividend
  6486   001090  C007  F002         	movff	?___wmul+1,___lwmod@dividend+1
  6487   001094  0E00               	movlw	0
  6488   001096  6E04               	movwf	(___lwmod@divisor+1)^0,c
  6489   001098  0E78               	movlw	120
  6490   00109A  6E03               	movwf	___lwmod@divisor^0,c
  6491   00109C  ECCE  F002         	call	___lwmod	;wreg free
  6492   0010A0  5001               	movf	?___lwmod^0,w,c
  6493   0010A2  2411               	addwf	store_event@i^0,w,c
  6494   0010A4  EC9A  F001         	call	_write_external_eeprom
  6495   0010A8                     
  6496                           ;store_event.c: 19:     log_index=(log_index+1)%10;
  6497   0010A8  0E01               	movlw	1
  6498   0010AA  0100               	movlb	0	; () banked
  6499   0010AC  2589               	addwf	_log_index& (0+255),w,b
  6500   0010AE  6E01               	movwf	___lwmod@dividend^0,c
  6501   0010B0  0E00               	movlw	0
  6502   0010B2  218A               	addwfc	(_log_index+1)& (0+255),w,b
  6503   0010B4  6E02               	movwf	(___lwmod@dividend+1)^0,c
  6504   0010B6  0E00               	movlw	0
  6505   0010B8  6E04               	movwf	(___lwmod@divisor+1)^0,c
  6506   0010BA  0E0A               	movlw	10
  6507   0010BC  6E03               	movwf	___lwmod@divisor^0,c
  6508   0010BE  ECCE  F002         	call	___lwmod	;wreg free
  6509   0010C2  C001  F089         	movff	?___lwmod,_log_index
  6510   0010C6  C002  F08A         	movff	?___lwmod+1,_log_index+1
  6511   0010CA                     
  6512                           ;store_event.c: 21:     if(log_count<10)
  6513   0010CA  0100               	movlb	0	; () banked
  6514   0010CC  5188               	movf	(_log_count+1)& (0+255),w,b
  6515   0010CE  E107               	bnz	u2171
  6516   0010D0  0E0A               	movlw	10
  6517   0010D2  5D87               	subwf	_log_count& (0+255),w,b
  6518   0010D4  B0D8               	btfsc	status,0,c
  6519   0010D6  EF6F  F008         	goto	u2171
  6520   0010DA  EF71  F008         	goto	u2170
  6521   0010DE                     u2171:
  6522   0010DE  EF73  F008         	goto	l1310
  6523   0010E2                     u2170:
  6524   0010E2                     
  6525                           ; BSR set to: 0
  6526                           ;store_event.c: 22:         log_count++;
  6527   0010E2  4B87               	infsnz	_log_count& (0+255),f,b
  6528   0010E4  2B88               	incf	(_log_count+1)& (0+255),f,b
  6529   0010E6                     l1310:
  6530                           
  6531                           ; BSR set to: 0
  6532   0010E6  0012               	return		;funcret
  6533   0010E8                     __end_of_store_event:
  6534                           	callstack 0
  6535                           
  6536 ;; *************** function ___wmul *****************
  6537 ;; Defined at:
  6538 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;  multiplier      2    5[COMRAM] unsigned int 
  6541 ;;  multiplicand    2    7[COMRAM] unsigned int 
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;  product         2    9[COMRAM] unsigned int 
  6544 ;; Return value:  Size  Location     Type
  6545 ;;                  2    5[COMRAM] unsigned int 
  6546 ;; Registers used:
  6547 ;;		wreg, status,2, status,0, prodl, prodh
  6548 ;; Tracked objects:
  6549 ;;		On entry : 0/0
  6550 ;;		On exit  : 0/0
  6551 ;;		Unchanged: 0/0
  6552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6553 ;;      Params:         4       0       0       0       0       0       0
  6554 ;;      Locals:         2       0       0       0       0       0       0
  6555 ;;      Temps:          0       0       0       0       0       0       0
  6556 ;;      Totals:         6       0       0       0       0       0       0
  6557 ;;Total ram usage:        6 bytes
  6558 ;; Hardware stack levels used: 1
  6559 ;; This function calls:
  6560 ;;		Nothing
  6561 ;; This function is called by:
  6562 ;;		_menu
  6563 ;;		_store_event
  6564 ;;		_view_log
  6565 ;;		_download_log
  6566 ;; This function uses a non-reentrant model
  6567 ;;
  6568                           
  6569                           	psect	text23
  6570   000280                     __ptext23:
  6571                           	callstack 0
  6572   000280                     ___wmul:
  6573                           	callstack 29
  6574   000280  5006               	movf	___wmul@multiplier^0,w,c
  6575   000282  0208               	mulwf	___wmul@multiplicand^0,c
  6576   000284  CFF3 F00A          	movff	prodl,___wmul@product
  6577   000288  CFF4 F00B          	movff	prodh,___wmul@product+1
  6578   00028C  5006               	movf	___wmul@multiplier^0,w,c
  6579   00028E  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  6580   000290  50F3               	movf	243,w,c
  6581   000292  260B               	addwf	(___wmul@product+1)^0,f,c
  6582   000294  5007               	movf	(___wmul@multiplier+1)^0,w,c
  6583   000296  0208               	mulwf	___wmul@multiplicand^0,c
  6584   000298  50F3               	movf	243,w,c
  6585   00029A  260B               	addwf	(___wmul@product+1)^0,f,c
  6586   00029C  C00A  F006         	movff	___wmul@product,?___wmul
  6587   0002A0  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  6588   0002A4  0012               	return		;funcret
  6589   0002A6                     __end_of___wmul:
  6590                           	callstack 0
  6591                           
  6592 ;; *************** function ___lwmod *****************
  6593 ;; Defined at:
  6594 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwmod.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;  dividend        2    0[COMRAM] unsigned int 
  6597 ;;  divisor         2    2[COMRAM] unsigned int 
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;  counter         1    4[COMRAM] unsigned char 
  6600 ;; Return value:  Size  Location     Type
  6601 ;;                  2    0[COMRAM] unsigned int 
  6602 ;; Registers used:
  6603 ;;		wreg, status,2, status,0
  6604 ;; Tracked objects:
  6605 ;;		On entry : 0/0
  6606 ;;		On exit  : 0/0
  6607 ;;		Unchanged: 0/0
  6608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6609 ;;      Params:         4       0       0       0       0       0       0
  6610 ;;      Locals:         1       0       0       0       0       0       0
  6611 ;;      Temps:          0       0       0       0       0       0       0
  6612 ;;      Totals:         5       0       0       0       0       0       0
  6613 ;;Total ram usage:        5 bytes
  6614 ;; Hardware stack levels used: 1
  6615 ;; This function calls:
  6616 ;;		Nothing
  6617 ;; This function is called by:
  6618 ;;		_dashboard
  6619 ;;		_password
  6620 ;;		_set_time
  6621 ;;		_store_event
  6622 ;;		_view_log
  6623 ;;		_download_log
  6624 ;; This function uses a non-reentrant model
  6625 ;;
  6626                           
  6627                           	psect	text24
  6628   00059C                     __ptext24:
  6629                           	callstack 0
  6630   00059C                     ___lwmod:
  6631                           	callstack 29
  6632   00059C  5003               	movf	___lwmod@divisor^0,w,c
  6633   00059E  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  6634   0005A0  B4D8               	btfsc	status,2,c
  6635   0005A2  EFD5  F002         	goto	u2111
  6636   0005A6  EFD7  F002         	goto	u2110
  6637   0005AA                     u2111:
  6638   0005AA  EFFB  F002         	goto	l2097
  6639   0005AE                     u2110:
  6640   0005AE  0E01               	movlw	1
  6641   0005B0  6E05               	movwf	___lwmod@counter^0,c
  6642   0005B2  EFDF  F002         	goto	l3899
  6643   0005B6                     l3897:
  6644   0005B6  90D8               	bcf	status,0,c
  6645   0005B8  3603               	rlcf	___lwmod@divisor^0,f,c
  6646   0005BA  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  6647   0005BC  2A05               	incf	___lwmod@counter^0,f,c
  6648   0005BE                     l3899:
  6649   0005BE  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  6650   0005C0  EFE4  F002         	goto	u2121
  6651   0005C4  EFE6  F002         	goto	u2120
  6652   0005C8                     u2121:
  6653   0005C8  EFDB  F002         	goto	l3897
  6654   0005CC                     u2120:
  6655   0005CC                     l3901:
  6656   0005CC  5003               	movf	___lwmod@divisor^0,w,c
  6657   0005CE  5C01               	subwf	___lwmod@dividend^0,w,c
  6658   0005D0  5004               	movf	(___lwmod@divisor+1)^0,w,c
  6659   0005D2  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  6660   0005D4  A0D8               	btfss	status,0,c
  6661   0005D6  EFEF  F002         	goto	u2131
  6662   0005DA  EFF1  F002         	goto	u2130
  6663   0005DE                     u2131:
  6664   0005DE  EFF5  F002         	goto	l3905
  6665   0005E2                     u2130:
  6666   0005E2  5003               	movf	___lwmod@divisor^0,w,c
  6667   0005E4  5E01               	subwf	___lwmod@dividend^0,f,c
  6668   0005E6  5004               	movf	(___lwmod@divisor+1)^0,w,c
  6669   0005E8  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  6670   0005EA                     l3905:
  6671   0005EA  90D8               	bcf	status,0,c
  6672   0005EC  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  6673   0005EE  3203               	rrcf	___lwmod@divisor^0,f,c
  6674   0005F0  2E05               	decfsz	___lwmod@counter^0,f,c
  6675   0005F2  EFE6  F002         	goto	l3901
  6676   0005F6                     l2097:
  6677   0005F6  C001  F001         	movff	___lwmod@dividend,?___lwmod
  6678   0005FA  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  6679   0005FE  0012               	return		;funcret
  6680   000600                     __end_of___lwmod:
  6681                           	callstack 0
  6682                           
  6683 ;; *************** function ___lwdiv *****************
  6684 ;; Defined at:
  6685 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;  dividend        2    5[COMRAM] unsigned int 
  6688 ;;  divisor         2    7[COMRAM] unsigned int 
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;  quotient        2    9[COMRAM] unsigned int 
  6691 ;;  counter         1   11[COMRAM] unsigned char 
  6692 ;; Return value:  Size  Location     Type
  6693 ;;                  2    5[COMRAM] unsigned int 
  6694 ;; Registers used:
  6695 ;;		wreg, status,2, status,0
  6696 ;; Tracked objects:
  6697 ;;		On entry : 0/0
  6698 ;;		On exit  : 0/0
  6699 ;;		Unchanged: 0/0
  6700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6701 ;;      Params:         4       0       0       0       0       0       0
  6702 ;;      Locals:         3       0       0       0       0       0       0
  6703 ;;      Temps:          0       0       0       0       0       0       0
  6704 ;;      Totals:         7       0       0       0       0       0       0
  6705 ;;Total ram usage:        7 bytes
  6706 ;; Hardware stack levels used: 1
  6707 ;; This function calls:
  6708 ;;		Nothing
  6709 ;; This function is called by:
  6710 ;;		_dashboard
  6711 ;;		_password
  6712 ;;		_set_time
  6713 ;;		_store_event
  6714 ;; This function uses a non-reentrant model
  6715 ;;
  6716                           
  6717                           	psect	text25
  6718   00066C                     __ptext25:
  6719                           	callstack 0
  6720   00066C                     ___lwdiv:
  6721                           	callstack 29
  6722   00066C  0E00               	movlw	0
  6723   00066E  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  6724   000670  0E00               	movlw	0
  6725   000672  6E0A               	movwf	___lwdiv@quotient^0,c
  6726   000674  5008               	movf	___lwdiv@divisor^0,w,c
  6727   000676  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6728   000678  B4D8               	btfsc	status,2,c
  6729   00067A  EF41  F003         	goto	u2081
  6730   00067E  EF43  F003         	goto	u2080
  6731   000682                     u2081:
  6732   000682  EF6B  F003         	goto	l2087
  6733   000686                     u2080:
  6734   000686  0E01               	movlw	1
  6735   000688  6E0C               	movwf	___lwdiv@counter^0,c
  6736   00068A  EF4B  F003         	goto	l3879
  6737   00068E                     l3877:
  6738   00068E  90D8               	bcf	status,0,c
  6739   000690  3608               	rlcf	___lwdiv@divisor^0,f,c
  6740   000692  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6741   000694  2A0C               	incf	___lwdiv@counter^0,f,c
  6742   000696                     l3879:
  6743   000696  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  6744   000698  EF50  F003         	goto	u2091
  6745   00069C  EF52  F003         	goto	u2090
  6746   0006A0                     u2091:
  6747   0006A0  EF47  F003         	goto	l3877
  6748   0006A4                     u2090:
  6749   0006A4                     l3881:
  6750   0006A4  90D8               	bcf	status,0,c
  6751   0006A6  360A               	rlcf	___lwdiv@quotient^0,f,c
  6752   0006A8  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6753   0006AA  5008               	movf	___lwdiv@divisor^0,w,c
  6754   0006AC  5C06               	subwf	___lwdiv@dividend^0,w,c
  6755   0006AE  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  6756   0006B0  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6757   0006B2  A0D8               	btfss	status,0,c
  6758   0006B4  EF5E  F003         	goto	u2101
  6759   0006B8  EF60  F003         	goto	u2100
  6760   0006BC                     u2101:
  6761   0006BC  EF65  F003         	goto	l3889
  6762   0006C0                     u2100:
  6763   0006C0  5008               	movf	___lwdiv@divisor^0,w,c
  6764   0006C2  5E06               	subwf	___lwdiv@dividend^0,f,c
  6765   0006C4  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  6766   0006C6  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6767   0006C8  800A               	bsf	___lwdiv@quotient^0,0,c
  6768   0006CA                     l3889:
  6769   0006CA  90D8               	bcf	status,0,c
  6770   0006CC  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6771   0006CE  3208               	rrcf	___lwdiv@divisor^0,f,c
  6772   0006D0  2E0C               	decfsz	___lwdiv@counter^0,f,c
  6773   0006D2  EF52  F003         	goto	l3881
  6774   0006D6                     l2087:
  6775   0006D6  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  6776   0006DA  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6777   0006DE  0012               	return		;funcret
  6778   0006E0                     __end_of___lwdiv:
  6779                           	callstack 0
  6780                           
  6781 ;; *************** function _read_adc *****************
  6782 ;; Defined at:
  6783 ;;		line 22 in file "adc.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;  channel         1    wreg     unsigned char 
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;  channel         1    7[COMRAM] unsigned char 
  6788 ;; Return value:  Size  Location     Type
  6789 ;;                  2    0[COMRAM] unsigned short 
  6790 ;; Registers used:
  6791 ;;		wreg, status,2, status,0
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6797 ;;      Params:         2       0       0       0       0       0       0
  6798 ;;      Locals:         1       0       0       0       0       0       0
  6799 ;;      Temps:          5       0       0       0       0       0       0
  6800 ;;      Totals:         8       0       0       0       0       0       0
  6801 ;;Total ram usage:        8 bytes
  6802 ;; Hardware stack levels used: 1
  6803 ;; This function calls:
  6804 ;;		Nothing
  6805 ;; This function is called by:
  6806 ;;		_dashboard
  6807 ;; This function uses a non-reentrant model
  6808 ;;
  6809                           
  6810                           	psect	text26
  6811   0003B8                     __ptext26:
  6812                           	callstack 0
  6813   0003B8                     _read_adc:
  6814                           	callstack 29
  6815                           
  6816                           ;incstack = 0
  6817                           ;read_adc@channel stored from wreg
  6818   0003B8  6E08               	movwf	read_adc@channel^0,c
  6819   0003BA                     
  6820                           ;adc.c: 22: unsigned short read_adc(unsigned char channel);adc.c: 23: {;adc.c: 24:     A
      +                          DCON0=(ADCON0&0x03)|(channel<<2);
  6821   0003BA  C008  F003         	movff	read_adc@channel,??_read_adc
  6822   0003BE  90D8               	bcf	status,0,c
  6823   0003C0  3603               	rlcf	??_read_adc^0,f,c
  6824   0003C2  90D8               	bcf	status,0,c
  6825   0003C4  3603               	rlcf	??_read_adc^0,f,c
  6826   0003C6  50C2               	movf	194,w,c	;volatile
  6827   0003C8  0B03               	andlw	3
  6828   0003CA  1003               	iorwf	??_read_adc^0,w,c
  6829   0003CC  6EC2               	movwf	194,c	;volatile
  6830   0003CE                     
  6831                           ;adc.c: 25:     GO=1;
  6832   0003CE  82C2               	bsf	4034,1,c	;volatile
  6833   0003D0                     l98:
  6834   0003D0  B2C2               	btfsc	4034,1,c	;volatile
  6835   0003D2  EFED  F001         	goto	u2141
  6836   0003D6  EFEF  F001         	goto	u2140
  6837   0003DA                     u2141:
  6838   0003DA  EFE8  F001         	goto	l98
  6839   0003DE                     u2140:
  6840   0003DE                     
  6841                           ;adc.c: 27:     return ADRESL|((ADRESH&0x03)<<8);
  6842   0003DE  CFC4 F003          	movff	4036,??_read_adc	;volatile
  6843   0003E2  0E03               	movlw	3
  6844   0003E4  1603               	andwf	??_read_adc^0,f,c
  6845   0003E6  5003               	movf	??_read_adc^0,w,c
  6846   0003E8  6E05               	movwf	(??_read_adc+2)^0,c
  6847   0003EA  6A04               	clrf	(??_read_adc+1)^0,c
  6848   0003EC  50C3               	movf	195,w,c	;volatile
  6849   0003EE  6E06               	movwf	(??_read_adc+3)^0,c
  6850   0003F0  6A07               	clrf	(??_read_adc+4)^0,c
  6851   0003F2  5004               	movf	(??_read_adc+1)^0,w,c
  6852   0003F4  1006               	iorwf	(??_read_adc+3)^0,w,c
  6853   0003F6  6E01               	movwf	?_read_adc^0,c
  6854   0003F8  5005               	movf	(??_read_adc+2)^0,w,c
  6855   0003FA  1007               	iorwf	(??_read_adc+4)^0,w,c
  6856   0003FC  6E02               	movwf	(?_read_adc+1)^0,c
  6857   0003FE  0012               	return		;funcret
  6858   000400                     __end_of_read_adc:
  6859                           	callstack 0
  6860                           
  6861 ;; *************** function _get_time *****************
  6862 ;; Defined at:
  6863 ;;		line 19 in file "time.c"
  6864 ;; Parameters:    Size  Location     Type
  6865 ;;		None
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;		None
  6868 ;; Return value:  Size  Location     Type
  6869 ;;                  1    wreg      void 
  6870 ;; Registers used:
  6871 ;;		wreg, status,2, status,0, cstack
  6872 ;; Tracked objects:
  6873 ;;		On entry : 0/0
  6874 ;;		On exit  : 0/0
  6875 ;;		Unchanged: 0/0
  6876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6877 ;;      Params:         0       0       0       0       0       0       0
  6878 ;;      Locals:         0       0       0       0       0       0       0
  6879 ;;      Temps:          0       0       0       0       0       0       0
  6880 ;;      Totals:         0       0       0       0       0       0       0
  6881 ;;Total ram usage:        0 bytes
  6882 ;; Hardware stack levels used: 1
  6883 ;; Hardware stack levels required when called: 4
  6884 ;; This function calls:
  6885 ;;		_read_ds1307
  6886 ;; This function is called by:
  6887 ;;		_dashboard
  6888 ;; This function uses a non-reentrant model
  6889 ;;
  6890                           
  6891                           	psect	text27
  6892   000758                     __ptext27:
  6893                           	callstack 0
  6894   000758                     _get_time:
  6895                           	callstack 25
  6896   000758                     
  6897                           ;time.c: 21:  clock_reg[0] = read_ds1307(0x02);
  6898   000758  0E02               	movlw	2
  6899   00075A  EC53  F001         	call	_read_ds1307
  6900   00075E  0100               	movlb	0	; () banked
  6901   000760  6F6A               	movwf	_clock_reg& (0+255),b
  6902                           
  6903                           ;time.c: 22:  clock_reg[1] = read_ds1307(0x01);
  6904   000762  0E01               	movlw	1
  6905   000764  EC53  F001         	call	_read_ds1307
  6906   000768  0100               	movlb	0	; () banked
  6907   00076A  6F6B               	movwf	(_clock_reg+1)& (0+255),b
  6908                           
  6909                           ;time.c: 23:  clock_reg[2] = read_ds1307(0x00);
  6910   00076C  0E00               	movlw	0
  6911   00076E  EC53  F001         	call	_read_ds1307
  6912   000772  0100               	movlb	0	; () banked
  6913   000774  6F6C               	movwf	(_clock_reg+2)& (0+255),b
  6914   000776                     
  6915                           ; BSR set to: 0
  6916                           ;time.c: 25:  if (clock_reg[0] & 0x40)
  6917   000776  AD6A               	btfss	_clock_reg& (0+255),6,b
  6918   000778  EFC0  F003         	goto	u2181
  6919   00077C  EFC2  F003         	goto	u2180
  6920   000780                     u2181:
  6921   000780  EFCD  F003         	goto	l3997
  6922   000784                     u2180:
  6923   000784                     
  6924                           ; BSR set to: 0
  6925                           ;time.c: 26:  {;time.c: 27:   time[0] = '0' + ((clock_reg[0] >> 4) & 0x01);
  6926   000784  396A               	swapf	_clock_reg& (0+255),w,b
  6927   000786  0B0F               	andlw	15
  6928   000788  0B01               	andlw	1
  6929   00078A  0F30               	addlw	48
  6930   00078C  6FB3               	movwf	_time& (0+255),b
  6931                           
  6932                           ;time.c: 28:   time[1] = '0' + (clock_reg[0] & 0x0F);
  6933   00078E  516A               	movf	_clock_reg& (0+255),w,b
  6934   000790  0B0F               	andlw	15
  6935   000792  0F30               	addlw	48
  6936   000794  6FB4               	movwf	(_time+1)& (0+255),b
  6937                           
  6938                           ;time.c: 29:  }
  6939   000796  EFD6  F003         	goto	l3999
  6940   00079A                     l3997:
  6941                           
  6942                           ; BSR set to: 0
  6943                           ;time.c: 31:  {;time.c: 32:   time[0] = '0' + ((clock_reg[0] >> 4) & 0x03);
  6944   00079A  396A               	swapf	_clock_reg& (0+255),w,b
  6945   00079C  0B0F               	andlw	15
  6946   00079E  0B03               	andlw	3
  6947   0007A0  0F30               	addlw	48
  6948   0007A2  6FB3               	movwf	_time& (0+255),b
  6949                           
  6950                           ;time.c: 33:   time[1] = '0' + (clock_reg[0] & 0x0F);
  6951   0007A4  516A               	movf	_clock_reg& (0+255),w,b
  6952   0007A6  0B0F               	andlw	15
  6953   0007A8  0F30               	addlw	48
  6954   0007AA  6FB4               	movwf	(_time+1)& (0+255),b
  6955   0007AC                     l3999:
  6956                           
  6957                           ; BSR set to: 0
  6958                           ;time.c: 35:  time[2] = ':';
  6959   0007AC  0E3A               	movlw	58
  6960   0007AE  6FB5               	movwf	(_time+2)& (0+255),b
  6961   0007B0                     
  6962                           ; BSR set to: 0
  6963                           ;time.c: 36:  time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  6964   0007B0  396B               	swapf	(_clock_reg+1)& (0+255),w,b
  6965   0007B2  0B0F               	andlw	15
  6966   0007B4  0B0F               	andlw	15
  6967   0007B6  0F30               	addlw	48
  6968   0007B8  6FB6               	movwf	(_time+3)& (0+255),b
  6969   0007BA                     
  6970                           ; BSR set to: 0
  6971                           ;time.c: 37:  time[4] = '0' + (clock_reg[1] & 0x0F);
  6972   0007BA  516B               	movf	(_clock_reg+1)& (0+255),w,b
  6973   0007BC  0B0F               	andlw	15
  6974   0007BE  0F30               	addlw	48
  6975   0007C0  6FB7               	movwf	(_time+4)& (0+255),b
  6976   0007C2                     
  6977                           ; BSR set to: 0
  6978                           ;time.c: 38:  time[5] = ':';
  6979   0007C2  0E3A               	movlw	58
  6980   0007C4  6FB8               	movwf	(_time+5)& (0+255),b
  6981                           
  6982                           ;time.c: 39:  time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  6983   0007C6  396C               	swapf	(_clock_reg+2)& (0+255),w,b
  6984   0007C8  0B0F               	andlw	15
  6985   0007CA  0B0F               	andlw	15
  6986   0007CC  0F30               	addlw	48
  6987   0007CE  6FB9               	movwf	(_time+6)& (0+255),b
  6988                           
  6989                           ;time.c: 40:  time[7] = '0' + (clock_reg[2] & 0x0F);
  6990   0007D0  516C               	movf	(_clock_reg+2)& (0+255),w,b
  6991   0007D2  0B0F               	andlw	15
  6992   0007D4  0F30               	addlw	48
  6993   0007D6  6FBA               	movwf	(_time+7)& (0+255),b
  6994   0007D8                     
  6995                           ; BSR set to: 0
  6996                           ;time.c: 41:  time[8] = '\0';
  6997   0007D8  0E00               	movlw	0
  6998   0007DA  6FBB               	movwf	(_time+8)& (0+255),b
  6999   0007DC                     
  7000                           ; BSR set to: 0
  7001   0007DC  0012               	return		;funcret
  7002   0007DE                     __end_of_get_time:
  7003                           	callstack 0
  7004                           
  7005 ;; *************** function _read_ds1307 *****************
  7006 ;; Defined at:
  7007 ;;		line 32 in file "ds1307.c"
  7008 ;; Parameters:    Size  Location     Type
  7009 ;;  address         1    wreg     unsigned char 
  7010 ;; Auto vars:     Size  Location     Type
  7011 ;;  address         1    1[COMRAM] unsigned char 
  7012 ;;  data            1    2[COMRAM] unsigned char 
  7013 ;; Return value:  Size  Location     Type
  7014 ;;                  1    wreg      unsigned char 
  7015 ;; Registers used:
  7016 ;;		wreg, status,2, cstack
  7017 ;; Tracked objects:
  7018 ;;		On entry : 0/0
  7019 ;;		On exit  : 0/0
  7020 ;;		Unchanged: 0/0
  7021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7022 ;;      Params:         0       0       0       0       0       0       0
  7023 ;;      Locals:         2       0       0       0       0       0       0
  7024 ;;      Temps:          0       0       0       0       0       0       0
  7025 ;;      Totals:         2       0       0       0       0       0       0
  7026 ;;Total ram usage:        2 bytes
  7027 ;; Hardware stack levels used: 1
  7028 ;; Hardware stack levels required when called: 3
  7029 ;; This function calls:
  7030 ;;		_i2c_read
  7031 ;;		_i2c_rep_start
  7032 ;;		_i2c_start
  7033 ;;		_i2c_stop
  7034 ;;		_i2c_write
  7035 ;; This function is called by:
  7036 ;;		_init_ds1307
  7037 ;;		_get_time
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           	psect	text28
  7042   0002A6                     __ptext28:
  7043                           	callstack 0
  7044   0002A6                     _read_ds1307:
  7045                           	callstack 25
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;incstack = 0
  7049                           ;read_ds1307@address stored from wreg
  7050   0002A6  6E02               	movwf	read_ds1307@address^0,c
  7051   0002A8                     
  7052                           ;ds1307.c: 32: unsigned char read_ds1307(unsigned char address);ds1307.c: 33: {;ds1307.c
      +                          : 34:  unsigned char data;;ds1307.c: 36:  i2c_start();
  7053   0002A8  ECA9  F000         	call	_i2c_start	;wreg free
  7054   0002AC                     
  7055                           ;ds1307.c: 37:  i2c_write(0xD0);
  7056   0002AC  0ED0               	movlw	208
  7057   0002AE  ECBD  F000         	call	_i2c_write
  7058   0002B2                     
  7059                           ;ds1307.c: 38:  i2c_write(address);
  7060   0002B2  5002               	movf	read_ds1307@address^0,w,c
  7061   0002B4  ECBD  F000         	call	_i2c_write
  7062   0002B8                     
  7063                           ;ds1307.c: 39:  i2c_rep_start();
  7064   0002B8  ECB5  F000         	call	_i2c_rep_start	;wreg free
  7065   0002BC                     
  7066                           ;ds1307.c: 40:  i2c_write(0xD1);
  7067   0002BC  0ED1               	movlw	209
  7068   0002BE  ECBD  F000         	call	_i2c_write
  7069                           
  7070                           ;ds1307.c: 41:  data = i2c_read();
  7071   0002C2  ECC3  F000         	call	_i2c_read	;wreg free
  7072   0002C6  6E03               	movwf	read_ds1307@data^0,c
  7073   0002C8                     
  7074                           ;ds1307.c: 42:  i2c_stop();
  7075   0002C8  ECAD  F000         	call	_i2c_stop	;wreg free
  7076                           
  7077                           ;ds1307.c: 44:  return data;
  7078   0002CC  5003               	movf	read_ds1307@data^0,w,c
  7079   0002CE  0012               	return		;funcret
  7080   0002D0                     __end_of_read_ds1307:
  7081                           	callstack 0
  7082                           
  7083 ;; *************** function _i2c_rep_start *****************
  7084 ;; Defined at:
  7085 ;;		line 48 in file "i2c.c"
  7086 ;; Parameters:    Size  Location     Type
  7087 ;;		None
  7088 ;; Auto vars:     Size  Location     Type
  7089 ;;		None
  7090 ;; Return value:  Size  Location     Type
  7091 ;;                  1    wreg      void 
  7092 ;; Registers used:
  7093 ;;		cstack
  7094 ;; Tracked objects:
  7095 ;;		On entry : 0/0
  7096 ;;		On exit  : 0/0
  7097 ;;		Unchanged: 0/0
  7098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7099 ;;      Params:         0       0       0       0       0       0       0
  7100 ;;      Locals:         0       0       0       0       0       0       0
  7101 ;;      Temps:          0       0       0       0       0       0       0
  7102 ;;      Totals:         0       0       0       0       0       0       0
  7103 ;;Total ram usage:        0 bytes
  7104 ;; Hardware stack levels used: 1
  7105 ;; Hardware stack levels required when called: 1
  7106 ;; This function calls:
  7107 ;;		_i2c_idle
  7108 ;; This function is called by:
  7109 ;;		_read_ds1307
  7110 ;;		_read_external_eeprom
  7111 ;; This function uses a non-reentrant model
  7112 ;;
  7113                           
  7114                           	psect	text29
  7115   00016A                     __ptext29:
  7116                           	callstack 0
  7117   00016A                     _i2c_rep_start:
  7118                           	callstack 27
  7119   00016A                     
  7120                           ;i2c.c: 50:  RSEN = 1;
  7121   00016A  82C5               	bsf	4037,1,c	;volatile
  7122   00016C                     
  7123                           ;i2c.c: 51:  i2c_idle();
  7124   00016C  ECC9  F000         	call	_i2c_idle	;wreg free
  7125   000170  0012               	return		;funcret
  7126   000172                     __end_of_i2c_rep_start:
  7127                           	callstack 0
  7128                           
  7129 ;; *************** function _i2c_read *****************
  7130 ;; Defined at:
  7131 ;;		line 72 in file "i2c.c"
  7132 ;; Parameters:    Size  Location     Type
  7133 ;;		None
  7134 ;; Auto vars:     Size  Location     Type
  7135 ;;		None
  7136 ;; Return value:  Size  Location     Type
  7137 ;;                  1    wreg      unsigned char 
  7138 ;; Registers used:
  7139 ;;		wreg, status,2, cstack
  7140 ;; Tracked objects:
  7141 ;;		On entry : 0/0
  7142 ;;		On exit  : 0/0
  7143 ;;		Unchanged: 0/0
  7144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7145 ;;      Params:         0       0       0       0       0       0       0
  7146 ;;      Locals:         0       0       0       0       0       0       0
  7147 ;;      Temps:          0       0       0       0       0       0       0
  7148 ;;      Totals:         0       0       0       0       0       0       0
  7149 ;;Total ram usage:        0 bytes
  7150 ;; Hardware stack levels used: 1
  7151 ;; Hardware stack levels required when called: 2
  7152 ;; This function calls:
  7153 ;;		_i2c_no_ack
  7154 ;;		_i2c_rx_mode
  7155 ;; This function is called by:
  7156 ;;		_read_ds1307
  7157 ;;		_read_external_eeprom
  7158 ;; This function uses a non-reentrant model
  7159 ;;
  7160                           
  7161                           	psect	text30
  7162   000186                     __ptext30:
  7163                           	callstack 0
  7164   000186                     _i2c_read:
  7165                           	callstack 26
  7166   000186                     
  7167                           ;i2c.c: 74:  i2c_rx_mode();
  7168   000186  ECB1  F000         	call	_i2c_rx_mode	;wreg free
  7169                           
  7170                           ;i2c.c: 75:  i2c_no_ack();
  7171   00018A  ECA6  F000         	call	_i2c_no_ack	;wreg free
  7172   00018E                     
  7173                           ;i2c.c: 77:  return SSPBUF;
  7174   00018E  50C9               	movf	201,w,c	;volatile
  7175   000190  0012               	return		;funcret
  7176   000192                     __end_of_i2c_read:
  7177                           	callstack 0
  7178                           
  7179 ;; *************** function _i2c_rx_mode *****************
  7180 ;; Defined at:
  7181 ;;		line 60 in file "i2c.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;		None
  7184 ;; Auto vars:     Size  Location     Type
  7185 ;;		None
  7186 ;; Return value:  Size  Location     Type
  7187 ;;                  1    wreg      void 
  7188 ;; Registers used:
  7189 ;;		cstack
  7190 ;; Tracked objects:
  7191 ;;		On entry : 0/0
  7192 ;;		On exit  : 0/0
  7193 ;;		Unchanged: 0/0
  7194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7195 ;;      Params:         0       0       0       0       0       0       0
  7196 ;;      Locals:         0       0       0       0       0       0       0
  7197 ;;      Temps:          0       0       0       0       0       0       0
  7198 ;;      Totals:         0       0       0       0       0       0       0
  7199 ;;Total ram usage:        0 bytes
  7200 ;; Hardware stack levels used: 1
  7201 ;; Hardware stack levels required when called: 1
  7202 ;; This function calls:
  7203 ;;		_i2c_idle
  7204 ;; This function is called by:
  7205 ;;		_i2c_read
  7206 ;; This function uses a non-reentrant model
  7207 ;;
  7208                           
  7209                           	psect	text31
  7210   000162                     __ptext31:
  7211                           	callstack 0
  7212   000162                     _i2c_rx_mode:
  7213                           	callstack 26
  7214   000162                     
  7215                           ;i2c.c: 62:  RCEN = 1;
  7216   000162  86C5               	bsf	4037,3,c	;volatile
  7217   000164                     
  7218                           ;i2c.c: 63:  i2c_idle();
  7219   000164  ECC9  F000         	call	_i2c_idle	;wreg free
  7220   000168  0012               	return		;funcret
  7221   00016A                     __end_of_i2c_rx_mode:
  7222                           	callstack 0
  7223                           
  7224 ;; *************** function _i2c_no_ack *****************
  7225 ;; Defined at:
  7226 ;;		line 66 in file "i2c.c"
  7227 ;; Parameters:    Size  Location     Type
  7228 ;;		None
  7229 ;; Auto vars:     Size  Location     Type
  7230 ;;		None
  7231 ;; Return value:  Size  Location     Type
  7232 ;;                  1    wreg      void 
  7233 ;; Registers used:
  7234 ;;		None
  7235 ;; Tracked objects:
  7236 ;;		On entry : 0/0
  7237 ;;		On exit  : 0/0
  7238 ;;		Unchanged: 0/0
  7239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7240 ;;      Params:         0       0       0       0       0       0       0
  7241 ;;      Locals:         0       0       0       0       0       0       0
  7242 ;;      Temps:          0       0       0       0       0       0       0
  7243 ;;      Totals:         0       0       0       0       0       0       0
  7244 ;;Total ram usage:        0 bytes
  7245 ;; Hardware stack levels used: 1
  7246 ;; This function calls:
  7247 ;;		Nothing
  7248 ;; This function is called by:
  7249 ;;		_i2c_read
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           	psect	text32
  7254   00014C                     __ptext32:
  7255                           	callstack 0
  7256   00014C                     _i2c_no_ack:
  7257                           	callstack 27
  7258   00014C                     
  7259                           ;i2c.c: 68:  ACKDT = 1;
  7260   00014C  8AC5               	bsf	4037,5,c	;volatile
  7261                           
  7262                           ;i2c.c: 69:  ACKEN = 1;
  7263   00014E  88C5               	bsf	4037,4,c	;volatile
  7264   000150  0012               	return		;funcret
  7265   000152                     __end_of_i2c_no_ack:
  7266                           	callstack 0
  7267                           
  7268 ;; *************** function _display_time *****************
  7269 ;; Defined at:
  7270 ;;		line 2 in file "time.c"
  7271 ;; Parameters:    Size  Location     Type
  7272 ;;		None
  7273 ;; Auto vars:     Size  Location     Type
  7274 ;;		None
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  1    wreg      void 
  7277 ;; Registers used:
  7278 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7279 ;; Tracked objects:
  7280 ;;		On entry : 0/0
  7281 ;;		On exit  : 0/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7284 ;;      Params:         0       0       0       0       0       0       0
  7285 ;;      Locals:         0       0       0       0       0       0       0
  7286 ;;      Temps:          0       0       0       0       0       0       0
  7287 ;;      Totals:         0       0       0       0       0       0       0
  7288 ;;Total ram usage:        0 bytes
  7289 ;; Hardware stack levels used: 1
  7290 ;; Hardware stack levels required when called: 2
  7291 ;; This function calls:
  7292 ;;		_clcd_print
  7293 ;; This function is called by:
  7294 ;;		_dashboard
  7295 ;; This function uses a non-reentrant model
  7296 ;;
  7297                           
  7298                           	psect	text33
  7299   000494                     __ptext33:
  7300                           	callstack 0
  7301   000494                     _display_time:
  7302                           	callstack 27
  7303   000494                     
  7304                           ;time.c: 4:  clcd_print(time, (0xC0 + (0)));
  7305   000494  0EB3               	movlw	low _time
  7306   000496  6E0C               	movwf	clcd_print@data^0,c
  7307   000498  0E00               	movlw	high _time
  7308   00049A  6E0D               	movwf	(clcd_print@data+1)^0,c
  7309   00049C  0EC0               	movlw	192
  7310   00049E  6E0E               	movwf	clcd_print@addr^0,c
  7311   0004A0  EC00  F003         	call	_clcd_print	;wreg free
  7312   0004A4                     
  7313                           ;time.c: 6:  if (clock_reg[0] & 0x40)
  7314   0004A4  0100               	movlb	0	; () banked
  7315   0004A6  AD6A               	btfss	_clock_reg& (0+255),6,b
  7316   0004A8  EF58  F002         	goto	u2191
  7317   0004AC  EF5A  F002         	goto	u2190
  7318   0004B0                     u2191:
  7319   0004B0  EF73  F002         	goto	l1376
  7320   0004B4                     u2190:
  7321   0004B4                     
  7322                           ; BSR set to: 0
  7323                           ;time.c: 7:  {;time.c: 8:   if (clock_reg[0] & 0x20)
  7324   0004B4  AB6A               	btfss	_clock_reg& (0+255),5,b
  7325   0004B6  EF5F  F002         	goto	u2201
  7326   0004BA  EF61  F002         	goto	u2200
  7327   0004BE                     u2201:
  7328   0004BE  EF6B  F002         	goto	l4017
  7329   0004C2                     u2200:
  7330   0004C2                     
  7331                           ; BSR set to: 0
  7332                           ;time.c: 9:   {;time.c: 10:    clcd_print("PM", (0xC0 + (12)));
  7333   0004C2  0EF9               	movlw	low STR_24
  7334   0004C4  6E0C               	movwf	clcd_print@data^0,c
  7335   0004C6  0E2F               	movlw	high STR_24
  7336   0004C8  6E0D               	movwf	(clcd_print@data+1)^0,c
  7337   0004CA  0ECC               	movlw	204
  7338   0004CC  6E0E               	movwf	clcd_print@addr^0,c
  7339   0004CE  EC00  F003         	call	_clcd_print	;wreg free
  7340                           
  7341                           ;time.c: 11:   }
  7342   0004D2  EF73  F002         	goto	l1376
  7343   0004D6                     l4017:
  7344                           
  7345                           ; BSR set to: 0
  7346                           ;time.c: 13:   {;time.c: 14:    clcd_print("AM", (0xC0 + (12)));
  7347   0004D6  0EF6               	movlw	low STR_25
  7348   0004D8  6E0C               	movwf	clcd_print@data^0,c
  7349   0004DA  0E2F               	movlw	high STR_25
  7350   0004DC  6E0D               	movwf	(clcd_print@data+1)^0,c
  7351   0004DE  0ECC               	movlw	204
  7352   0004E0  6E0E               	movwf	clcd_print@addr^0,c
  7353   0004E2  EC00  F003         	call	_clcd_print	;wreg free
  7354   0004E6                     l1376:
  7355   0004E6  0012               	return		;funcret
  7356   0004E8                     __end_of_display_time:
  7357                           	callstack 0
  7358                           
  7359 ;; *************** function ___xxtofl *****************
  7360 ;; Defined at:
  7361 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  7362 ;; Parameters:    Size  Location     Type
  7363 ;;  sign            1    wreg     unsigned char 
  7364 ;;  val             4    0[COMRAM] long 
  7365 ;; Auto vars:     Size  Location     Type
  7366 ;;  sign            1    8[COMRAM] unsigned char 
  7367 ;;  arg             4   10[COMRAM] unsigned long 
  7368 ;;  exp             1    9[COMRAM] unsigned char 
  7369 ;; Return value:  Size  Location     Type
  7370 ;;                  4    0[COMRAM] unsigned char 
  7371 ;; Registers used:
  7372 ;;		wreg, status,2, status,0
  7373 ;; Tracked objects:
  7374 ;;		On entry : 0/0
  7375 ;;		On exit  : 0/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7378 ;;      Params:         4       0       0       0       0       0       0
  7379 ;;      Locals:         6       0       0       0       0       0       0
  7380 ;;      Temps:          4       0       0       0       0       0       0
  7381 ;;      Totals:        14       0       0       0       0       0       0
  7382 ;;Total ram usage:       14 bytes
  7383 ;; Hardware stack levels used: 1
  7384 ;; This function calls:
  7385 ;;		Nothing
  7386 ;; This function is called by:
  7387 ;;		_dashboard
  7388 ;; This function uses a non-reentrant model
  7389 ;;
  7390                           
  7391                           	psect	text34
  7392   000D5C                     __ptext34:
  7393                           	callstack 0
  7394   000D5C                     ___xxtofl:
  7395                           	callstack 29
  7396                           
  7397                           ;incstack = 0
  7398                           ;___xxtofl@sign stored from wreg
  7399   000D5C  6E09               	movwf	___xxtofl@sign^0,c
  7400   000D5E  5009               	movf	___xxtofl@sign^0,w,c
  7401   000D60  B4D8               	btfsc	status,2,c
  7402   000D62  EFB5  F006         	goto	u2661
  7403   000D66  EFB7  F006         	goto	u2660
  7404   000D6A                     u2661:
  7405   000D6A  EFD9  F006         	goto	l2251
  7406   000D6E                     u2660:
  7407   000D6E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7408   000D70  EFBE  F006         	goto	u2670
  7409   000D74  EFBC  F006         	goto	u2671
  7410   000D78                     u2671:
  7411   000D78  EFD9  F006         	goto	l2251
  7412   000D7C                     u2670:
  7413   000D7C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7414   000D80  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7415   000D84  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7416   000D88  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7417   000D8C  1E05               	comf	??___xxtofl^0,f,c
  7418   000D8E  1E06               	comf	(??___xxtofl+1)^0,f,c
  7419   000D90  1E07               	comf	(??___xxtofl+2)^0,f,c
  7420   000D92  1E08               	comf	(??___xxtofl+3)^0,f,c
  7421   000D94  2A05               	incf	??___xxtofl^0,f,c
  7422   000D96  0E00               	movlw	0
  7423   000D98  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7424   000D9A  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7425   000D9C  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7426   000D9E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7427   000DA2  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7428   000DA6  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7429   000DAA  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7430   000DAE  EFE1  F006         	goto	l4325
  7431   000DB2                     l2251:
  7432   000DB2  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7433   000DB6  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7434   000DBA  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7435   000DBE  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7436   000DC2                     l4325:
  7437   000DC2  5001               	movf	___xxtofl@val^0,w,c
  7438   000DC4  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7439   000DC6  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7440   000DC8  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7441   000DCA  A4D8               	btfss	status,2,c
  7442   000DCC  EFEA  F006         	goto	u2681
  7443   000DD0  EFEC  F006         	goto	u2680
  7444   000DD4                     u2681:
  7445   000DD4  EFF6  F006         	goto	l4331
  7446   000DD8                     u2680:
  7447   000DD8  0E00               	movlw	0
  7448   000DDA  6E01               	movwf	?___xxtofl^0,c
  7449   000DDC  0E00               	movlw	0
  7450   000DDE  6E02               	movwf	(?___xxtofl+1)^0,c
  7451   000DE0  0E00               	movlw	0
  7452   000DE2  6E03               	movwf	(?___xxtofl+2)^0,c
  7453   000DE4  0E00               	movlw	0
  7454   000DE6  6E04               	movwf	(?___xxtofl+3)^0,c
  7455   000DE8  EF87  F007         	goto	l2254
  7456   000DEC                     l4331:
  7457   000DEC  0E96               	movlw	150
  7458   000DEE  6E0A               	movwf	___xxtofl@exp^0,c
  7459   000DF0  EF00  F007         	goto	l4335
  7460   000DF4                     l4333:
  7461   000DF4  2A0A               	incf	___xxtofl@exp^0,f,c
  7462   000DF6  90D8               	bcf	status,0,c
  7463   000DF8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7464   000DFA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7465   000DFC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7466   000DFE  320B               	rrcf	___xxtofl@arg^0,f,c
  7467   000E00                     l4335:
  7468   000E00  0E00               	movlw	0
  7469   000E02  140B               	andwf	___xxtofl@arg^0,w,c
  7470   000E04  6E05               	movwf	??___xxtofl^0,c
  7471   000E06  0E00               	movlw	0
  7472   000E08  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7473   000E0A  6E06               	movwf	(??___xxtofl+1)^0,c
  7474   000E0C  0E00               	movlw	0
  7475   000E0E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7476   000E10  6E07               	movwf	(??___xxtofl+2)^0,c
  7477   000E12  0EFE               	movlw	254
  7478   000E14  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7479   000E16  6E08               	movwf	(??___xxtofl+3)^0,c
  7480   000E18  5005               	movf	??___xxtofl^0,w,c
  7481   000E1A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7482   000E1C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7483   000E1E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7484   000E20  A4D8               	btfss	status,2,c
  7485   000E22  EF15  F007         	goto	u2691
  7486   000E26  EF17  F007         	goto	u2690
  7487   000E2A                     u2691:
  7488   000E2A  EFFA  F006         	goto	l4333
  7489   000E2E                     u2690:
  7490   000E2E  EF25  F007         	goto	l2258
  7491   000E32                     l4337:
  7492   000E32  2A0A               	incf	___xxtofl@exp^0,f,c
  7493   000E34  0E01               	movlw	1
  7494   000E36  260B               	addwf	___xxtofl@arg^0,f,c
  7495   000E38  0E00               	movlw	0
  7496   000E3A  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7497   000E3C  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7498   000E3E  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7499   000E40  90D8               	bcf	status,0,c
  7500   000E42  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7501   000E44  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7502   000E46  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7503   000E48  320B               	rrcf	___xxtofl@arg^0,f,c
  7504   000E4A                     l2258:
  7505   000E4A  0E00               	movlw	0
  7506   000E4C  140B               	andwf	___xxtofl@arg^0,w,c
  7507   000E4E  6E05               	movwf	??___xxtofl^0,c
  7508   000E50  0E00               	movlw	0
  7509   000E52  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7510   000E54  6E06               	movwf	(??___xxtofl+1)^0,c
  7511   000E56  0E00               	movlw	0
  7512   000E58  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7513   000E5A  6E07               	movwf	(??___xxtofl+2)^0,c
  7514   000E5C  0EFF               	movlw	255
  7515   000E5E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7516   000E60  6E08               	movwf	(??___xxtofl+3)^0,c
  7517   000E62  5005               	movf	??___xxtofl^0,w,c
  7518   000E64  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7519   000E66  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7520   000E68  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7521   000E6A  A4D8               	btfss	status,2,c
  7522   000E6C  EF3A  F007         	goto	u2701
  7523   000E70  EF3C  F007         	goto	u2700
  7524   000E74                     u2701:
  7525   000E74  EF19  F007         	goto	l4337
  7526   000E78                     u2700:
  7527   000E78  EF44  F007         	goto	l4345
  7528   000E7C                     l4343:
  7529   000E7C  060A               	decf	___xxtofl@exp^0,f,c
  7530   000E7E  90D8               	bcf	status,0,c
  7531   000E80  360B               	rlcf	___xxtofl@arg^0,f,c
  7532   000E82  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7533   000E84  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7534   000E86  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7535   000E88                     l4345:
  7536   000E88  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7537   000E8A  EF49  F007         	goto	u2711
  7538   000E8E  EF4B  F007         	goto	u2710
  7539   000E92                     u2711:
  7540   000E92  EF53  F007         	goto	l2265
  7541   000E96                     u2710:
  7542   000E96  0E02               	movlw	2
  7543   000E98  600A               	cpfslt	___xxtofl@exp^0,c
  7544   000E9A  EF51  F007         	goto	u2721
  7545   000E9E  EF53  F007         	goto	u2720
  7546   000EA2                     u2721:
  7547   000EA2  EF3E  F007         	goto	l4343
  7548   000EA6                     u2720:
  7549   000EA6                     l2265:
  7550   000EA6  B00A               	btfsc	___xxtofl@exp^0,0,c
  7551   000EA8  EF58  F007         	goto	u2731
  7552   000EAC  EF5A  F007         	goto	u2730
  7553   000EB0                     u2731:
  7554   000EB0  EF5B  F007         	goto	l4351
  7555   000EB4                     u2730:
  7556   000EB4  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7557   000EB6                     l4351:
  7558   000EB6  90D8               	bcf	status,0,c
  7559   000EB8  320A               	rrcf	___xxtofl@exp^0,f,c
  7560   000EBA  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7561   000EBE  6A06               	clrf	(??___xxtofl+1)^0,c
  7562   000EC0  6A07               	clrf	(??___xxtofl+2)^0,c
  7563   000EC2  6A08               	clrf	(??___xxtofl+3)^0,c
  7564   000EC4  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7565   000EC8  6A07               	clrf	(??___xxtofl+2)^0,c
  7566   000ECA  6A06               	clrf	(??___xxtofl+1)^0,c
  7567   000ECC  6A05               	clrf	??___xxtofl^0,c
  7568   000ECE  5005               	movf	??___xxtofl^0,w,c
  7569   000ED0  120B               	iorwf	___xxtofl@arg^0,f,c
  7570   000ED2  5006               	movf	(??___xxtofl+1)^0,w,c
  7571   000ED4  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7572   000ED6  5007               	movf	(??___xxtofl+2)^0,w,c
  7573   000ED8  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7574   000EDA  5008               	movf	(??___xxtofl+3)^0,w,c
  7575   000EDC  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7576   000EDE  5009               	movf	___xxtofl@sign^0,w,c
  7577   000EE0  B4D8               	btfsc	status,2,c
  7578   000EE2  EF75  F007         	goto	u2741
  7579   000EE6  EF77  F007         	goto	u2740
  7580   000EEA                     u2741:
  7581   000EEA  EF7F  F007         	goto	l4361
  7582   000EEE                     u2740:
  7583   000EEE  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7584   000EF0  EF7E  F007         	goto	u2750
  7585   000EF4  EF7C  F007         	goto	u2751
  7586   000EF8                     u2751:
  7587   000EF8  EF7F  F007         	goto	l4361
  7588   000EFC                     u2750:
  7589   000EFC  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7590   000EFE                     l4361:
  7591   000EFE  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7592   000F02  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7593   000F06  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7594   000F0A  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7595   000F0E                     l2254:
  7596   000F0E  0012               	return		;funcret
  7597   000F10                     __end_of___xxtofl:
  7598                           	callstack 0
  7599                           
  7600 ;; *************** function ___fltol *****************
  7601 ;; Defined at:
  7602 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  7603 ;; Parameters:    Size  Location     Type
  7604 ;;  f1              4   39[COMRAM] unsigned char 
  7605 ;; Auto vars:     Size  Location     Type
  7606 ;;  exp1            1   48[COMRAM] unsigned char 
  7607 ;;  sign1           1   47[COMRAM] unsigned char 
  7608 ;; Return value:  Size  Location     Type
  7609 ;;                  4   39[COMRAM] long 
  7610 ;; Registers used:
  7611 ;;		wreg, status,2, status,0
  7612 ;; Tracked objects:
  7613 ;;		On entry : 0/0
  7614 ;;		On exit  : 0/0
  7615 ;;		Unchanged: 0/0
  7616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7617 ;;      Params:         4       0       0       0       0       0       0
  7618 ;;      Locals:         2       0       0       0       0       0       0
  7619 ;;      Temps:          4       0       0       0       0       0       0
  7620 ;;      Totals:        10       0       0       0       0       0       0
  7621 ;;Total ram usage:       10 bytes
  7622 ;; Hardware stack levels used: 1
  7623 ;; This function calls:
  7624 ;;		Nothing
  7625 ;; This function is called by:
  7626 ;;		_dashboard
  7627 ;; This function uses a non-reentrant model
  7628 ;;
  7629                           
  7630                           	psect	text35
  7631   0009B2                     __ptext35:
  7632                           	callstack 0
  7633   0009B2                     ___fltol:
  7634                           	callstack 29
  7635   0009B2  342A               	rlcf	(___fltol@f1+2)^0,w,c
  7636   0009B4  342B               	rlcf	(___fltol@f1+3)^0,w,c
  7637   0009B6  6E31               	movwf	___fltol@exp1^0,c
  7638   0009B8  5031               	movf	___fltol@exp1^0,w,c
  7639   0009BA  A4D8               	btfss	status,2,c
  7640   0009BC  EFE2  F004         	goto	u2591
  7641   0009C0  EFE4  F004         	goto	u2590
  7642   0009C4                     u2591:
  7643   0009C4  EFEE  F004         	goto	l4281
  7644   0009C8                     u2590:
  7645   0009C8                     l4277:
  7646   0009C8  0E00               	movlw	0
  7647   0009CA  6E28               	movwf	?___fltol^0,c
  7648   0009CC  0E00               	movlw	0
  7649   0009CE  6E29               	movwf	(?___fltol+1)^0,c
  7650   0009D0  0E00               	movlw	0
  7651   0009D2  6E2A               	movwf	(?___fltol+2)^0,c
  7652   0009D4  0E00               	movlw	0
  7653   0009D6  6E2B               	movwf	(?___fltol+3)^0,c
  7654   0009D8  EF5B  F005         	goto	l1893
  7655   0009DC                     l4281:
  7656   0009DC  C028  F02C         	movff	___fltol@f1,??___fltol
  7657   0009E0  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  7658   0009E4  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  7659   0009E8  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  7660   0009EC  0E20               	movlw	32
  7661   0009EE  EFFE  F004         	goto	u2600
  7662   0009F2                     u2605:
  7663   0009F2  90D8               	bcf	status,0,c
  7664   0009F4  322F               	rrcf	(??___fltol+3)^0,f,c
  7665   0009F6  322E               	rrcf	(??___fltol+2)^0,f,c
  7666   0009F8  322D               	rrcf	(??___fltol+1)^0,f,c
  7667   0009FA  322C               	rrcf	??___fltol^0,f,c
  7668   0009FC                     u2600:
  7669   0009FC  2EE8               	decfsz	wreg,f,c
  7670   0009FE  EFF9  F004         	goto	u2605
  7671   000A02  502C               	movf	??___fltol^0,w,c
  7672   000A04  6E30               	movwf	___fltol@sign1^0,c
  7673   000A06  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  7674   000A08  0EFF               	movlw	255
  7675   000A0A  1628               	andwf	___fltol@f1^0,f,c
  7676   000A0C  0EFF               	movlw	255
  7677   000A0E  1629               	andwf	(___fltol@f1+1)^0,f,c
  7678   000A10  0EFF               	movlw	255
  7679   000A12  162A               	andwf	(___fltol@f1+2)^0,f,c
  7680   000A14  0E00               	movlw	0
  7681   000A16  162B               	andwf	(___fltol@f1+3)^0,f,c
  7682   000A18  0E96               	movlw	150
  7683   000A1A  5E31               	subwf	___fltol@exp1^0,f,c
  7684   000A1C  BE31               	btfsc	___fltol@exp1^0,7,c
  7685   000A1E  EF15  F005         	goto	u2610
  7686   000A22  EF13  F005         	goto	u2611
  7687   000A26                     u2611:
  7688   000A26  EF2B  F005         	goto	l4301
  7689   000A2A                     u2610:
  7690   000A2A  5031               	movf	___fltol@exp1^0,w,c
  7691   000A2C  0A80               	xorlw	128
  7692   000A2E  0F97               	addlw	151
  7693   000A30  B0D8               	btfsc	status,0,c
  7694   000A32  EF1D  F005         	goto	u2621
  7695   000A36  EF1F  F005         	goto	u2620
  7696   000A3A                     u2621:
  7697   000A3A  EF21  F005         	goto	l4297
  7698   000A3E                     u2620:
  7699   000A3E  EFE4  F004         	goto	l4277
  7700   000A42                     l4297:
  7701   000A42  90D8               	bcf	status,0,c
  7702   000A44  322B               	rrcf	(___fltol@f1+3)^0,f,c
  7703   000A46  322A               	rrcf	(___fltol@f1+2)^0,f,c
  7704   000A48  3229               	rrcf	(___fltol@f1+1)^0,f,c
  7705   000A4A  3228               	rrcf	___fltol@f1^0,f,c
  7706   000A4C  3E31               	incfsz	___fltol@exp1^0,f,c
  7707   000A4E  EF21  F005         	goto	l4297
  7708   000A52  EF43  F005         	goto	l4311
  7709   000A56                     l4301:
  7710   000A56  0E1F               	movlw	31
  7711   000A58  6431               	cpfsgt	___fltol@exp1^0,c
  7712   000A5A  EF31  F005         	goto	u2631
  7713   000A5E  EF33  F005         	goto	u2630
  7714   000A62                     u2631:
  7715   000A62  EF3B  F005         	goto	l4309
  7716   000A66                     u2630:
  7717   000A66  EFE4  F004         	goto	l4277
  7718   000A6A                     l4307:
  7719   000A6A  90D8               	bcf	status,0,c
  7720   000A6C  3628               	rlcf	___fltol@f1^0,f,c
  7721   000A6E  3629               	rlcf	(___fltol@f1+1)^0,f,c
  7722   000A70  362A               	rlcf	(___fltol@f1+2)^0,f,c
  7723   000A72  362B               	rlcf	(___fltol@f1+3)^0,f,c
  7724   000A74  0631               	decf	___fltol@exp1^0,f,c
  7725   000A76                     l4309:
  7726   000A76  5031               	movf	___fltol@exp1^0,w,c
  7727   000A78  A4D8               	btfss	status,2,c
  7728   000A7A  EF41  F005         	goto	u2641
  7729   000A7E  EF43  F005         	goto	u2640
  7730   000A82                     u2641:
  7731   000A82  EF35  F005         	goto	l4307
  7732   000A86                     u2640:
  7733   000A86                     l4311:
  7734   000A86  5030               	movf	___fltol@sign1^0,w,c
  7735   000A88  B4D8               	btfsc	status,2,c
  7736   000A8A  EF49  F005         	goto	u2651
  7737   000A8E  EF4B  F005         	goto	u2650
  7738   000A92                     u2651:
  7739   000A92  EF53  F005         	goto	l4315
  7740   000A96                     u2650:
  7741   000A96  1E2B               	comf	(___fltol@f1+3)^0,f,c
  7742   000A98  1E2A               	comf	(___fltol@f1+2)^0,f,c
  7743   000A9A  1E29               	comf	(___fltol@f1+1)^0,f,c
  7744   000A9C  6C28               	negf	___fltol@f1^0,c
  7745   000A9E  0E00               	movlw	0
  7746   000AA0  2229               	addwfc	(___fltol@f1+1)^0,f,c
  7747   000AA2  222A               	addwfc	(___fltol@f1+2)^0,f,c
  7748   000AA4  222B               	addwfc	(___fltol@f1+3)^0,f,c
  7749   000AA6                     l4315:
  7750   000AA6  C028  F028         	movff	___fltol@f1,?___fltol
  7751   000AAA  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  7752   000AAE  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  7753   000AB2  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  7754   000AB6                     l1893:
  7755   000AB6  0012               	return		;funcret
  7756   000AB8                     __end_of___fltol:
  7757                           	callstack 0
  7758                           
  7759 ;; *************** function ___fldiv *****************
  7760 ;; Defined at:
  7761 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  7762 ;; Parameters:    Size  Location     Type
  7763 ;;  b               4   14[COMRAM] long 
  7764 ;;  a               4   18[COMRAM] long 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;  grs             4   33[COMRAM] unsigned long 
  7767 ;;  rem             4   26[COMRAM] unsigned long 
  7768 ;;  new_exp         2   31[COMRAM] short 
  7769 ;;  aexp            1   38[COMRAM] unsigned char 
  7770 ;;  bexp            1   37[COMRAM] unsigned char 
  7771 ;;  sign            1   30[COMRAM] unsigned char 
  7772 ;; Return value:  Size  Location     Type
  7773 ;;                  4   14[COMRAM] unsigned char 
  7774 ;; Registers used:
  7775 ;;		wreg, status,2, status,0
  7776 ;; Tracked objects:
  7777 ;;		On entry : 0/0
  7778 ;;		On exit  : 0/0
  7779 ;;		Unchanged: 0/0
  7780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7781 ;;      Params:         8       0       0       0       0       0       0
  7782 ;;      Locals:        13       0       0       0       0       0       0
  7783 ;;      Temps:          4       0       0       0       0       0       0
  7784 ;;      Totals:        25       0       0       0       0       0       0
  7785 ;;Total ram usage:       25 bytes
  7786 ;; Hardware stack levels used: 1
  7787 ;; This function calls:
  7788 ;;		Nothing
  7789 ;; This function is called by:
  7790 ;;		_dashboard
  7791 ;; This function uses a non-reentrant model
  7792 ;;
  7793                           
  7794                           	psect	text36
  7795   001858                     __ptext36:
  7796                           	callstack 0
  7797   001858                     ___fldiv:
  7798                           	callstack 29
  7799   001858  5012               	movf	(___fldiv@b+3)^0,w,c
  7800   00185A  0B80               	andlw	128
  7801   00185C  6E1F               	movwf	___fldiv@sign^0,c
  7802   00185E  5012               	movf	(___fldiv@b+3)^0,w,c
  7803   001860  2412               	addwf	(___fldiv@b+3)^0,w,c
  7804   001862  6E26               	movwf	___fldiv@bexp^0,c
  7805   001864  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7806   001866  EF37  F00C         	goto	u2361
  7807   00186A  EF39  F00C         	goto	u2360
  7808   00186E                     u2361:
  7809   00186E  EF3A  F00C         	goto	l4143
  7810   001872                     u2360:
  7811   001872  8026               	bsf	___fldiv@bexp^0,0,c
  7812   001874                     l4143:
  7813   001874  5026               	movf	___fldiv@bexp^0,w,c
  7814   001876  B4D8               	btfsc	status,2,c
  7815   001878  EF40  F00C         	goto	u2371
  7816   00187C  EF42  F00C         	goto	u2370
  7817   001880                     u2371:
  7818   001880  EF57  F00C         	goto	l4153
  7819   001884                     u2370:
  7820   001884  2826               	incf	___fldiv@bexp^0,w,c
  7821   001886  A4D8               	btfss	status,2,c
  7822   001888  EF48  F00C         	goto	u2381
  7823   00188C  EF4A  F00C         	goto	u2380
  7824   001890                     u2381:
  7825   001890  EF52  F00C         	goto	l4149
  7826   001894                     u2380:
  7827   001894  0E00               	movlw	0
  7828   001896  6E0F               	movwf	___fldiv@b^0,c
  7829   001898  0E00               	movlw	0
  7830   00189A  6E10               	movwf	(___fldiv@b+1)^0,c
  7831   00189C  0E00               	movlw	0
  7832   00189E  6E11               	movwf	(___fldiv@b+2)^0,c
  7833   0018A0  0E00               	movlw	0
  7834   0018A2  6E12               	movwf	(___fldiv@b+3)^0,c
  7835   0018A4                     l4149:
  7836   0018A4  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7837   0018A6  0E00               	movlw	0
  7838   0018A8  6E12               	movwf	(___fldiv@b+3)^0,c
  7839   0018AA  EF5F  F00C         	goto	l4155
  7840   0018AE                     l4153:
  7841   0018AE  0E00               	movlw	0
  7842   0018B0  6E0F               	movwf	___fldiv@b^0,c
  7843   0018B2  0E00               	movlw	0
  7844   0018B4  6E10               	movwf	(___fldiv@b+1)^0,c
  7845   0018B6  0E00               	movlw	0
  7846   0018B8  6E11               	movwf	(___fldiv@b+2)^0,c
  7847   0018BA  0E00               	movlw	0
  7848   0018BC  6E12               	movwf	(___fldiv@b+3)^0,c
  7849   0018BE                     l4155:
  7850   0018BE  5016               	movf	(___fldiv@a+3)^0,w,c
  7851   0018C0  0B80               	andlw	128
  7852   0018C2  1A1F               	xorwf	___fldiv@sign^0,f,c
  7853   0018C4  5016               	movf	(___fldiv@a+3)^0,w,c
  7854   0018C6  2416               	addwf	(___fldiv@a+3)^0,w,c
  7855   0018C8  6E27               	movwf	___fldiv@aexp^0,c
  7856   0018CA  AE15               	btfss	(___fldiv@a+2)^0,7,c
  7857   0018CC  EF6A  F00C         	goto	u2391
  7858   0018D0  EF6C  F00C         	goto	u2390
  7859   0018D4                     u2391:
  7860   0018D4  EF6D  F00C         	goto	l4163
  7861   0018D8                     u2390:
  7862   0018D8  8027               	bsf	___fldiv@aexp^0,0,c
  7863   0018DA                     l4163:
  7864   0018DA  5027               	movf	___fldiv@aexp^0,w,c
  7865   0018DC  B4D8               	btfsc	status,2,c
  7866   0018DE  EF73  F00C         	goto	u2401
  7867   0018E2  EF75  F00C         	goto	u2400
  7868   0018E6                     u2401:
  7869   0018E6  EF8A  F00C         	goto	l4173
  7870   0018EA                     u2400:
  7871   0018EA  2827               	incf	___fldiv@aexp^0,w,c
  7872   0018EC  A4D8               	btfss	status,2,c
  7873   0018EE  EF7B  F00C         	goto	u2411
  7874   0018F2  EF7D  F00C         	goto	u2410
  7875   0018F6                     u2411:
  7876   0018F6  EF85  F00C         	goto	l4169
  7877   0018FA                     u2410:
  7878   0018FA  0E00               	movlw	0
  7879   0018FC  6E13               	movwf	___fldiv@a^0,c
  7880   0018FE  0E00               	movlw	0
  7881   001900  6E14               	movwf	(___fldiv@a+1)^0,c
  7882   001902  0E00               	movlw	0
  7883   001904  6E15               	movwf	(___fldiv@a+2)^0,c
  7884   001906  0E00               	movlw	0
  7885   001908  6E16               	movwf	(___fldiv@a+3)^0,c
  7886   00190A                     l4169:
  7887   00190A  8E15               	bsf	(___fldiv@a+2)^0,7,c
  7888   00190C  0E00               	movlw	0
  7889   00190E  6E16               	movwf	(___fldiv@a+3)^0,c
  7890   001910  EF92  F00C         	goto	l4175
  7891   001914                     l4173:
  7892   001914  0E00               	movlw	0
  7893   001916  6E13               	movwf	___fldiv@a^0,c
  7894   001918  0E00               	movlw	0
  7895   00191A  6E14               	movwf	(___fldiv@a+1)^0,c
  7896   00191C  0E00               	movlw	0
  7897   00191E  6E15               	movwf	(___fldiv@a+2)^0,c
  7898   001920  0E00               	movlw	0
  7899   001922  6E16               	movwf	(___fldiv@a+3)^0,c
  7900   001924                     l4175:
  7901   001924  5013               	movf	___fldiv@a^0,w,c
  7902   001926  1014               	iorwf	(___fldiv@a+1)^0,w,c
  7903   001928  1015               	iorwf	(___fldiv@a+2)^0,w,c
  7904   00192A  1016               	iorwf	(___fldiv@a+3)^0,w,c
  7905   00192C  A4D8               	btfss	status,2,c
  7906   00192E  EF9B  F00C         	goto	u2421
  7907   001932  EF9D  F00C         	goto	u2420
  7908   001936                     u2421:
  7909   001936  EFB5  F00C         	goto	l4187
  7910   00193A                     u2420:
  7911   00193A  0E00               	movlw	0
  7912   00193C  6E0F               	movwf	___fldiv@b^0,c
  7913   00193E  0E00               	movlw	0
  7914   001940  6E10               	movwf	(___fldiv@b+1)^0,c
  7915   001942  0E00               	movlw	0
  7916   001944  6E11               	movwf	(___fldiv@b+2)^0,c
  7917   001946  0E00               	movlw	0
  7918   001948  6E12               	movwf	(___fldiv@b+3)^0,c
  7919   00194A  0E80               	movlw	128
  7920   00194C  1211               	iorwf	(___fldiv@b+2)^0,f,c
  7921   00194E  0E7F               	movlw	127
  7922   001950  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7923   001952                     l4181:
  7924   001952  501F               	movf	___fldiv@sign^0,w,c
  7925   001954  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7926   001956  C00F  F00F         	movff	___fldiv@b,?___fldiv
  7927   00195A  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  7928   00195E  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  7929   001962  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  7930   001966  EFF8  F00D         	goto	l2178
  7931   00196A                     l4187:
  7932   00196A  5026               	movf	___fldiv@bexp^0,w,c
  7933   00196C  A4D8               	btfss	status,2,c
  7934   00196E  EFBB  F00C         	goto	u2431
  7935   001972  EFBD  F00C         	goto	u2430
  7936   001976                     u2431:
  7937   001976  EFC7  F00C         	goto	l4195
  7938   00197A                     u2430:
  7939   00197A  0E00               	movlw	0
  7940   00197C  6E0F               	movwf	?___fldiv^0,c
  7941   00197E  0E00               	movlw	0
  7942   001980  6E10               	movwf	(?___fldiv+1)^0,c
  7943   001982  0E00               	movlw	0
  7944   001984  6E11               	movwf	(?___fldiv+2)^0,c
  7945   001986  0E00               	movlw	0
  7946   001988  6E12               	movwf	(?___fldiv+3)^0,c
  7947   00198A  EFF8  F00D         	goto	l2178
  7948   00198E                     l4195:
  7949   00198E  5027               	movf	___fldiv@aexp^0,w,c
  7950   001990  C026  F017         	movff	___fldiv@bexp,??___fldiv
  7951   001994  6A18               	clrf	(??___fldiv+1)^0,c
  7952   001996  5E17               	subwf	??___fldiv^0,f,c
  7953   001998  0E00               	movlw	0
  7954   00199A  5A18               	subwfb	(??___fldiv+1)^0,f,c
  7955   00199C  0E7F               	movlw	127
  7956   00199E  2417               	addwf	??___fldiv^0,w,c
  7957   0019A0  6E20               	movwf	___fldiv@new_exp^0,c
  7958   0019A2  0E00               	movlw	0
  7959   0019A4  2018               	addwfc	(??___fldiv+1)^0,w,c
  7960   0019A6  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7961   0019A8  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  7962   0019AC  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  7963   0019B0  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  7964   0019B4  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  7965   0019B8  0E00               	movlw	0
  7966   0019BA  6E0F               	movwf	___fldiv@b^0,c
  7967   0019BC  0E00               	movlw	0
  7968   0019BE  6E10               	movwf	(___fldiv@b+1)^0,c
  7969   0019C0  0E00               	movlw	0
  7970   0019C2  6E11               	movwf	(___fldiv@b+2)^0,c
  7971   0019C4  0E00               	movlw	0
  7972   0019C6  6E12               	movwf	(___fldiv@b+3)^0,c
  7973   0019C8  0E00               	movlw	0
  7974   0019CA  6E22               	movwf	___fldiv@grs^0,c
  7975   0019CC  0E00               	movlw	0
  7976   0019CE  6E23               	movwf	(___fldiv@grs+1)^0,c
  7977   0019D0  0E00               	movlw	0
  7978   0019D2  6E24               	movwf	(___fldiv@grs+2)^0,c
  7979   0019D4  0E00               	movlw	0
  7980   0019D6  6E25               	movwf	(___fldiv@grs+3)^0,c
  7981   0019D8  0E00               	movlw	0
  7982   0019DA  6E27               	movwf	___fldiv@aexp^0,c
  7983   0019DC  EF28  F00D         	goto	l2180
  7984   0019E0                     l4205:
  7985   0019E0  5027               	movf	___fldiv@aexp^0,w,c
  7986   0019E2  B4D8               	btfsc	status,2,c
  7987   0019E4  EFF6  F00C         	goto	u2441
  7988   0019E8  EFF8  F00C         	goto	u2440
  7989   0019EC                     u2441:
  7990   0019EC  EF0F  F00D         	goto	l4213
  7991   0019F0                     u2440:
  7992   0019F0  90D8               	bcf	status,0,c
  7993   0019F2  361B               	rlcf	___fldiv@rem^0,f,c
  7994   0019F4  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  7995   0019F6  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  7996   0019F8  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  7997   0019FA  90D8               	bcf	status,0,c
  7998   0019FC  360F               	rlcf	___fldiv@b^0,f,c
  7999   0019FE  3610               	rlcf	(___fldiv@b+1)^0,f,c
  8000   001A00  3611               	rlcf	(___fldiv@b+2)^0,f,c
  8001   001A02  3612               	rlcf	(___fldiv@b+3)^0,f,c
  8002   001A04  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  8003   001A06  EF07  F00D         	goto	u2451
  8004   001A0A  EF09  F00D         	goto	u2450
  8005   001A0E                     u2451:
  8006   001A0E  EF0A  F00D         	goto	l2183
  8007   001A12                     u2450:
  8008   001A12  800F               	bsf	___fldiv@b^0,0,c
  8009   001A14                     l2183:
  8010   001A14  90D8               	bcf	status,0,c
  8011   001A16  3622               	rlcf	___fldiv@grs^0,f,c
  8012   001A18  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  8013   001A1A  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  8014   001A1C  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  8015   001A1E                     l4213:
  8016   001A1E  5013               	movf	___fldiv@a^0,w,c
  8017   001A20  5C1B               	subwf	___fldiv@rem^0,w,c
  8018   001A22  5014               	movf	(___fldiv@a+1)^0,w,c
  8019   001A24  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  8020   001A26  5015               	movf	(___fldiv@a+2)^0,w,c
  8021   001A28  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  8022   001A2A  5016               	movf	(___fldiv@a+3)^0,w,c
  8023   001A2C  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  8024   001A2E  A0D8               	btfss	status,0,c
  8025   001A30  EF1C  F00D         	goto	u2461
  8026   001A34  EF1E  F00D         	goto	u2460
  8027   001A38                     u2461:
  8028   001A38  EF27  F00D         	goto	l4219
  8029   001A3C                     u2460:
  8030   001A3C  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  8031   001A3E  5013               	movf	___fldiv@a^0,w,c
  8032   001A40  5E1B               	subwf	___fldiv@rem^0,f,c
  8033   001A42  5014               	movf	(___fldiv@a+1)^0,w,c
  8034   001A44  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  8035   001A46  5015               	movf	(___fldiv@a+2)^0,w,c
  8036   001A48  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  8037   001A4A  5016               	movf	(___fldiv@a+3)^0,w,c
  8038   001A4C  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  8039   001A4E                     l4219:
  8040   001A4E  2A27               	incf	___fldiv@aexp^0,f,c
  8041   001A50                     l2180:
  8042   001A50  0E19               	movlw	25
  8043   001A52  6427               	cpfsgt	___fldiv@aexp^0,c
  8044   001A54  EF2E  F00D         	goto	u2471
  8045   001A58  EF30  F00D         	goto	u2470
  8046   001A5C                     u2471:
  8047   001A5C  EFF0  F00C         	goto	l4205
  8048   001A60                     u2470:
  8049   001A60  501B               	movf	___fldiv@rem^0,w,c
  8050   001A62  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  8051   001A64  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  8052   001A66  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  8053   001A68  B4D8               	btfsc	status,2,c
  8054   001A6A  EF39  F00D         	goto	u2481
  8055   001A6E  EF3B  F00D         	goto	u2480
  8056   001A72                     u2481:
  8057   001A72  EF53  F00D         	goto	l4231
  8058   001A76                     u2480:
  8059   001A76  8022               	bsf	___fldiv@grs^0,0,c
  8060   001A78  EF53  F00D         	goto	l4231
  8061   001A7C                     l4225:
  8062   001A7C  90D8               	bcf	status,0,c
  8063   001A7E  360F               	rlcf	___fldiv@b^0,f,c
  8064   001A80  3610               	rlcf	(___fldiv@b+1)^0,f,c
  8065   001A82  3611               	rlcf	(___fldiv@b+2)^0,f,c
  8066   001A84  3612               	rlcf	(___fldiv@b+3)^0,f,c
  8067   001A86  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  8068   001A88  EF48  F00D         	goto	u2491
  8069   001A8C  EF4A  F00D         	goto	u2490
  8070   001A90                     u2491:
  8071   001A90  EF4B  F00D         	goto	l2189
  8072   001A94                     u2490:
  8073   001A94  800F               	bsf	___fldiv@b^0,0,c
  8074   001A96                     l2189:
  8075   001A96  90D8               	bcf	status,0,c
  8076   001A98  3622               	rlcf	___fldiv@grs^0,f,c
  8077   001A9A  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  8078   001A9C  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  8079   001A9E  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  8080   001AA0  0620               	decf	___fldiv@new_exp^0,f,c
  8081   001AA2  A0D8               	btfss	status,0,c
  8082   001AA4  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  8083   001AA6                     l4231:
  8084   001AA6  AE11               	btfss	(___fldiv@b+2)^0,7,c
  8085   001AA8  EF58  F00D         	goto	u2501
  8086   001AAC  EF5A  F00D         	goto	u2500
  8087   001AB0                     u2501:
  8088   001AB0  EF3E  F00D         	goto	l4225
  8089   001AB4                     u2500:
  8090   001AB4  0E00               	movlw	0
  8091   001AB6  6E27               	movwf	___fldiv@aexp^0,c
  8092   001AB8  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  8093   001ABA  EF61  F00D         	goto	u2511
  8094   001ABE  EF63  F00D         	goto	u2510
  8095   001AC2                     u2511:
  8096   001AC2  EF87  F00D         	goto	l2191
  8097   001AC6                     u2510:
  8098   001AC6  0EFF               	movlw	255
  8099   001AC8  1422               	andwf	___fldiv@grs^0,w,c
  8100   001ACA  6E17               	movwf	??___fldiv^0,c
  8101   001ACC  0EFF               	movlw	255
  8102   001ACE  1423               	andwf	(___fldiv@grs+1)^0,w,c
  8103   001AD0  6E18               	movwf	(??___fldiv+1)^0,c
  8104   001AD2  0EFF               	movlw	255
  8105   001AD4  1424               	andwf	(___fldiv@grs+2)^0,w,c
  8106   001AD6  6E19               	movwf	(??___fldiv+2)^0,c
  8107   001AD8  0E7F               	movlw	127
  8108   001ADA  1425               	andwf	(___fldiv@grs+3)^0,w,c
  8109   001ADC  6E1A               	movwf	(??___fldiv+3)^0,c
  8110   001ADE  5017               	movf	??___fldiv^0,w,c
  8111   001AE0  1018               	iorwf	(??___fldiv+1)^0,w,c
  8112   001AE2  1019               	iorwf	(??___fldiv+2)^0,w,c
  8113   001AE4  101A               	iorwf	(??___fldiv+3)^0,w,c
  8114   001AE6  B4D8               	btfsc	status,2,c
  8115   001AE8  EF78  F00D         	goto	u2521
  8116   001AEC  EF7A  F00D         	goto	u2520
  8117   001AF0                     u2521:
  8118   001AF0  EF7E  F00D         	goto	l2192
  8119   001AF4                     u2520:
  8120   001AF4                     l4239:
  8121   001AF4  0E01               	movlw	1
  8122   001AF6  6E27               	movwf	___fldiv@aexp^0,c
  8123   001AF8  EF87  F00D         	goto	l2191
  8124   001AFC                     l2192:
  8125   001AFC  A00F               	btfss	___fldiv@b^0,0,c
  8126   001AFE  EF83  F00D         	goto	u2531
  8127   001B02  EF85  F00D         	goto	u2530
  8128   001B06                     u2531:
  8129   001B06  EF87  F00D         	goto	l2191
  8130   001B0A                     u2530:
  8131   001B0A  EF7A  F00D         	goto	l4239
  8132   001B0E                     l2191:
  8133   001B0E  5027               	movf	___fldiv@aexp^0,w,c
  8134   001B10  B4D8               	btfsc	status,2,c
  8135   001B12  EF8D  F00D         	goto	u2541
  8136   001B16  EF8F  F00D         	goto	u2540
  8137   001B1A                     u2541:
  8138   001B1A  EFB3  F00D         	goto	l4251
  8139   001B1E                     u2540:
  8140   001B1E  0E01               	movlw	1
  8141   001B20  260F               	addwf	___fldiv@b^0,f,c
  8142   001B22  0E00               	movlw	0
  8143   001B24  2210               	addwfc	(___fldiv@b+1)^0,f,c
  8144   001B26  2211               	addwfc	(___fldiv@b+2)^0,f,c
  8145   001B28  2212               	addwfc	(___fldiv@b+3)^0,f,c
  8146   001B2A  A012               	btfss	(___fldiv@b+3)^0,0,c
  8147   001B2C  EF9A  F00D         	goto	u2551
  8148   001B30  EF9C  F00D         	goto	u2550
  8149   001B34                     u2551:
  8150   001B34  EFB3  F00D         	goto	l4251
  8151   001B38                     u2550:
  8152   001B38  C00F  F017         	movff	___fldiv@b,??___fldiv
  8153   001B3C  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  8154   001B40  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  8155   001B44  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  8156   001B48  341A               	rlcf	(??___fldiv+3)^0,w,c
  8157   001B4A  321A               	rrcf	(??___fldiv+3)^0,f,c
  8158   001B4C  3219               	rrcf	(??___fldiv+2)^0,f,c
  8159   001B4E  3218               	rrcf	(??___fldiv+1)^0,f,c
  8160   001B50  3217               	rrcf	??___fldiv^0,f,c
  8161   001B52  C017  F00F         	movff	??___fldiv,___fldiv@b
  8162   001B56  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  8163   001B5A  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  8164   001B5E  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  8165   001B62  4A20               	infsnz	___fldiv@new_exp^0,f,c
  8166   001B64  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  8167   001B66                     l4251:
  8168   001B66  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8169   001B68  EFBE  F00D         	goto	u2561
  8170   001B6C  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  8171   001B6E  E108               	bnz	u2560
  8172   001B70  2820               	incf	___fldiv@new_exp^0,w,c
  8173   001B72  A0D8               	btfss	status,0,c
  8174   001B74  EFBE  F00D         	goto	u2561
  8175   001B78  EFC0  F00D         	goto	u2560
  8176   001B7C                     u2561:
  8177   001B7C  EFCB  F00D         	goto	l4255
  8178   001B80                     u2560:
  8179   001B80  0E00               	movlw	0
  8180   001B82  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8181   001B84  6820               	setf	___fldiv@new_exp^0,c
  8182   001B86  0E00               	movlw	0
  8183   001B88  6E0F               	movwf	___fldiv@b^0,c
  8184   001B8A  0E00               	movlw	0
  8185   001B8C  6E10               	movwf	(___fldiv@b+1)^0,c
  8186   001B8E  0E00               	movlw	0
  8187   001B90  6E11               	movwf	(___fldiv@b+2)^0,c
  8188   001B92  0E00               	movlw	0
  8189   001B94  6E12               	movwf	(___fldiv@b+3)^0,c
  8190   001B96                     l4255:
  8191   001B96  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8192   001B98  EFD8  F00D         	goto	u2570
  8193   001B9C  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  8194   001B9E  E106               	bnz	u2571
  8195   001BA0  0420               	decf	___fldiv@new_exp^0,w,c
  8196   001BA2  B0D8               	btfsc	status,0,c
  8197   001BA4  EFD6  F00D         	goto	u2571
  8198   001BA8  EFD8  F00D         	goto	u2570
  8199   001BAC                     u2571:
  8200   001BAC  EFE6  F00D         	goto	l4259
  8201   001BB0                     u2570:
  8202   001BB0  0E00               	movlw	0
  8203   001BB2  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8204   001BB4  0E00               	movlw	0
  8205   001BB6  6E20               	movwf	___fldiv@new_exp^0,c
  8206   001BB8  0E00               	movlw	0
  8207   001BBA  6E0F               	movwf	___fldiv@b^0,c
  8208   001BBC  0E00               	movlw	0
  8209   001BBE  6E10               	movwf	(___fldiv@b+1)^0,c
  8210   001BC0  0E00               	movlw	0
  8211   001BC2  6E11               	movwf	(___fldiv@b+2)^0,c
  8212   001BC4  0E00               	movlw	0
  8213   001BC6  6E12               	movwf	(___fldiv@b+3)^0,c
  8214   001BC8  0E00               	movlw	0
  8215   001BCA  6E1F               	movwf	___fldiv@sign^0,c
  8216   001BCC                     l4259:
  8217   001BCC  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  8218   001BD0  A026               	btfss	___fldiv@bexp^0,0,c
  8219   001BD2  EFED  F00D         	goto	u2581
  8220   001BD6  EFEF  F00D         	goto	u2580
  8221   001BDA                     u2581:
  8222   001BDA  EFF2  F00D         	goto	l4265
  8223   001BDE                     u2580:
  8224   001BDE  8E11               	bsf	(___fldiv@b+2)^0,7,c
  8225   001BE0  EFF3  F00D         	goto	l4267
  8226   001BE4                     l4265:
  8227   001BE4  9E11               	bcf	(___fldiv@b+2)^0,7,c
  8228   001BE6                     l4267:
  8229   001BE6  90D8               	bcf	status,0,c
  8230   001BE8  3026               	rrcf	___fldiv@bexp^0,w,c
  8231   001BEA  6E12               	movwf	(___fldiv@b+3)^0,c
  8232   001BEC  EFA9  F00C         	goto	l4181
  8233   001BF0                     l2178:
  8234   001BF0  0012               	return		;funcret
  8235   001BF2                     __end_of___fldiv:
  8236                           	callstack 0
  8237                           
  8238 ;; *************** function _clear_log *****************
  8239 ;; Defined at:
  8240 ;;		line 66 in file "view_log.c"
  8241 ;; Parameters:    Size  Location     Type
  8242 ;;		None
  8243 ;; Auto vars:     Size  Location     Type
  8244 ;;		None
  8245 ;; Return value:  Size  Location     Type
  8246 ;;                  1    wreg      void 
  8247 ;; Registers used:
  8248 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8249 ;; Tracked objects:
  8250 ;;		On entry : 0/0
  8251 ;;		On exit  : 0/0
  8252 ;;		Unchanged: 0/0
  8253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8254 ;;      Params:         0       0       0       0       0       0       0
  8255 ;;      Locals:         0       0       0       0       0       0       0
  8256 ;;      Temps:          0       0       0       0       0       0       0
  8257 ;;      Totals:         0       0       0       0       0       0       0
  8258 ;;Total ram usage:        0 bytes
  8259 ;; Hardware stack levels used: 1
  8260 ;; Hardware stack levels required when called: 2
  8261 ;; This function calls:
  8262 ;;		_clcd_print
  8263 ;;		_clcd_write
  8264 ;; This function is called by:
  8265 ;;		_main
  8266 ;; This function uses a non-reentrant model
  8267 ;;
  8268                           
  8269                           	psect	text37
  8270   0007DE                     __ptext37:
  8271                           	callstack 0
  8272   0007DE                     _clear_log:
  8273                           	callstack 28
  8274   0007DE                     
  8275                           ;view_log.c: 68:     if(in_flag==0)
  8276   0007DE  0100               	movlb	0	; () banked
  8277   0007E0  5183               	movf	_in_flag& (0+255),w,b
  8278   0007E2  1184               	iorwf	(_in_flag+1)& (0+255),w,b
  8279   0007E4  A4D8               	btfss	status,2,c
  8280   0007E6  EFF7  F003         	goto	u3611
  8281   0007EA  EFF9  F003         	goto	u3610
  8282   0007EE                     u3611:
  8283   0007EE  EF0B  F004         	goto	l5009
  8284   0007F2                     u3610:
  8285   0007F2                     
  8286                           ; BSR set to: 0
  8287                           ;view_log.c: 69:     {;view_log.c: 70:         in_flag=1;
  8288   0007F2  0E00               	movlw	0
  8289   0007F4  6F84               	movwf	(_in_flag+1)& (0+255),b
  8290   0007F6  0E01               	movlw	1
  8291   0007F8  6F83               	movwf	_in_flag& (0+255),b
  8292   0007FA                     
  8293                           ; BSR set to: 0
  8294                           ;view_log.c: 71:         clcd_write(0x01, 0);
  8295   0007FA  0E00               	movlw	0
  8296   0007FC  6E01               	movwf	clcd_write@control_bit^0,c
  8297   0007FE  0E01               	movlw	1
  8298   000800  EC7D  F001         	call	_clcd_write
  8299   000804                     
  8300                           ;view_log.c: 72:         log_count = 0;
  8301   000804  0E00               	movlw	0
  8302   000806  0100               	movlb	0	; () banked
  8303   000808  6F88               	movwf	(_log_count+1)& (0+255),b
  8304   00080A  0E00               	movlw	0
  8305   00080C  6F87               	movwf	_log_count& (0+255),b
  8306   00080E                     
  8307                           ; BSR set to: 0
  8308                           ;view_log.c: 73:         timeout = 3;
  8309   00080E  0E00               	movlw	0
  8310   000810  6F98               	movwf	(_timeout+1)& (0+255),b
  8311   000812  0E03               	movlw	3
  8312   000814  6F97               	movwf	_timeout& (0+255),b
  8313   000816                     l5009:
  8314                           
  8315                           ; BSR set to: 0
  8316                           ;view_log.c: 75:     if (timeout>0)
  8317   000816  5197               	movf	_timeout& (0+255),w,b
  8318   000818  1198               	iorwf	(_timeout+1)& (0+255),w,b
  8319   00081A  B4D8               	btfsc	status,2,c
  8320   00081C  EF12  F004         	goto	u3621
  8321   000820  EF14  F004         	goto	u3620
  8322   000824                     u3621:
  8323   000824  EF1E  F004         	goto	l5013
  8324   000828                     u3620:
  8325   000828                     
  8326                           ; BSR set to: 0
  8327                           ;view_log.c: 76:     {;view_log.c: 77:         clcd_print("Log cleared", (0x80 + (0)));
  8328   000828  0E99               	movlw	low STR_28
  8329   00082A  6E0C               	movwf	clcd_print@data^0,c
  8330   00082C  0E2F               	movlw	high STR_28
  8331   00082E  6E0D               	movwf	(clcd_print@data+1)^0,c
  8332   000830  0E80               	movlw	128
  8333   000832  6E0E               	movwf	clcd_print@addr^0,c
  8334   000834  EC00  F003         	call	_clcd_print	;wreg free
  8335                           
  8336                           ;view_log.c: 78:     }
  8337   000838  EF35  F004         	goto	l1582
  8338   00083C                     l5013:
  8339                           
  8340                           ; BSR set to: 0
  8341   00083C  5197               	movf	_timeout& (0+255),w,b
  8342   00083E  1198               	iorwf	(_timeout+1)& (0+255),w,b
  8343   000840  A4D8               	btfss	status,2,c
  8344   000842  EF25  F004         	goto	u3631
  8345   000846  EF27  F004         	goto	u3630
  8346   00084A                     u3631:
  8347   00084A  EF35  F004         	goto	l1582
  8348   00084E                     u3630:
  8349   00084E                     
  8350                           ; BSR set to: 0
  8351                           ;view_log.c: 80:     {;view_log.c: 81:         clcd_write(0x01, 0);
  8352   00084E  0E00               	movlw	0
  8353   000850  6E01               	movwf	clcd_write@control_bit^0,c
  8354   000852  0E01               	movlw	1
  8355   000854  EC7D  F001         	call	_clcd_write
  8356   000858                     
  8357                           ;view_log.c: 82:         main_f = 2;
  8358   000858  0E00               	movlw	0
  8359   00085A  0100               	movlb	0	; () banked
  8360   00085C  6FA2               	movwf	(_main_f+1)& (0+255),b
  8361   00085E  0E02               	movlw	2
  8362   000860  6FA1               	movwf	_main_f& (0+255),b
  8363   000862                     
  8364                           ; BSR set to: 0
  8365                           ;view_log.c: 83:         in_flag=0;
  8366   000862  0E00               	movlw	0
  8367   000864  6F84               	movwf	(_in_flag+1)& (0+255),b
  8368   000866  0E00               	movlw	0
  8369   000868  6F83               	movwf	_in_flag& (0+255),b
  8370   00086A                     l1582:
  8371   00086A  0012               	return		;funcret
  8372   00086C                     __end_of_clear_log:
  8373                           	callstack 0
  8374                           
  8375 ;; *************** function _change_pass *****************
  8376 ;; Defined at:
  8377 ;;		line 2 in file "change_password.c"
  8378 ;; Parameters:    Size  Location     Type
  8379 ;;  key             1    wreg     unsigned char 
  8380 ;; Auto vars:     Size  Location     Type
  8381 ;;  key             1   18[COMRAM] unsigned char 
  8382 ;;  j               2   21[COMRAM] int 
  8383 ;;  j               2   19[COMRAM] int 
  8384 ;; Return value:  Size  Location     Type
  8385 ;;                  1    wreg      void 
  8386 ;; Registers used:
  8387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8388 ;; Tracked objects:
  8389 ;;		On entry : 0/0
  8390 ;;		On exit  : 0/0
  8391 ;;		Unchanged: 0/0
  8392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8393 ;;      Params:         0       0       0       0       0       0       0
  8394 ;;      Locals:         5       0       0       0       0       0       0
  8395 ;;      Temps:          2       0       0       0       0       0       0
  8396 ;;      Totals:         7       0       0       0       0       0       0
  8397 ;;Total ram usage:        7 bytes
  8398 ;; Hardware stack levels used: 1
  8399 ;; Hardware stack levels required when called: 3
  8400 ;; This function calls:
  8401 ;;		_clcd_print
  8402 ;;		_clcd_putch
  8403 ;;		_clcd_write
  8404 ;;		_write_external_eeprom
  8405 ;; This function is called by:
  8406 ;;		_main
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410                           	psect	text38
  8411   001FAC                     __ptext38:
  8412                           	callstack 0
  8413   001FAC                     _change_pass:
  8414                           	callstack 27
  8415                           
  8416                           ;incstack = 0
  8417                           ;change_pass@key stored from wreg
  8418   001FAC  6E13               	movwf	change_pass@key^0,c
  8419   001FAE                     
  8420                           ;change_password.c: 2: void change_pass(unsigned char key);change_password.c: 3: {;chang
      +                          e_password.c: 4:     static unsigned char n_password[5], c_password[5];;change_password.
      +                          c: 5:     static int success_flag = 0;;change_password.c: 7:     if (success_flag == 1)
  8421   001FAE  0100               	movlb	0	; () banked
  8422   001FB0  0575               	decf	change_pass@success_flag& (0+255),w,b
  8423   001FB2  1176               	iorwf	(change_pass@success_flag+1)& (0+255),w,b
  8424   001FB4  A4D8               	btfss	status,2,c
  8425   001FB6  EFDF  F00F         	goto	u2761
  8426   001FBA  EFE1  F00F         	goto	u2760
  8427   001FBE                     u2761:
  8428   001FBE  EF15  F010         	goto	l4383
  8429   001FC2                     u2760:
  8430   001FC2                     
  8431                           ; BSR set to: 0
  8432                           ;change_password.c: 8:     {;change_password.c: 9:         clcd_print("Password does", (
      +                          0x80 + (0)));
  8433   001FC2  0E57               	movlw	low STR_1
  8434   001FC4  6E0C               	movwf	clcd_print@data^0,c
  8435   001FC6  0E2F               	movlw	high STR_1
  8436   001FC8  6E0D               	movwf	(clcd_print@data+1)^0,c
  8437   001FCA  0E80               	movlw	128
  8438   001FCC  6E0E               	movwf	clcd_print@addr^0,c
  8439   001FCE  EC00  F003         	call	_clcd_print	;wreg free
  8440                           
  8441                           ;change_password.c: 10:         clcd_print("not match", (0xC0 + (0)));
  8442   001FD2  0ED0               	movlw	low STR_2
  8443   001FD4  6E0C               	movwf	clcd_print@data^0,c
  8444   001FD6  0E2F               	movlw	high STR_2
  8445   001FD8  6E0D               	movwf	(clcd_print@data+1)^0,c
  8446   001FDA  0EC0               	movlw	192
  8447   001FDC  6E0E               	movwf	clcd_print@addr^0,c
  8448   001FDE  EC00  F003         	call	_clcd_print	;wreg free
  8449   001FE2                     
  8450                           ;change_password.c: 11:         if (timeout == 0)
  8451   001FE2  0100               	movlb	0	; () banked
  8452   001FE4  5197               	movf	_timeout& (0+255),w,b
  8453   001FE6  1198               	iorwf	(_timeout+1)& (0+255),w,b
  8454   001FE8  A4D8               	btfss	status,2,c
  8455   001FEA  EFF9  F00F         	goto	u2771
  8456   001FEE  EFFB  F00F         	goto	u2770
  8457   001FF2                     u2771:
  8458   001FF2  EF40  F010         	goto	l4401
  8459   001FF6                     u2770:
  8460   001FF6                     
  8461                           ; BSR set to: 0
  8462                           ;change_password.c: 12:         {;change_password.c: 13:             clcd_write(0x01, 0)
      +                          ;
  8463   001FF6  0E00               	movlw	0
  8464   001FF8  6E01               	movwf	clcd_write@control_bit^0,c
  8465   001FFA  0E01               	movlw	1
  8466   001FFC  EC7D  F001         	call	_clcd_write
  8467   002000                     l4373:
  8468                           
  8469                           ;change_password.c: 14:             main_f = 2;
  8470   002000  0E00               	movlw	0
  8471   002002  0100               	movlb	0	; () banked
  8472   002004  6FA2               	movwf	(_main_f+1)& (0+255),b
  8473   002006  0E02               	movlw	2
  8474   002008  6FA1               	movwf	_main_f& (0+255),b
  8475   00200A                     
  8476                           ; BSR set to: 0
  8477                           ;change_password.c: 15:             p_flag = 0;
  8478   00200A  0E00               	movlw	0
  8479   00200C  6F86               	movwf	(_p_flag+1)& (0+255),b
  8480   00200E  0E00               	movlw	0
  8481   002010  6F85               	movwf	_p_flag& (0+255),b
  8482   002012                     
  8483                           ; BSR set to: 0
  8484                           ;change_password.c: 16:             pass_index = 0;
  8485   002012  0E00               	movlw	0
  8486   002014  6F94               	movwf	(_pass_index+1)& (0+255),b
  8487   002016  0E00               	movlw	0
  8488   002018  6F93               	movwf	_pass_index& (0+255),b
  8489   00201A                     
  8490                           ; BSR set to: 0
  8491                           ;change_password.c: 17:             success_flag = 0;
  8492   00201A  0E00               	movlw	0
  8493   00201C  6F76               	movwf	(change_pass@success_flag+1)& (0+255),b
  8494   00201E  0E00               	movlw	0
  8495   002020  6F75               	movwf	change_pass@success_flag& (0+255),b
  8496   002022  EFD0  F011         	goto	l178
  8497   002026                     l4381:
  8498                           
  8499                           ;change_password.c: 18:         return;
  8500   002026  EFD0  F011         	goto	l178
  8501   00202A                     l4383:
  8502                           
  8503                           ; BSR set to: 0
  8504   00202A  0E02               	movlw	2
  8505   00202C  1975               	xorwf	change_pass@success_flag& (0+255),w,b
  8506   00202E  1176               	iorwf	(change_pass@success_flag+1)& (0+255),w,b
  8507   002030  A4D8               	btfss	status,2,c
  8508   002032  EF1D  F010         	goto	u2781
  8509   002036  EF1F  F010         	goto	u2780
  8510   00203A                     u2781:
  8511   00203A  EF40  F010         	goto	l4401
  8512   00203E                     u2780:
  8513   00203E                     
  8514                           ; BSR set to: 0
  8515                           ;change_password.c: 22:     {;change_password.c: 23:         clcd_print("Password change
      +                          d", (0x80 + (0)));
  8516   00203E  0EEC               	movlw	low STR_3
  8517   002040  6E0C               	movwf	clcd_print@data^0,c
  8518   002042  0E2E               	movlw	high STR_3
  8519   002044  6E0D               	movwf	(clcd_print@data+1)^0,c
  8520   002046  0E80               	movlw	128
  8521   002048  6E0E               	movwf	clcd_print@addr^0,c
  8522   00204A  EC00  F003         	call	_clcd_print	;wreg free
  8523                           
  8524                           ;change_password.c: 24:         clcd_print("Successfully", (0xC0 + (0)));
  8525   00204E  0E8C               	movlw	low STR_4
  8526   002050  6E0C               	movwf	clcd_print@data^0,c
  8527   002052  0E2F               	movlw	high STR_4
  8528   002054  6E0D               	movwf	(clcd_print@data+1)^0,c
  8529   002056  0EC0               	movlw	192
  8530   002058  6E0E               	movwf	clcd_print@addr^0,c
  8531   00205A  EC00  F003         	call	_clcd_print	;wreg free
  8532   00205E                     
  8533                           ;change_password.c: 25:         if (timeout == 0)
  8534   00205E  0100               	movlb	0	; () banked
  8535   002060  5197               	movf	_timeout& (0+255),w,b
  8536   002062  1198               	iorwf	(_timeout+1)& (0+255),w,b
  8537   002064  A4D8               	btfss	status,2,c
  8538   002066  EF37  F010         	goto	u2791
  8539   00206A  EF39  F010         	goto	u2790
  8540   00206E                     u2791:
  8541   00206E  EF40  F010         	goto	l4401
  8542   002072                     u2790:
  8543   002072                     
  8544                           ; BSR set to: 0
  8545                           ;change_password.c: 26:         {;change_password.c: 27:             clcd_write(0x01, 0)
      +                          ;
  8546   002072  0E00               	movlw	0
  8547   002074  6E01               	movwf	clcd_write@control_bit^0,c
  8548   002076  0E01               	movlw	1
  8549   002078  EC7D  F001         	call	_clcd_write
  8550   00207C  EF00  F010         	goto	l4373
  8551   002080                     l4401:
  8552                           
  8553                           ; BSR set to: 0
  8554                           ;change_password.c: 37:     if (p_flag == 0)
  8555   002080  5185               	movf	_p_flag& (0+255),w,b
  8556   002082  1186               	iorwf	(_p_flag+1)& (0+255),w,b
  8557   002084  A4D8               	btfss	status,2,c
  8558   002086  EF47  F010         	goto	u2801
  8559   00208A  EF49  F010         	goto	u2800
  8560   00208E                     u2801:
  8561   00208E  EFCB  F010         	goto	l4439
  8562   002092                     u2800:
  8563   002092                     
  8564                           ; BSR set to: 0
  8565                           ;change_password.c: 38:     {;change_password.c: 39:         if (pass_index < 4)
  8566   002092  5194               	movf	(_pass_index+1)& (0+255),w,b
  8567   002094  E107               	bnz	u2811
  8568   002096  0E04               	movlw	4
  8569   002098  5D93               	subwf	_pass_index& (0+255),w,b
  8570   00209A  B0D8               	btfsc	status,0,c
  8571   00209C  EF52  F010         	goto	u2811
  8572   0020A0  EF54  F010         	goto	u2810
  8573   0020A4                     u2811:
  8574   0020A4  EFAA  F010         	goto	l4429
  8575   0020A8                     u2810:
  8576   0020A8                     
  8577                           ; BSR set to: 0
  8578                           ;change_password.c: 40:         {;change_password.c: 41:             clcd_print("ENTER N
      +                          EW PWD", (0x80 + (0)));
  8579   0020A8  0E49               	movlw	low STR_5
  8580   0020AA  6E0C               	movwf	clcd_print@data^0,c
  8581   0020AC  0E2F               	movlw	high STR_5
  8582   0020AE  6E0D               	movwf	(clcd_print@data+1)^0,c
  8583   0020B0  0E80               	movlw	128
  8584   0020B2  6E0E               	movwf	clcd_print@addr^0,c
  8585   0020B4  EC00  F003         	call	_clcd_print	;wreg free
  8586   0020B8                     
  8587                           ;change_password.c: 42:             if (sec % 2 == 0)
  8588   0020B8  0100               	movlb	0	; () banked
  8589   0020BA  B19D               	btfsc	_sec& (0+255),0,b
  8590   0020BC  EF62  F010         	goto	u2821
  8591   0020C0  EF64  F010         	goto	u2820
  8592   0020C4                     u2821:
  8593   0020C4  EF6C  F010         	goto	l4411
  8594   0020C8                     u2820:
  8595   0020C8                     
  8596                           ; BSR set to: 0
  8597                           ;change_password.c: 43:                 clcd_putch('_', (0xC0 + (pass_index)));
  8598   0020C8  5193               	movf	_pass_index& (0+255),w,b
  8599   0020CA  0FC0               	addlw	192
  8600   0020CC  6E0D               	movwf	clcd_putch@addr^0,c
  8601   0020CE  0E5F               	movlw	95
  8602   0020D0  ECDD  F000         	call	_clcd_putch
  8603   0020D4  EF72  F010         	goto	l4413
  8604   0020D8                     l4411:
  8605                           
  8606                           ; BSR set to: 0
  8607                           ;change_password.c: 45:                 clcd_putch(' ', (0xC0 + (pass_index)));
  8608   0020D8  5193               	movf	_pass_index& (0+255),w,b
  8609   0020DA  0FC0               	addlw	192
  8610   0020DC  6E0D               	movwf	clcd_putch@addr^0,c
  8611   0020DE  0E20               	movlw	32
  8612   0020E0  ECDD  F000         	call	_clcd_putch
  8613   0020E4                     l4413:
  8614                           
  8615                           ;change_password.c: 46:             if (key == 11)
  8616   0020E4  0E0B               	movlw	11
  8617   0020E6  1813               	xorwf	change_pass@key^0,w,c
  8618   0020E8  A4D8               	btfss	status,2,c
  8619   0020EA  EF79  F010         	goto	u2831
  8620   0020EE  EF7B  F010         	goto	u2830
  8621   0020F2                     u2831:
  8622   0020F2  EF8F  F010         	goto	l4421
  8623   0020F6                     u2830:
  8624   0020F6                     
  8625                           ;change_password.c: 47:             {;change_password.c: 48:                 clcd_putch(
      +                          '*', (0xC0 + (pass_index)));
  8626   0020F6  0100               	movlb	0	; () banked
  8627   0020F8  5193               	movf	_pass_index& (0+255),w,b
  8628   0020FA  0FC0               	addlw	192
  8629   0020FC  6E0D               	movwf	clcd_putch@addr^0,c
  8630   0020FE  0E2A               	movlw	42
  8631   002100  ECDD  F000         	call	_clcd_putch
  8632   002104                     
  8633                           ;change_password.c: 49:                 n_password[pass_index++] = '1';
  8634   002104  0E65               	movlw	low change_pass@n_password
  8635   002106  0100               	movlb	0	; () banked
  8636   002108  2593               	addwf	_pass_index& (0+255),w,b
  8637   00210A  6ED9               	movwf	fsr2l,c
  8638   00210C  0E00               	movlw	high change_pass@n_password
  8639   00210E  2194               	addwfc	(_pass_index+1)& (0+255),w,b
  8640   002110  6EDA               	movwf	fsr2h,c
  8641   002112  0E31               	movlw	49
  8642   002114  6EDF               	movwf	indf2,c
  8643   002116                     l4419:
  8644                           
  8645                           ; BSR set to: 0
  8646   002116  4B93               	infsnz	_pass_index& (0+255),f,b
  8647   002118  2B94               	incf	(_pass_index+1)& (0+255),f,b
  8648                           
  8649                           ;change_password.c: 50:             }
  8650   00211A  EFD0  F011         	goto	l178
  8651   00211E                     l4421:
  8652   00211E  0E0C               	movlw	12
  8653   002120  1813               	xorwf	change_pass@key^0,w,c
  8654   002122  A4D8               	btfss	status,2,c
  8655   002124  EF96  F010         	goto	u2841
  8656   002128  EF98  F010         	goto	u2840
  8657   00212C                     u2841:
  8658   00212C  EF13  F010         	goto	l4381
  8659   002130                     u2840:
  8660   002130                     
  8661                           ;change_password.c: 52:             {;change_password.c: 53:                 clcd_putch(
      +                          '*', (0xC0 + (pass_index)));
  8662   002130  0100               	movlb	0	; () banked
  8663   002132  5193               	movf	_pass_index& (0+255),w,b
  8664   002134  0FC0               	addlw	192
  8665   002136  6E0D               	movwf	clcd_putch@addr^0,c
  8666   002138  0E2A               	movlw	42
  8667   00213A  ECDD  F000         	call	_clcd_putch
  8668   00213E                     
  8669                           ;change_password.c: 54:                 n_password[pass_index++] = '0';
  8670   00213E  0E65               	movlw	low change_pass@n_password
  8671   002140  0100               	movlb	0	; () banked
  8672   002142  2593               	addwf	_pass_index& (0+255),w,b
  8673   002144  6ED9               	movwf	fsr2l,c
  8674   002146  0E00               	movlw	high change_pass@n_password
  8675   002148  2194               	addwfc	(_pass_index+1)& (0+255),w,b
  8676   00214A  6EDA               	movwf	fsr2h,c
  8677   00214C  0E30               	movlw	48
  8678   00214E  6EDF               	movwf	indf2,c
  8679   002150  EF8B  F010         	goto	l4419
  8680   002154                     l4429:
  8681                           
  8682                           ; BSR set to: 0
  8683   002154  0E04               	movlw	4
  8684   002156  1993               	xorwf	_pass_index& (0+255),w,b
  8685   002158  1194               	iorwf	(_pass_index+1)& (0+255),w,b
  8686   00215A  A4D8               	btfss	status,2,c
  8687   00215C  EFB2  F010         	goto	u2851
  8688   002160  EFB4  F010         	goto	u2850
  8689   002164                     u2851:
  8690   002164  EFD0  F011         	goto	l178
  8691   002168                     u2850:
  8692   002168                     
  8693                           ; BSR set to: 0
  8694                           ;change_password.c: 58:         {;change_password.c: 59:             clcd_write(0x01, 0)
      +                          ;
  8695   002168  0E00               	movlw	0
  8696   00216A  6E01               	movwf	clcd_write@control_bit^0,c
  8697   00216C  0E01               	movlw	1
  8698   00216E  EC7D  F001         	call	_clcd_write
  8699   002172                     
  8700                           ;change_password.c: 60:             n_password[pass_index] = '\0';
  8701   002172  0E65               	movlw	low change_pass@n_password
  8702   002174  0100               	movlb	0	; () banked
  8703   002176  2593               	addwf	_pass_index& (0+255),w,b
  8704   002178  6ED9               	movwf	fsr2l,c
  8705   00217A  0E00               	movlw	high change_pass@n_password
  8706   00217C  2194               	addwfc	(_pass_index+1)& (0+255),w,b
  8707   00217E  6EDA               	movwf	fsr2h,c
  8708   002180  6ADF               	clrf	indf2,c
  8709   002182                     
  8710                           ; BSR set to: 0
  8711                           ;change_password.c: 61:             pass_index = 0;
  8712   002182  0E00               	movlw	0
  8713   002184  6F94               	movwf	(_pass_index+1)& (0+255),b
  8714   002186  0E00               	movlw	0
  8715   002188  6F93               	movwf	_pass_index& (0+255),b
  8716   00218A                     
  8717                           ; BSR set to: 0
  8718                           ;change_password.c: 62:             p_flag = 1;
  8719   00218A  0E00               	movlw	0
  8720   00218C  6F86               	movwf	(_p_flag+1)& (0+255),b
  8721   00218E  0E01               	movlw	1
  8722   002190  6F85               	movwf	_p_flag& (0+255),b
  8723   002192  EFD0  F011         	goto	l178
  8724   002196                     l4439:
  8725                           
  8726                           ; BSR set to: 0
  8727   002196  0585               	decf	_p_flag& (0+255),w,b
  8728   002198  1186               	iorwf	(_p_flag+1)& (0+255),w,b
  8729   00219A  A4D8               	btfss	status,2,c
  8730   00219C  EFD2  F010         	goto	u2861
  8731   0021A0  EFD4  F010         	goto	u2860
  8732   0021A4                     u2861:
  8733   0021A4  EF4E  F011         	goto	l4475
  8734   0021A8                     u2860:
  8735   0021A8                     
  8736                           ; BSR set to: 0
  8737                           ;change_password.c: 66:     {;change_password.c: 67:         if (pass_index < 4)
  8738   0021A8  5194               	movf	(_pass_index+1)& (0+255),w,b
  8739   0021AA  E107               	bnz	u2871
  8740   0021AC  0E04               	movlw	4
  8741   0021AE  5D93               	subwf	_pass_index& (0+255),w,b
  8742   0021B0  B0D8               	btfsc	status,0,c
  8743   0021B2  EFDD  F010         	goto	u2871
  8744   0021B6  EFDF  F010         	goto	u2870
  8745   0021BA                     u2871:
  8746   0021BA  EF33  F011         	goto	l4467
  8747   0021BE                     u2870:
  8748   0021BE                     
  8749                           ; BSR set to: 0
  8750                           ;change_password.c: 68:         {;change_password.c: 69:             clcd_print("CONFIRM
      +                           PWD", (0x80 + (0)));
  8751   0021BE  0EA5               	movlw	low STR_6
  8752   0021C0  6E0C               	movwf	clcd_print@data^0,c
  8753   0021C2  0E2F               	movlw	high STR_6
  8754   0021C4  6E0D               	movwf	(clcd_print@data+1)^0,c
  8755   0021C6  0E80               	movlw	128
  8756   0021C8  6E0E               	movwf	clcd_print@addr^0,c
  8757   0021CA  EC00  F003         	call	_clcd_print	;wreg free
  8758   0021CE                     
  8759                           ;change_password.c: 70:             if (sec % 2 == 0)
  8760   0021CE  0100               	movlb	0	; () banked
  8761   0021D0  B19D               	btfsc	_sec& (0+255),0,b
  8762   0021D2  EFED  F010         	goto	u2881
  8763   0021D6  EFEF  F010         	goto	u2880
  8764   0021DA                     u2881:
  8765   0021DA  EFF7  F010         	goto	l4449
  8766   0021DE                     u2880:
  8767   0021DE                     
  8768                           ; BSR set to: 0
  8769                           ;change_password.c: 71:                 clcd_putch('_', (0xC0 + (pass_index)));
  8770   0021DE  5193               	movf	_pass_index& (0+255),w,b
  8771   0021E0  0FC0               	addlw	192
  8772   0021E2  6E0D               	movwf	clcd_putch@addr^0,c
  8773   0021E4  0E5F               	movlw	95
  8774   0021E6  ECDD  F000         	call	_clcd_putch
  8775   0021EA  EFFD  F010         	goto	l4451
  8776   0021EE                     l4449:
  8777                           
  8778                           ; BSR set to: 0
  8779                           ;change_password.c: 73:                 clcd_putch(' ', (0xC0 + (pass_index)));
  8780   0021EE  5193               	movf	_pass_index& (0+255),w,b
  8781   0021F0  0FC0               	addlw	192
  8782   0021F2  6E0D               	movwf	clcd_putch@addr^0,c
  8783   0021F4  0E20               	movlw	32
  8784   0021F6  ECDD  F000         	call	_clcd_putch
  8785   0021FA                     l4451:
  8786                           
  8787                           ;change_password.c: 74:             if (key == 11)
  8788   0021FA  0E0B               	movlw	11
  8789   0021FC  1813               	xorwf	change_pass@key^0,w,c
  8790   0021FE  A4D8               	btfss	status,2,c
  8791   002200  EF04  F011         	goto	u2891
  8792   002204  EF06  F011         	goto	u2890
  8793   002208                     u2891:
  8794   002208  EF18  F011         	goto	l4459
  8795   00220C                     u2890:
  8796   00220C                     
  8797                           ;change_password.c: 75:             {;change_password.c: 76:                 clcd_putch(
      +                          '*', (0xC0 + (pass_index)));
  8798   00220C  0100               	movlb	0	; () banked
  8799   00220E  5193               	movf	_pass_index& (0+255),w,b
  8800   002210  0FC0               	addlw	192
  8801   002212  6E0D               	movwf	clcd_putch@addr^0,c
  8802   002214  0E2A               	movlw	42
  8803   002216  ECDD  F000         	call	_clcd_putch
  8804   00221A                     
  8805                           ;change_password.c: 77:                 c_password[pass_index++] = '1';
  8806   00221A  0E60               	movlw	low change_pass@c_password
  8807   00221C  0100               	movlb	0	; () banked
  8808   00221E  2593               	addwf	_pass_index& (0+255),w,b
  8809   002220  6ED9               	movwf	fsr2l,c
  8810   002222  0E00               	movlw	high change_pass@c_password
  8811   002224  2194               	addwfc	(_pass_index+1)& (0+255),w,b
  8812   002226  6EDA               	movwf	fsr2h,c
  8813   002228  0E31               	movlw	49
  8814   00222A  6EDF               	movwf	indf2,c
  8815   00222C  EF8B  F010         	goto	l4419
  8816   002230                     l4459:
  8817   002230  0E0C               	movlw	12
  8818   002232  1813               	xorwf	change_pass@key^0,w,c
  8819   002234  A4D8               	btfss	status,2,c
  8820   002236  EF1F  F011         	goto	u2901
  8821   00223A  EF21  F011         	goto	u2900
  8822   00223E                     u2901:
  8823   00223E  EF13  F010         	goto	l4381
  8824   002242                     u2900:
  8825   002242                     
  8826                           ;change_password.c: 80:             {;change_password.c: 81:                 clcd_putch(
      +                          '*', (0xC0 + (pass_index)));
  8827   002242  0100               	movlb	0	; () banked
  8828   002244  5193               	movf	_pass_index& (0+255),w,b
  8829   002246  0FC0               	addlw	192
  8830   002248  6E0D               	movwf	clcd_putch@addr^0,c
  8831   00224A  0E2A               	movlw	42
  8832   00224C  ECDD  F000         	call	_clcd_putch
  8833   002250                     
  8834                           ;change_password.c: 82:                 c_password[pass_index++] = '0';
  8835   002250  0E60               	movlw	low change_pass@c_password
  8836   002252  0100               	movlb	0	; () banked
  8837   002254  2593               	addwf	_pass_index& (0+255),w,b
  8838   002256  6ED9               	movwf	fsr2l,c
  8839   002258  0E00               	movlw	high change_pass@c_password
  8840   00225A  2194               	addwfc	(_pass_index+1)& (0+255),w,b
  8841   00225C  6EDA               	movwf	fsr2h,c
  8842   00225E  0E30               	movlw	48
  8843   002260  6EDF               	movwf	indf2,c
  8844   002262  EF8B  F010         	goto	l4419
  8845   002266                     l4467:
  8846                           
  8847                           ; BSR set to: 0
  8848   002266  0E04               	movlw	4
  8849   002268  1993               	xorwf	_pass_index& (0+255),w,b
  8850   00226A  1194               	iorwf	(_pass_index+1)& (0+255),w,b
  8851   00226C  A4D8               	btfss	status,2,c
  8852   00226E  EF3B  F011         	goto	u2911
  8853   002272  EF3D  F011         	goto	u2910
  8854   002276                     u2911:
  8855   002276  EFD0  F011         	goto	l178
  8856   00227A                     u2910:
  8857   00227A                     
  8858                           ; BSR set to: 0
  8859                           ;change_password.c: 86:         {;change_password.c: 88:             c_password[pass_ind
      +                          ex] = '\0';
  8860   00227A  0E60               	movlw	low change_pass@c_password
  8861   00227C  2593               	addwf	_pass_index& (0+255),w,b
  8862   00227E  6ED9               	movwf	fsr2l,c
  8863   002280  0E00               	movlw	high change_pass@c_password
  8864   002282  2194               	addwfc	(_pass_index+1)& (0+255),w,b
  8865   002284  6EDA               	movwf	fsr2h,c
  8866   002286  6ADF               	clrf	indf2,c
  8867   002288                     
  8868                           ; BSR set to: 0
  8869                           ;change_password.c: 89:             pass_index = 0;
  8870   002288  0E00               	movlw	0
  8871   00228A  6F94               	movwf	(_pass_index+1)& (0+255),b
  8872   00228C  0E00               	movlw	0
  8873   00228E  6F93               	movwf	_pass_index& (0+255),b
  8874   002290                     
  8875                           ; BSR set to: 0
  8876                           ;change_password.c: 90:             p_flag = 2;
  8877   002290  0E00               	movlw	0
  8878   002292  6F86               	movwf	(_p_flag+1)& (0+255),b
  8879   002294  0E02               	movlw	2
  8880   002296  6F85               	movwf	_p_flag& (0+255),b
  8881   002298  EFD0  F011         	goto	l178
  8882   00229C                     l4475:
  8883                           
  8884                           ; BSR set to: 0
  8885   00229C  0E02               	movlw	2
  8886   00229E  1985               	xorwf	_p_flag& (0+255),w,b
  8887   0022A0  1186               	iorwf	(_p_flag+1)& (0+255),w,b
  8888   0022A2  A4D8               	btfss	status,2,c
  8889   0022A4  EF56  F011         	goto	u2921
  8890   0022A8  EF58  F011         	goto	u2920
  8891   0022AC                     u2921:
  8892   0022AC  EFD0  F011         	goto	l178
  8893   0022B0                     u2920:
  8894   0022B0                     
  8895                           ; BSR set to: 0
  8896                           ;change_password.c: 94:     {;change_password.c: 95:         for (int j = 0; j < 4; j++)
  8897   0022B0  0E00               	movlw	0
  8898   0022B2  6E15               	movwf	(change_pass@j+1)^0,c
  8899   0022B4  0E00               	movlw	0
  8900   0022B6  6E14               	movwf	change_pass@j^0,c
  8901   0022B8                     l4483:
  8902                           
  8903                           ;change_password.c: 96:         {;change_password.c: 97:             if (n_password[j] !
      +                          = c_password[j])
  8904   0022B8  0E60               	movlw	low change_pass@c_password
  8905   0022BA  2414               	addwf	change_pass@j^0,w,c
  8906   0022BC  6ED9               	movwf	fsr2l,c
  8907   0022BE  0E00               	movlw	high change_pass@c_password
  8908   0022C0  2015               	addwfc	(change_pass@j+1)^0,w,c
  8909   0022C2  6EDA               	movwf	fsr2h,c
  8910   0022C4  0E65               	movlw	low change_pass@n_password
  8911   0022C6  2414               	addwf	change_pass@j^0,w,c
  8912   0022C8  6EE1               	movwf	fsr1l,c
  8913   0022CA  0E00               	movlw	high change_pass@n_password
  8914   0022CC  2015               	addwfc	(change_pass@j+1)^0,w,c
  8915   0022CE  6EE2               	movwf	fsr1h,c
  8916   0022D0  50DE               	movf	postinc2,w,c
  8917   0022D2  18E6               	xorwf	postinc1,w,c
  8918   0022D4  B4D8               	btfsc	status,2,c
  8919   0022D6  EF6F  F011         	goto	u2931
  8920   0022DA  EF71  F011         	goto	u2930
  8921   0022DE                     u2931:
  8922   0022DE  EF7C  F011         	goto	l4489
  8923   0022E2                     u2930:
  8924   0022E2                     
  8925                           ;change_password.c: 98:             {;change_password.c: 100:                 success_fl
      +                          ag = 1;
  8926   0022E2  0E00               	movlw	0
  8927   0022E4  0100               	movlb	0	; () banked
  8928   0022E6  6F76               	movwf	(change_pass@success_flag+1)& (0+255),b
  8929   0022E8  0E01               	movlw	1
  8930   0022EA  6F75               	movwf	change_pass@success_flag& (0+255),b
  8931                           
  8932                           ;change_password.c: 101:                 timeout = 2;
  8933   0022EC  0E00               	movlw	0
  8934   0022EE  6F98               	movwf	(_timeout+1)& (0+255),b
  8935   0022F0  0E02               	movlw	2
  8936   0022F2  6F97               	movwf	_timeout& (0+255),b
  8937   0022F4  EFD0  F011         	goto	l178
  8938   0022F8                     l4489:
  8939                           
  8940                           ;change_password.c: 104:         }
  8941   0022F8  4A14               	infsnz	change_pass@j^0,f,c
  8942   0022FA  2A15               	incf	(change_pass@j+1)^0,f,c
  8943   0022FC  BE15               	btfsc	(change_pass@j+1)^0,7,c
  8944   0022FE  EF8A  F011         	goto	u2941
  8945   002302  5015               	movf	(change_pass@j+1)^0,w,c
  8946   002304  E109               	bnz	u2940
  8947   002306  0E04               	movlw	4
  8948   002308  5C14               	subwf	change_pass@j^0,w,c
  8949   00230A  A0D8               	btfss	status,0,c
  8950   00230C  EF8A  F011         	goto	u2941
  8951   002310  EF8C  F011         	goto	u2940
  8952   002314                     u2941:
  8953   002314  EF5C  F011         	goto	l4483
  8954   002318                     u2940:
  8955   002318                     
  8956                           ;change_password.c: 105:         for (int j = 0; j < 4; j++)
  8957   002318  0E00               	movlw	0
  8958   00231A  6E17               	movwf	(change_pass@j_144+1)^0,c
  8959   00231C  0E00               	movlw	0
  8960   00231E  6E16               	movwf	change_pass@j_144^0,c
  8961   002320                     l4499:
  8962                           
  8963                           ;change_password.c: 106:         {;change_password.c: 107:             m_password[j] = c
      +                          _password[j];
  8964   002320  0E60               	movlw	low change_pass@c_password
  8965   002322  2416               	addwf	change_pass@j_144^0,w,c
  8966   002324  6ED9               	movwf	fsr2l,c
  8967   002326  0E00               	movlw	high change_pass@c_password
  8968   002328  2017               	addwfc	(change_pass@j_144+1)^0,w,c
  8969   00232A  6EDA               	movwf	fsr2h,c
  8970   00232C  0ECE               	movlw	low _m_password
  8971   00232E  2416               	addwf	change_pass@j_144^0,w,c
  8972   002330  6EE1               	movwf	fsr1l,c
  8973   002332  0E00               	movlw	high _m_password
  8974   002334  2017               	addwfc	(change_pass@j_144+1)^0,w,c
  8975   002336  6EE2               	movwf	fsr1h,c
  8976   002338  CFDF FFE7          	movff	indf2,indf1
  8977   00233C                     
  8978                           ;change_password.c: 108:         }
  8979   00233C  4A16               	infsnz	change_pass@j_144^0,f,c
  8980   00233E  2A17               	incf	(change_pass@j_144+1)^0,f,c
  8981   002340  BE17               	btfsc	(change_pass@j_144+1)^0,7,c
  8982   002342  EFAC  F011         	goto	u2951
  8983   002346  5017               	movf	(change_pass@j_144+1)^0,w,c
  8984   002348  E109               	bnz	u2950
  8985   00234A  0E04               	movlw	4
  8986   00234C  5C16               	subwf	change_pass@j_144^0,w,c
  8987   00234E  A0D8               	btfss	status,0,c
  8988   002350  EFAC  F011         	goto	u2951
  8989   002354  EFAE  F011         	goto	u2950
  8990   002358                     u2951:
  8991   002358  EF90  F011         	goto	l4499
  8992   00235C                     u2950:
  8993   00235C                     
  8994                           ;change_password.c: 109:         write_external_eeprom(0x80, n_password[0]);
  8995   00235C  C065  F00D         	movff	change_pass@n_password,write_external_eeprom@data
  8996   002360  0E80               	movlw	128
  8997   002362  EC9A  F001         	call	_write_external_eeprom
  8998                           
  8999                           ;change_password.c: 110:         write_external_eeprom(0x81, n_password[1]);
  9000   002366  C066  F00D         	movff	change_pass@n_password+1,write_external_eeprom@data
  9001   00236A  0E81               	movlw	129
  9002   00236C  EC9A  F001         	call	_write_external_eeprom
  9003                           
  9004                           ;change_password.c: 111:         write_external_eeprom(0x82, n_password[2]);
  9005   002370  C067  F00D         	movff	change_pass@n_password+2,write_external_eeprom@data
  9006   002374  0E82               	movlw	130
  9007   002376  EC9A  F001         	call	_write_external_eeprom
  9008                           
  9009                           ;change_password.c: 112:         write_external_eeprom(0x83, n_password[3]);
  9010   00237A  C068  F00D         	movff	change_pass@n_password+3,write_external_eeprom@data
  9011   00237E  0E83               	movlw	131
  9012   002380  EC9A  F001         	call	_write_external_eeprom
  9013                           
  9014                           ;change_password.c: 113:         write_external_eeprom(0x84, 'z');
  9015   002384  0E7A               	movlw	122
  9016   002386  6E0D               	movwf	write_external_eeprom@data^0,c
  9017   002388  0E84               	movlw	132
  9018   00238A  EC9A  F001         	call	_write_external_eeprom
  9019   00238E                     
  9020                           ;change_password.c: 114:         success_flag = 2;
  9021   00238E  0E00               	movlw	0
  9022   002390  0100               	movlb	0	; () banked
  9023   002392  6F76               	movwf	(change_pass@success_flag+1)& (0+255),b
  9024   002394  0E02               	movlw	2
  9025   002396  6F75               	movwf	change_pass@success_flag& (0+255),b
  9026   002398                     
  9027                           ; BSR set to: 0
  9028                           ;change_password.c: 115:         timeout = 2;
  9029   002398  0E00               	movlw	0
  9030   00239A  6F98               	movwf	(_timeout+1)& (0+255),b
  9031   00239C  0E02               	movlw	2
  9032   00239E  6F97               	movwf	_timeout& (0+255),b
  9033   0023A0                     l178:
  9034   0023A0  0012               	return		;funcret
  9035   0023A2                     __end_of_change_pass:
  9036                           	callstack 0
  9037                           
  9038 ;; *************** function _write_external_eeprom *****************
  9039 ;; Defined at:
  9040 ;;		line 3 in file "ext_eeprom.c"
  9041 ;; Parameters:    Size  Location     Type
  9042 ;;  address         1    wreg     unsigned char 
  9043 ;;  data            1   12[COMRAM] unsigned char 
  9044 ;; Auto vars:     Size  Location     Type
  9045 ;;  address         1   15[COMRAM] unsigned char 
  9046 ;;  i               2   13[COMRAM] unsigned int 
  9047 ;; Return value:  Size  Location     Type
  9048 ;;                  1    wreg      void 
  9049 ;; Registers used:
  9050 ;;		wreg, status,2, status,0, cstack
  9051 ;; Tracked objects:
  9052 ;;		On entry : 0/0
  9053 ;;		On exit  : 0/0
  9054 ;;		Unchanged: 0/0
  9055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9056 ;;      Params:         1       0       0       0       0       0       0
  9057 ;;      Locals:         3       0       0       0       0       0       0
  9058 ;;      Temps:          0       0       0       0       0       0       0
  9059 ;;      Totals:         4       0       0       0       0       0       0
  9060 ;;Total ram usage:        4 bytes
  9061 ;; Hardware stack levels used: 1
  9062 ;; Hardware stack levels required when called: 2
  9063 ;; This function calls:
  9064 ;;		_i2c_start
  9065 ;;		_i2c_stop
  9066 ;;		_i2c_write
  9067 ;; This function is called by:
  9068 ;;		_change_pass
  9069 ;;		_store_event
  9070 ;; This function uses a non-reentrant model
  9071 ;;
  9072                           
  9073                           	psect	text39
  9074   000334                     __ptext39:
  9075                           	callstack 0
  9076   000334                     _write_external_eeprom:
  9077                           	callstack 27
  9078                           
  9079                           ;incstack = 0
  9080                           ;write_external_eeprom@address stored from wreg
  9081   000334  6E10               	movwf	write_external_eeprom@address^0,c
  9082   000336                     
  9083                           ;ext_eeprom.c: 3: void write_external_eeprom(unsigned char address, unsigned char data);
      +                          ext_eeprom.c: 4: {;ext_eeprom.c: 5:  i2c_start();
  9084   000336  ECA9  F000         	call	_i2c_start	;wreg free
  9085   00033A                     
  9086                           ;ext_eeprom.c: 6:  i2c_write(0xA0);
  9087   00033A  0EA0               	movlw	160
  9088   00033C  ECBD  F000         	call	_i2c_write
  9089   000340                     
  9090                           ;ext_eeprom.c: 7:  i2c_write(address);
  9091   000340  5010               	movf	write_external_eeprom@address^0,w,c
  9092   000342  ECBD  F000         	call	_i2c_write
  9093   000346                     
  9094                           ;ext_eeprom.c: 8:  i2c_write(data);
  9095   000346  500D               	movf	write_external_eeprom@data^0,w,c
  9096   000348  ECBD  F000         	call	_i2c_write
  9097   00034C                     
  9098                           ;ext_eeprom.c: 9:  i2c_stop();
  9099   00034C  ECAD  F000         	call	_i2c_stop	;wreg free
  9100   000350                     
  9101                           ;ext_eeprom.c: 10:  for(unsigned int i = 3000;i--;);
  9102   000350  0E0B               	movlw	11
  9103   000352  6E0F               	movwf	(write_external_eeprom@i+1)^0,c
  9104   000354  0EB8               	movlw	184
  9105   000356  6E0E               	movwf	write_external_eeprom@i^0,c
  9106   000358                     l3821:
  9107   000358  060E               	decf	write_external_eeprom@i^0,f,c
  9108   00035A  A0D8               	btfss	status,0,c
  9109   00035C  060F               	decf	(write_external_eeprom@i+1)^0,f,c
  9110   00035E  280E               	incf	write_external_eeprom@i^0,w,c
  9111   000360  E106               	bnz	u2061
  9112   000362  280F               	incf	(write_external_eeprom@i+1)^0,w,c
  9113   000364  A4D8               	btfss	status,2,c
  9114   000366  EFB7  F001         	goto	u2061
  9115   00036A  EFB9  F001         	goto	u2060
  9116   00036E                     u2061:
  9117   00036E  EFAC  F001         	goto	l3821
  9118   000372                     u2060:
  9119   000372  0012               	return		;funcret
  9120   000374                     __end_of_write_external_eeprom:
  9121                           	callstack 0
  9122                           
  9123 ;; *************** function _i2c_write *****************
  9124 ;; Defined at:
  9125 ;;		line 54 in file "i2c.c"
  9126 ;; Parameters:    Size  Location     Type
  9127 ;;  data            1    wreg     unsigned char 
  9128 ;; Auto vars:     Size  Location     Type
  9129 ;;  data            1    0[COMRAM] unsigned char 
  9130 ;; Return value:  Size  Location     Type
  9131 ;;                  1    wreg      void 
  9132 ;; Registers used:
  9133 ;;		wreg, cstack
  9134 ;; Tracked objects:
  9135 ;;		On entry : 0/0
  9136 ;;		On exit  : 0/0
  9137 ;;		Unchanged: 0/0
  9138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9139 ;;      Params:         0       0       0       0       0       0       0
  9140 ;;      Locals:         1       0       0       0       0       0       0
  9141 ;;      Temps:          0       0       0       0       0       0       0
  9142 ;;      Totals:         1       0       0       0       0       0       0
  9143 ;;Total ram usage:        1 bytes
  9144 ;; Hardware stack levels used: 1
  9145 ;; Hardware stack levels required when called: 1
  9146 ;; This function calls:
  9147 ;;		_i2c_idle
  9148 ;; This function is called by:
  9149 ;;		_write_ds1307
  9150 ;;		_read_ds1307
  9151 ;;		_write_external_eeprom
  9152 ;;		_read_external_eeprom
  9153 ;; This function uses a non-reentrant model
  9154 ;;
  9155                           
  9156                           	psect	text40
  9157   00017A                     __ptext40:
  9158                           	callstack 0
  9159   00017A                     _i2c_write:
  9160                           	callstack 27
  9161                           
  9162                           ;incstack = 0
  9163                           ;i2c_write@data stored from wreg
  9164   00017A  6E01               	movwf	i2c_write@data^0,c
  9165   00017C                     
  9166                           ;i2c.c: 54: void i2c_write(unsigned char data);i2c.c: 55: {;i2c.c: 56:  SSPBUF = data;
  9167   00017C  C001  FFC9         	movff	i2c_write@data,4041	;volatile
  9168   000180                     
  9169                           ;i2c.c: 57:  i2c_idle();
  9170   000180  ECC9  F000         	call	_i2c_idle	;wreg free
  9171   000184  0012               	return		;funcret
  9172   000186                     __end_of_i2c_write:
  9173                           	callstack 0
  9174                           
  9175 ;; *************** function _i2c_stop *****************
  9176 ;; Defined at:
  9177 ;;		line 42 in file "i2c.c"
  9178 ;; Parameters:    Size  Location     Type
  9179 ;;		None
  9180 ;; Auto vars:     Size  Location     Type
  9181 ;;		None
  9182 ;; Return value:  Size  Location     Type
  9183 ;;                  1    wreg      void 
  9184 ;; Registers used:
  9185 ;;		cstack
  9186 ;; Tracked objects:
  9187 ;;		On entry : 0/0
  9188 ;;		On exit  : 0/0
  9189 ;;		Unchanged: 0/0
  9190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9191 ;;      Params:         0       0       0       0       0       0       0
  9192 ;;      Locals:         0       0       0       0       0       0       0
  9193 ;;      Temps:          0       0       0       0       0       0       0
  9194 ;;      Totals:         0       0       0       0       0       0       0
  9195 ;;Total ram usage:        0 bytes
  9196 ;; Hardware stack levels used: 1
  9197 ;; Hardware stack levels required when called: 1
  9198 ;; This function calls:
  9199 ;;		_i2c_idle
  9200 ;; This function is called by:
  9201 ;;		_write_ds1307
  9202 ;;		_read_ds1307
  9203 ;;		_write_external_eeprom
  9204 ;;		_read_external_eeprom
  9205 ;; This function uses a non-reentrant model
  9206 ;;
  9207                           
  9208                           	psect	text41
  9209   00015A                     __ptext41:
  9210                           	callstack 0
  9211   00015A                     _i2c_stop:
  9212                           	callstack 27
  9213   00015A                     
  9214                           ;i2c.c: 44:  PEN = 1;
  9215   00015A  84C5               	bsf	4037,2,c	;volatile
  9216   00015C                     
  9217                           ;i2c.c: 45:  i2c_idle();
  9218   00015C  ECC9  F000         	call	_i2c_idle	;wreg free
  9219   000160  0012               	return		;funcret
  9220   000162                     __end_of_i2c_stop:
  9221                           	callstack 0
  9222                           
  9223 ;; *************** function _i2c_start *****************
  9224 ;; Defined at:
  9225 ;;		line 36 in file "i2c.c"
  9226 ;; Parameters:    Size  Location     Type
  9227 ;;		None
  9228 ;; Auto vars:     Size  Location     Type
  9229 ;;		None
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  1    wreg      void 
  9232 ;; Registers used:
  9233 ;;		cstack
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/0
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9239 ;;      Params:         0       0       0       0       0       0       0
  9240 ;;      Locals:         0       0       0       0       0       0       0
  9241 ;;      Temps:          0       0       0       0       0       0       0
  9242 ;;      Totals:         0       0       0       0       0       0       0
  9243 ;;Total ram usage:        0 bytes
  9244 ;; Hardware stack levels used: 1
  9245 ;; Hardware stack levels required when called: 1
  9246 ;; This function calls:
  9247 ;;		_i2c_idle
  9248 ;; This function is called by:
  9249 ;;		_write_ds1307
  9250 ;;		_read_ds1307
  9251 ;;		_write_external_eeprom
  9252 ;;		_read_external_eeprom
  9253 ;; This function uses a non-reentrant model
  9254 ;;
  9255                           
  9256                           	psect	text42
  9257   000152                     __ptext42:
  9258                           	callstack 0
  9259   000152                     _i2c_start:
  9260                           	callstack 27
  9261   000152                     
  9262                           ;i2c.c: 38:  SEN = 1;
  9263   000152  80C5               	bsf	4037,0,c	;volatile
  9264   000154                     
  9265                           ;i2c.c: 39:  i2c_idle();
  9266   000154  ECC9  F000         	call	_i2c_idle	;wreg free
  9267   000158  0012               	return		;funcret
  9268   00015A                     __end_of_i2c_start:
  9269                           	callstack 0
  9270                           
  9271 ;; *************** function _i2c_idle *****************
  9272 ;; Defined at:
  9273 ;;		line 22 in file "i2c.c"
  9274 ;; Parameters:    Size  Location     Type
  9275 ;;		None
  9276 ;; Auto vars:     Size  Location     Type
  9277 ;;		None
  9278 ;; Return value:  Size  Location     Type
  9279 ;;                  1    wreg      void 
  9280 ;; Registers used:
  9281 ;;		None
  9282 ;; Tracked objects:
  9283 ;;		On entry : 0/0
  9284 ;;		On exit  : 0/0
  9285 ;;		Unchanged: 0/0
  9286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9287 ;;      Params:         0       0       0       0       0       0       0
  9288 ;;      Locals:         0       0       0       0       0       0       0
  9289 ;;      Temps:          0       0       0       0       0       0       0
  9290 ;;      Totals:         0       0       0       0       0       0       0
  9291 ;;Total ram usage:        0 bytes
  9292 ;; Hardware stack levels used: 1
  9293 ;; This function calls:
  9294 ;;		Nothing
  9295 ;; This function is called by:
  9296 ;;		_i2c_start
  9297 ;;		_i2c_stop
  9298 ;;		_i2c_rep_start
  9299 ;;		_i2c_write
  9300 ;;		_i2c_rx_mode
  9301 ;; This function uses a non-reentrant model
  9302 ;;
  9303                           
  9304                           	psect	text43
  9305   000192                     __ptext43:
  9306                           	callstack 0
  9307   000192                     _i2c_idle:
  9308                           	callstack 27
  9309   000192                     l636:
  9310   000192  A69E               	btfss	3998,3,c	;volatile
  9311   000194  EFCE  F000         	goto	u1991
  9312   000198  EFD0  F000         	goto	u1990
  9313   00019C                     u1991:
  9314   00019C  EFC9  F000         	goto	l636
  9315   0001A0                     u1990:
  9316   0001A0                     
  9317                           ;i2c.c: 25:  SSPIF = 0;
  9318   0001A0  969E               	bcf	3998,3,c	;volatile
  9319   0001A2  0012               	return		;funcret
  9320   0001A4                     __end_of_i2c_idle:
  9321                           	callstack 0
  9322                           
  9323 ;; *************** function _clcd_putch *****************
  9324 ;; Defined at:
  9325 ;;		line 66 in file "clcd.c"
  9326 ;; Parameters:    Size  Location     Type
  9327 ;;  data            1    wreg     const unsigned char 
  9328 ;;  addr            1   12[COMRAM] unsigned char 
  9329 ;; Auto vars:     Size  Location     Type
  9330 ;;  data            1   13[COMRAM] const unsigned char 
  9331 ;; Return value:  Size  Location     Type
  9332 ;;                  1    wreg      void 
  9333 ;; Registers used:
  9334 ;;		wreg, status,2, cstack
  9335 ;; Tracked objects:
  9336 ;;		On entry : 0/0
  9337 ;;		On exit  : 0/0
  9338 ;;		Unchanged: 0/0
  9339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9340 ;;      Params:         1       0       0       0       0       0       0
  9341 ;;      Locals:         1       0       0       0       0       0       0
  9342 ;;      Temps:          0       0       0       0       0       0       0
  9343 ;;      Totals:         2       0       0       0       0       0       0
  9344 ;;Total ram usage:        2 bytes
  9345 ;; Hardware stack levels used: 1
  9346 ;; Hardware stack levels required when called: 1
  9347 ;; This function calls:
  9348 ;;		_clcd_write
  9349 ;; This function is called by:
  9350 ;;		_change_pass
  9351 ;;		_dashboard
  9352 ;;		_menu
  9353 ;;		_password
  9354 ;;		_set_time
  9355 ;;		_view_log
  9356 ;; This function uses a non-reentrant model
  9357 ;;
  9358                           
  9359                           	psect	text44
  9360   0001BA                     __ptext44:
  9361                           	callstack 0
  9362   0001BA                     _clcd_putch:
  9363                           	callstack 28
  9364                           
  9365                           ;incstack = 0
  9366                           ;clcd_putch@data stored from wreg
  9367   0001BA  6E0E               	movwf	clcd_putch@data^0,c
  9368   0001BC                     
  9369                           ;clcd.c: 66: void clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 67: {
      +                          ;clcd.c: 68:  clcd_write(addr, 0);
  9370   0001BC  0E00               	movlw	0
  9371   0001BE  6E01               	movwf	clcd_write@control_bit^0,c
  9372   0001C0  500D               	movf	clcd_putch@addr^0,w,c
  9373   0001C2  EC7D  F001         	call	_clcd_write
  9374                           
  9375                           ;clcd.c: 69:  clcd_write(data, 1);
  9376   0001C6  0E01               	movlw	1
  9377   0001C8  6E01               	movwf	clcd_write@control_bit^0,c
  9378   0001CA  500E               	movf	clcd_putch@data^0,w,c
  9379   0001CC  EC7D  F001         	call	_clcd_write
  9380   0001D0  0012               	return		;funcret
  9381   0001D2                     __end_of_clcd_putch:
  9382                           	callstack 0
  9383                           
  9384 ;; *************** function _clcd_print *****************
  9385 ;; Defined at:
  9386 ;;		line 57 in file "clcd.c"
  9387 ;; Parameters:    Size  Location     Type
  9388 ;;  data            2   11[COMRAM] PTR const unsigned char 
  9389 ;;		 -> STR_32(11), STR_31(15), STR_28(12), view_event(15), 
  9390 ;;		 -> STR_27(17), STR_26(10), STR_25(3), STR_24(3), 
  9391 ;;		 -> STR_23(3), STR_22(3), STR_21(3), time(9), 
  9392 ;;		 -> STR_20(9), STR_19(8), STR_18(9), STR_17(13), 
  9393 ;;		 -> STR_16(13), STR_15(15), STR_14(5), STR_13(10), 
  9394 ;;		 -> STR_12(13), STR_11(16), STR_10(15), STR_9(5), 
  9395 ;;		 -> STR_8(15), menu@menu(75), STR_7(17), STR_6(12), 
  9396 ;;		 -> STR_5(14), STR_4(13), STR_3(17), STR_2(10), 
  9397 ;;		 -> STR_1(14), 
  9398 ;;  addr            1   13[COMRAM] unsigned char 
  9399 ;; Auto vars:     Size  Location     Type
  9400 ;;		None
  9401 ;; Return value:  Size  Location     Type
  9402 ;;                  1    wreg      void 
  9403 ;; Registers used:
  9404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9405 ;; Tracked objects:
  9406 ;;		On entry : 0/0
  9407 ;;		On exit  : 0/0
  9408 ;;		Unchanged: 0/0
  9409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9410 ;;      Params:         3       0       0       0       0       0       0
  9411 ;;      Locals:         0       0       0       0       0       0       0
  9412 ;;      Temps:          0       0       0       0       0       0       0
  9413 ;;      Totals:         3       0       0       0       0       0       0
  9414 ;;Total ram usage:        3 bytes
  9415 ;; Hardware stack levels used: 1
  9416 ;; Hardware stack levels required when called: 1
  9417 ;; This function calls:
  9418 ;;		_clcd_write
  9419 ;; This function is called by:
  9420 ;;		_change_pass
  9421 ;;		_dashboard
  9422 ;;		_menu
  9423 ;;		_password
  9424 ;;		_set_time
  9425 ;;		_display_time
  9426 ;;		_view_log
  9427 ;;		_clear_log
  9428 ;;		_download_log
  9429 ;; This function uses a non-reentrant model
  9430 ;;
  9431                           
  9432                           	psect	text45
  9433   000600                     __ptext45:
  9434                           	callstack 0
  9435   000600                     _clcd_print:
  9436                           	callstack 28
  9437   000600                     
  9438                           ;clcd.c: 57: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 58: 
      +                          {;clcd.c: 59:  clcd_write(addr, 0);
  9439   000600  0E00               	movlw	0
  9440   000602  6E01               	movwf	clcd_write@control_bit^0,c
  9441   000604  500E               	movf	clcd_print@addr^0,w,c
  9442   000606  EC7D  F001         	call	_clcd_write
  9443                           
  9444                           ;clcd.c: 60:  while (*data != '\0')
  9445   00060A  EF1D  F003         	goto	l3807
  9446   00060E                     l3803:
  9447                           
  9448                           ;clcd.c: 61:  {;clcd.c: 62:   clcd_write(*data++, 1);
  9449   00060E  0E01               	movlw	1
  9450   000610  6E01               	movwf	clcd_write@control_bit^0,c
  9451   000612  C00C  FFF6         	movff	clcd_print@data,tblptrl
  9452   000616  C00D  FFF7         	movff	clcd_print@data+1,tblptrh
  9453   00061A  6AF8               	clrf	tblptru,c
  9454   00061C  0E05               	movlw	(high __ramtop+-1)
  9455   00061E  64F7               	cpfsgt	tblptrh,c
  9456   000620  D003               	bra	u2037
  9457   000622  0008               	tblrd		*
  9458   000624  50F5               	movf	tablat,w,c
  9459   000626  D005               	bra	u2030
  9460   000628                     u2037:
  9461   000628  CFF6 FFE9          	movff	tblptrl,fsr0l
  9462   00062C  CFF7 FFEA          	movff	tblptrh,fsr0h
  9463   000630  50EF               	movf	indf0,w,c
  9464   000632                     u2030:
  9465   000632  EC7D  F001         	call	_clcd_write
  9466   000636  4A0C               	infsnz	clcd_print@data^0,f,c
  9467   000638  2A0D               	incf	(clcd_print@data+1)^0,f,c
  9468   00063A                     l3807:
  9469                           
  9470                           ;clcd.c: 60:  while (*data != '\0')
  9471   00063A  C00C  FFF6         	movff	clcd_print@data,tblptrl
  9472   00063E  C00D  FFF7         	movff	clcd_print@data+1,tblptrh
  9473   000642  6AF8               	clrf	tblptru,c
  9474   000644  0E05               	movlw	(high __ramtop+-1)
  9475   000646  64F7               	cpfsgt	tblptrh,c
  9476   000648  D003               	bra	u2047
  9477   00064A  0008               	tblrd		*
  9478   00064C  50F5               	movf	tablat,w,c
  9479   00064E  D005               	bra	u2040
  9480   000650                     u2047:
  9481   000650  CFF6 FFE9          	movff	tblptrl,fsr0l
  9482   000654  CFF7 FFEA          	movff	tblptrh,fsr0h
  9483   000658  50EF               	movf	indf0,w,c
  9484   00065A                     u2040:
  9485   00065A  0900               	iorlw	0
  9486   00065C  A4D8               	btfss	status,2,c
  9487   00065E  EF33  F003         	goto	u2051
  9488   000662  EF35  F003         	goto	u2050
  9489   000666                     u2051:
  9490   000666  EF07  F003         	goto	l3803
  9491   00066A                     u2050:
  9492   00066A  0012               	return		;funcret
  9493   00066C                     __end_of_clcd_print:
  9494                           	callstack 0
  9495                           
  9496 ;; *************** function _clcd_write *****************
  9497 ;; Defined at:
  9498 ;;		line 3 in file "clcd.c"
  9499 ;; Parameters:    Size  Location     Type
  9500 ;;  byte            1    wreg     unsigned char 
  9501 ;;  control_bit     1    0[COMRAM] unsigned char 
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;  byte            1    1[COMRAM] unsigned char 
  9504 ;; Return value:  Size  Location     Type
  9505 ;;                  1    wreg      void 
  9506 ;; Registers used:
  9507 ;;		wreg
  9508 ;; Tracked objects:
  9509 ;;		On entry : 0/0
  9510 ;;		On exit  : 0/0
  9511 ;;		Unchanged: 0/0
  9512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9513 ;;      Params:         1       0       0       0       0       0       0
  9514 ;;      Locals:         1       0       0       0       0       0       0
  9515 ;;      Temps:          0       0       0       0       0       0       0
  9516 ;;      Totals:         2       0       0       0       0       0       0
  9517 ;;Total ram usage:        2 bytes
  9518 ;; Hardware stack levels used: 1
  9519 ;; This function calls:
  9520 ;;		Nothing
  9521 ;; This function is called by:
  9522 ;;		_change_pass
  9523 ;;		_init_clcd
  9524 ;;		_clcd_print
  9525 ;;		_clcd_putch
  9526 ;;		_menu
  9527 ;;		_password
  9528 ;;		_set_time
  9529 ;;		_view_log
  9530 ;;		_clear_log
  9531 ;;		_download_log
  9532 ;; This function uses a non-reentrant model
  9533 ;;
  9534                           
  9535                           	psect	text46
  9536   0002FA                     __ptext46:
  9537                           	callstack 0
  9538   0002FA                     _clcd_write:
  9539                           	callstack 29
  9540                           
  9541                           ;incstack = 0
  9542                           ;clcd_write@byte stored from wreg
  9543   0002FA  6E02               	movwf	clcd_write@byte^0,c
  9544   0002FC                     
  9545                           ;clcd.c: 3: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 4: {;
      +                          clcd.c: 5:  RC1 = control_bit;
  9546   0002FC  B001               	btfsc	clcd_write@control_bit^0,0,c
  9547   0002FE  EF83  F001         	goto	u2001
  9548   000302  EF86  F001         	goto	u2000
  9549   000306                     u2001:
  9550   000306  8282               	bsf	3970,1,c	;volatile
  9551   000308  EF87  F001         	goto	u2015
  9552   00030C                     u2000:
  9553   00030C  9282               	bcf	3970,1,c	;volatile
  9554   00030E                     u2015:
  9555   00030E                     
  9556                           ;clcd.c: 6:  PORTD = byte;
  9557   00030E  C002  FF83         	movff	clcd_write@byte,3971	;volatile
  9558   000312                     
  9559                           ;clcd.c: 9:  RC2 = 1;
  9560   000312  8482               	bsf	3970,2,c	;volatile
  9561   000314                     
  9562                           ;clcd.c: 10:  RC2 = 0;
  9563   000314  9482               	bcf	3970,2,c	;volatile
  9564   000316                     
  9565                           ;clcd.c: 12:  TRISD7 = 0xFF;
  9566   000316  8E95               	bsf	3989,7,c	;volatile
  9567   000318                     
  9568                           ;clcd.c: 13:  RC0 = 1;
  9569   000318  8082               	bsf	3970,0,c	;volatile
  9570   00031A                     
  9571                           ;clcd.c: 14:  RC1 = 0;
  9572   00031A  9282               	bcf	3970,1,c	;volatile
  9573   00031C                     l3773:
  9574                           
  9575                           ;clcd.c: 17:  {;clcd.c: 18:   RC2 = 1;
  9576   00031C  8482               	bsf	3970,2,c	;volatile
  9577   00031E                     
  9578                           ;clcd.c: 19:   RC2 = 0;
  9579   00031E  9482               	bcf	3970,2,c	;volatile
  9580   000320                     
  9581                           ;clcd.c: 20:  } while (RD7);
  9582   000320  BE83               	btfsc	3971,7,c	;volatile
  9583   000322  EF95  F001         	goto	u2021
  9584   000326  EF97  F001         	goto	u2020
  9585   00032A                     u2021:
  9586   00032A  EF8E  F001         	goto	l3773
  9587   00032E                     u2020:
  9588   00032E                     
  9589                           ;clcd.c: 22:  RC0 = 0;
  9590   00032E  9082               	bcf	3970,0,c	;volatile
  9591                           
  9592                           ;clcd.c: 23:  TRISD7 = 0x00;
  9593   000330  9E95               	bcf	3989,7,c	;volatile
  9594   000332  0012               	return		;funcret
  9595   000334                     __end_of_clcd_write:
  9596                           	callstack 0
  9597                           
  9598                           	psect	rparam
  9599   000000                     
  9600                           	psect	idloc
  9601                           
  9602                           ;Config register IDLOC0 @ 0x200000
  9603                           ;	unspecified, using default values
  9604   200000                     	org	2097152
  9605   200000  FF                 	db	255
  9606                           
  9607                           ;Config register IDLOC1 @ 0x200001
  9608                           ;	unspecified, using default values
  9609   200001                     	org	2097153
  9610   200001  FF                 	db	255
  9611                           
  9612                           ;Config register IDLOC2 @ 0x200002
  9613                           ;	unspecified, using default values
  9614   200002                     	org	2097154
  9615   200002  FF                 	db	255
  9616                           
  9617                           ;Config register IDLOC3 @ 0x200003
  9618                           ;	unspecified, using default values
  9619   200003                     	org	2097155
  9620   200003  FF                 	db	255
  9621                           
  9622                           ;Config register IDLOC4 @ 0x200004
  9623                           ;	unspecified, using default values
  9624   200004                     	org	2097156
  9625   200004  FF                 	db	255
  9626                           
  9627                           ;Config register IDLOC5 @ 0x200005
  9628                           ;	unspecified, using default values
  9629   200005                     	org	2097157
  9630   200005  FF                 	db	255
  9631                           
  9632                           ;Config register IDLOC6 @ 0x200006
  9633                           ;	unspecified, using default values
  9634   200006                     	org	2097158
  9635   200006  FF                 	db	255
  9636                           
  9637                           ;Config register IDLOC7 @ 0x200007
  9638                           ;	unspecified, using default values
  9639   200007                     	org	2097159
  9640   200007  FF                 	db	255
  9641                           
  9642                           	psect	config
  9643                           
  9644                           ; Padding undefined space
  9645   300000                     	org	3145728
  9646   300000  FF                 	db	255
  9647                           
  9648                           ;Config register CONFIG1H @ 0x300001
  9649                           ;	unspecified, using default values
  9650                           ;	Oscillator Selection bits
  9651                           ;	OSC = 0x7, unprogrammed default
  9652                           ;	Fail-Safe Clock Monitor Enable bit
  9653                           ;	FCMEN = 0x0, unprogrammed default
  9654                           ;	Internal/External Oscillator Switchover bit
  9655                           ;	IESO = 0x0, unprogrammed default
  9656   300001                     	org	3145729
  9657   300001  07                 	db	7
  9658                           
  9659                           ;Config register CONFIG2L @ 0x300002
  9660                           ;	unspecified, using default values
  9661                           ;	Power-up Timer Enable bit
  9662                           ;	PWRT = 0x1, unprogrammed default
  9663                           ;	Brown-out Reset Enable bits
  9664                           ;	BOREN = 0x3, unprogrammed default
  9665                           ;	Brown-out Reset Voltage bits
  9666                           ;	BORV = 0x3, unprogrammed default
  9667   300002                     	org	3145730
  9668   300002  1F                 	db	31
  9669                           
  9670                           ;Config register CONFIG2H @ 0x300003
  9671                           ;	unspecified, using default values
  9672                           ;	Watchdog Timer Enable bit
  9673                           ;	WDT = 0x1, unprogrammed default
  9674                           ;	Watchdog Timer Postscale Select bits
  9675                           ;	WDTPS = 0xF, unprogrammed default
  9676   300003                     	org	3145731
  9677   300003  1F                 	db	31
  9678                           
  9679                           ; Padding undefined space
  9680   300004                     	org	3145732
  9681   300004  FF                 	db	255
  9682                           
  9683                           ;Config register CONFIG3H @ 0x300005
  9684                           ;	unspecified, using default values
  9685                           ;	PORTB A/D Enable bit
  9686                           ;	PBADEN = 0x1, unprogrammed default
  9687                           ;	Low-Power Timer 1 Oscillator Enable bit
  9688                           ;	LPT1OSC = 0x0, unprogrammed default
  9689                           ;	MCLR Pin Enable bit
  9690                           ;	MCLRE = 0x1, unprogrammed default
  9691   300005                     	org	3145733
  9692   300005  82                 	db	130
  9693                           
  9694                           ;Config register CONFIG4L @ 0x300006
  9695                           ;	unspecified, using default values
  9696                           ;	Stack Full/Underflow Reset Enable bit
  9697                           ;	STVREN = 0x1, unprogrammed default
  9698                           ;	Single-Supply ICSP Enable bit
  9699                           ;	LVP = 0x1, unprogrammed default
  9700                           ;	Boot Block Size Select bit
  9701                           ;	BBSIZ = 0x0, unprogrammed default
  9702                           ;	Extended Instruction Set Enable bit
  9703                           ;	XINST = 0x0, unprogrammed default
  9704                           ;	Background Debugger Enable bit
  9705                           ;	DEBUG = 0x1, unprogrammed default
  9706   300006                     	org	3145734
  9707   300006  85                 	db	133
  9708                           
  9709                           ; Padding undefined space
  9710   300007                     	org	3145735
  9711   300007  FF                 	db	255
  9712                           
  9713                           ;Config register CONFIG5L @ 0x300008
  9714                           ;	unspecified, using default values
  9715                           ;	Code Protection bit
  9716                           ;	CP0 = 0x1, unprogrammed default
  9717                           ;	Code Protection bit
  9718                           ;	CP1 = 0x1, unprogrammed default
  9719                           ;	Code Protection bit
  9720                           ;	CP2 = 0x1, unprogrammed default
  9721                           ;	Code Protection bit
  9722                           ;	CP3 = 0x1, unprogrammed default
  9723   300008                     	org	3145736
  9724   300008  0F                 	db	15
  9725                           
  9726                           ;Config register CONFIG5H @ 0x300009
  9727                           ;	unspecified, using default values
  9728                           ;	Boot Block Code Protection bit
  9729                           ;	CPB = 0x1, unprogrammed default
  9730                           ;	Data EEPROM Code Protection bit
  9731                           ;	CPD = 0x1, unprogrammed default
  9732   300009                     	org	3145737
  9733   300009  C0                 	db	192
  9734                           
  9735                           ;Config register CONFIG6L @ 0x30000A
  9736                           ;	unspecified, using default values
  9737                           ;	Write Protection bit
  9738                           ;	WRT0 = 0x1, unprogrammed default
  9739                           ;	Write Protection bit
  9740                           ;	WRT1 = 0x1, unprogrammed default
  9741                           ;	Write Protection bit
  9742                           ;	WRT2 = 0x1, unprogrammed default
  9743                           ;	Write Protection bit
  9744                           ;	WRT3 = 0x1, unprogrammed default
  9745   30000A                     	org	3145738
  9746   30000A  0F                 	db	15
  9747                           
  9748                           ;Config register CONFIG6H @ 0x30000B
  9749                           ;	unspecified, using default values
  9750                           ;	Configuration Register Write Protection bit
  9751                           ;	WRTC = 0x1, unprogrammed default
  9752                           ;	Boot Block Write Protection bit
  9753                           ;	WRTB = 0x1, unprogrammed default
  9754                           ;	Data EEPROM Write Protection bit
  9755                           ;	WRTD = 0x1, unprogrammed default
  9756   30000B                     	org	3145739
  9757   30000B  E0                 	db	224
  9758                           
  9759                           ;Config register CONFIG7L @ 0x30000C
  9760                           ;	unspecified, using default values
  9761                           ;	Table Read Protection bit
  9762                           ;	EBTR0 = 0x1, unprogrammed default
  9763                           ;	Table Read Protection bit
  9764                           ;	EBTR1 = 0x1, unprogrammed default
  9765                           ;	Table Read Protection bit
  9766                           ;	EBTR2 = 0x1, unprogrammed default
  9767                           ;	Table Read Protection bit
  9768                           ;	EBTR3 = 0x1, unprogrammed default
  9769   30000C                     	org	3145740
  9770   30000C  0F                 	db	15
  9771                           
  9772                           ;Config register CONFIG7H @ 0x30000D
  9773                           ;	unspecified, using default values
  9774                           ;	Boot Block Table Read Protection bit
  9775                           ;	EBTRB = 0x1, unprogrammed default
  9776   30000D                     	org	3145741
  9777   30000D  40                 	db	64
  9778                           tosu	equ	0xFFF
  9779                           tosh	equ	0xFFE
  9780                           tosl	equ	0xFFD
  9781                           stkptr	equ	0xFFC
  9782                           pclatu	equ	0xFFB
  9783                           pclath	equ	0xFFA
  9784                           pcl	equ	0xFF9
  9785                           tblptru	equ	0xFF8
  9786                           tblptrh	equ	0xFF7
  9787                           tblptrl	equ	0xFF6
  9788                           tablat	equ	0xFF5
  9789                           prodh	equ	0xFF4
  9790                           prodl	equ	0xFF3
  9791                           indf0	equ	0xFEF
  9792                           postinc0	equ	0xFEE
  9793                           postdec0	equ	0xFED
  9794                           preinc0	equ	0xFEC
  9795                           plusw0	equ	0xFEB
  9796                           fsr0h	equ	0xFEA
  9797                           fsr0l	equ	0xFE9
  9798                           wreg	equ	0xFE8
  9799                           indf1	equ	0xFE7
  9800                           postinc1	equ	0xFE6
  9801                           postdec1	equ	0xFE5
  9802                           preinc1	equ	0xFE4
  9803                           plusw1	equ	0xFE3
  9804                           fsr1h	equ	0xFE2
  9805                           fsr1l	equ	0xFE1
  9806                           bsr	equ	0xFE0
  9807                           indf2	equ	0xFDF
  9808                           postinc2	equ	0xFDE
  9809                           postdec2	equ	0xFDD
  9810                           preinc2	equ	0xFDC
  9811                           plusw2	equ	0xFDB
  9812                           fsr2h	equ	0xFDA
  9813                           fsr2l	equ	0xFD9
  9814                           status	equ	0xFD8

Data Sizes:
    Strings     328
    Constant    0
    Data        101
    BSS         92
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160      0     118
    BANK1           256      0      75
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    puts@data	PTR unsigned char  size(2) Largest target is 19
		 -> STR_30(CODE[3]), STR_29(CODE[19]), view_event(BANK0[15]), 

    long_short_press@t	PTR unsigned char  size(2) Largest target is 1
		 -> main@t(COMRAM[1]), 

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_32(CODE[11]), STR_31(CODE[15]), STR_28(CODE[12]), view_event(BANK0[15]), 
		 -> STR_27(CODE[17]), STR_26(CODE[10]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), time(BANK0[9]), 
		 -> STR_20(CODE[9]), STR_19(CODE[8]), STR_18(CODE[9]), STR_17(CODE[13]), 
		 -> STR_16(CODE[13]), STR_15(CODE[15]), STR_14(CODE[5]), STR_13(CODE[10]), 
		 -> STR_12(CODE[13]), STR_11(CODE[16]), STR_10(CODE[15]), STR_9(CODE[5]), 
		 -> STR_8(CODE[15]), menu@menu(COMRAM[75]), STR_7(CODE[17]), STR_6(CODE[12]), 
		 -> STR_5(CODE[14]), STR_4(CODE[13]), STR_3(CODE[17]), STR_2(CODE[10]), 
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_menu
    _view_log->_clcd_print
    _view_log->_clcd_putch
    _set_time->_store_event
    _password->_clcd_print
    _password->_clcd_putch
    _menu->_clcd_print
    _menu->_clcd_putch
    _init_config->_init_ds1307
    _init_password->_read_external_eeprom
    _init_ds1307->_read_ds1307
    _init_ds1307->_write_ds1307
    _write_ds1307->_i2c_write
    _init_clcd->_clcd_write
    _download_log->_clcd_print
    _read_external_eeprom->_i2c_write
    _puts->_putch
    _dashboard->___fltol
    _store_event->_write_external_eeprom
    ___wmul->___lwmod
    ___lwdiv->___lwmod
    _get_time->_read_ds1307
    _read_ds1307->_i2c_write
    _display_time->_clcd_print
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    _clear_log->_clcd_print
    _change_pass->_write_external_eeprom
    _write_external_eeprom->___lwdiv
    _clcd_putch->___lwdiv
    _clcd_print->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  232790
                                             91 COMRAM     4     4      0
                        _change_pass
                          _clear_log
                          _dashboard
                       _download_log
                        _init_config
                   _long_short_press
                               _menu
                           _password
                      _read_switches
                           _set_time
                        _store_event
                           _view_log
 ---------------------------------------------------------------------------------
 (1) _view_log                                             8     7      1   27746
                                             14 COMRAM     8     7      1
                            ___lwmod
                             ___wmul
                         _clcd_print
                         _clcd_putch
                         _clcd_write
               _read_external_eeprom
 ---------------------------------------------------------------------------------
 (1) _set_time                                             7     6      1   41329
                                             18 COMRAM     7     6      1
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                        _store_event
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (1) _read_switches                                        1     1      0      44
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (1) _password                                            10    10      0   27166
                                             14 COMRAM    10    10      0
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _menu                                                77    76      1   20189
                                             14 COMRAM    77    76      1
                             ___wmul
                         _clcd_print
                         _clcd_putch
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _long_short_press                                     7     5      2     257
                                              0 COMRAM     7     5      2
                           _scan_key
 ---------------------------------------------------------------------------------
 (2) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    3581
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                 _init_matrix_keypad
                      _init_password
                          _init_uart
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_password                                        0     0      0      67
               _read_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     734
                                              3 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (2) _write_ds1307                                         2     1      1     598
                                              1 COMRAM     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            1     1      0    2780
                                              2 COMRAM     1     1      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _download_log                                         8     8      0   21615
                                             14 COMRAM     8     8      0
                            ___lwmod
                             ___wmul
                         _clcd_print
                         _clcd_write
                               _puts
               _read_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _read_external_eeprom                                 2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2     295
                                              1 COMRAM     2     0      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _dashboard                                            3     3      0   47991
                                             49 COMRAM     3     3      0
                            ___fldiv
                            ___fltol
                            ___lwdiv
                            ___lwmod
                           ___xxtofl
                         _clcd_print
                         _clcd_putch
                       _display_time
                           _get_time
                           _read_adc
                        _store_event
 ---------------------------------------------------------------------------------
 (1) _store_event                                          2     2      0   13518
                                             16 COMRAM     2     2      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    2743
                                              5 COMRAM     6     2      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4    7151
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    2594
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _read_adc                                             8     6      2      22
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _get_time                                             0     0      0      67
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (4) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_time                                         0     0      0    8015
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1399
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _clear_log                                            0     0      0   10795
                         _clcd_print
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _change_pass                                          7     7      0   18308
                                             16 COMRAM     7     7      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _write_external_eeprom                                4     3      1     849
                                             12 COMRAM     4     3      1
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                             ___wmul (ARG)
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    6396
                                             12 COMRAM     2     1      1
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    8015
                                             11 COMRAM     3     0      3
                             ___wmul (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_write                                           2     1      1    2780
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _change_pass
     _clcd_print
       ___wmul (ARG)
         ___lwmod (ARG)
       _clcd_write (ARG)
     _clcd_putch
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       _clcd_write (ARG)
     _clcd_write
     _write_external_eeprom
       ___lwdiv (ARG)
       ___lwmod (ARG)
       ___wmul (ARG)
       _i2c_start (ARG)
         _i2c_idle
       _i2c_stop (ARG)
         _i2c_idle
       _i2c_write (ARG)
         _i2c_idle
   _clear_log
     _clcd_print
     _clcd_write
   _dashboard
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___lwdiv
     ___lwmod
     ___xxtofl
     _clcd_print
     _clcd_putch
     _display_time
       _clcd_print
     _get_time
       _read_ds1307
         _i2c_read
           _i2c_no_ack
           _i2c_rx_mode
             _i2c_idle
         _i2c_rep_start
           _i2c_idle
         _i2c_start
         _i2c_stop
         _i2c_write
     _read_adc
     _store_event
       ___lwdiv
       ___lwmod
       ___wmul
       _write_external_eeprom
   _download_log
     ___lwmod
     ___wmul
     _clcd_print
     _clcd_write
     _puts
       _putch
     _read_external_eeprom
       _i2c_read
       _i2c_rep_start
       _i2c_start
       _i2c_stop
       _i2c_write
   _init_config
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
         _i2c_start
         _i2c_stop
         _i2c_write
     _init_i2c
     _init_matrix_keypad
     _init_password
       _read_external_eeprom
     _init_uart
   _long_short_press
     _scan_key
   _menu
     ___wmul
     _clcd_print
     _clcd_putch
     _clcd_write
   _password
     ___lwdiv
     ___lwmod
     _clcd_print
     _clcd_putch
     _clcd_write
   _read_switches
     _scan_key
   _set_time
     ___lwdiv
     ___lwmod
     _clcd_print
     _clcd_putch
     _clcd_write
     _store_event
     _write_ds1307
   _store_event
   _view_log
     ___lwmod
     ___wmul
     _clcd_print
     _clcd_putch
     _clcd_write
     _read_external_eeprom

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      26        0.0%
BITBIGSFRll        281      0       0      24        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      4B       7       29.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      76       5       73.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhhl       27      0       0      17        0.0%
BITBIGSFRlhl         F      0       0      23        0.0%
BITBIGSFRhhhh        E      0       0      16        0.0%
BITBIGSFRlhhhhl      9      0       0      20        0.0%
BITBIGSFRlhhhhh      8      0       0      19        0.0%
BITBIGSFRlhhhhh      7      0       0      18        0.0%
BITBIGSFRlhhl        7      0       0      22        0.0%
BITBIGSFRlhhhl       2      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     120      25        0.0%
DATA                 0      0     120       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Oct 08 16:55:57 2024

                            _L 008D                   ___fldiv@aexp 0027                   ___fldiv@bexp 0026  
                 ___fldiv@sign 001F          _write_external_eeprom 0334                 clcd_print@addr 000E  
               clcd_print@data 000C                             l95 0220                             _GO 7E11  
                           l98 03D0                             _hr 0079            ___wmul@multiplicand 0008  
           _init_matrix_keypad 0172                            l101 03FE                            l211 03B6  
                          l302 01D0                            l290 0332                            l178 23A0  
                          l293 09B0                            l461 0446                            l542 02F8  
                          l464 023E                            l289 032E                            l633 01B8  
                          l299 066A                            l539 0372                            l467 02CE  
                          l731 0906                            l636 0192                            l652 0170  
                          l388 14FC                            l732 0908                            l661 0150  
                          l638 01A0                            l646 0158                            l639 01A2  
                          l655 0184                            l664 0190                            l649 0160  
                          l658 0168                            l827 025C                            l933 0178  
                          l941 0756                            l950 0BBE                            l846 0D54  
                          l951 0B0E                            l943 0754                            _CKE 7E3E  
                          l952 0AE6                            l961 0B50                            l954 0AFA  
                          l964 0B80                            l957 0B28                            l949 0AD2  
                          l966 0B94                            l958 0B64                            l967 0BBC  
                          l959 0B3C                            l968 0BA8                            _RB1 7C09  
                          _RC0 7C10                            _RB2 7C0A                            _RC1 7C11  
                          _RB3 7C0B                            _RC2 7C12                            _RB4 7C0C  
                          _RB5 7C0D                            _RB6 7C0E                            _RB7 7C0F  
                          _RD7 7C1F                            _PEN 7E2A                            _SEN 7E28  
                          _RX9 7D5E                            _SMP 7E3F                            _TX9 7D66  
                ?_display_time 0001                            _min 007D                            _sec 009D  
                          _sel 008B                 clcd_putch@addr 000D                 clcd_putch@data 000E  
                          wreg 0FE8         read_switches@detection 0001            ?_init_matrix_keypad 0001  
                 ___fltol@exp1 0031                           l1125 1FAA                           l1310 10E6  
                         l1054 12D6                           l1055 12E6                           l2104 05FE  
                         l1144 1F62                           l1217 2EB4                           l4001 07B0  
                         l2251 0DB2                           l4011 04A4                           l4003 07BA  
                         l2180 1A50                           l4013 04B4                           l1381 07DC  
                         l4005 07C2                           l4021 0408                           l2254 0F0E  
                         l2094 06DE                           l2191 1B0E                           l2183 1A14  
                         l4015 04C2                           l4007 07D8                           l2087 06D6  
                         l4023 0414                           l4031 01A8                           l2192 1AFC  
                         l1376 04E6                           l5001 07F2                           l4201 19C8  
                         l2265 0EA6                           l4017 04D6                           l4009 0494  
                         l2097 05F6                           l4025 0428                           l4033 01B0  
                         l4113 0172                           l4121 0276                           l4105 0BB6  
                         l4041 0AB8                           l2178 1BF0                           l2258 0E4A  
                         l1474 027E                           l5011 0828                           l5003 07FA  
                         l4211 1A12                           l4203 19D8                           l1483 01D4  
                         l4131 0542                           l4027 0432                           l4019 0400  
                         l4035 01B2                           l4115 0176                           l4123 0278  
                         l4043 0ACC                           l1492 059A                           l5013 083C  
                         l5005 0804                           l2189 1A96                           l4221 1A60  
                         l4213 1A1E                           l4205 19E0                           l4141 1872  
                         l4301 0A56                           l1485 01E2                           l4133 0566  
                         l4037 01B4                           l4029 01A4                           l4125 027A  
                         l4117 025E                           l4109 0BBC                           l4061 0B08  
                         l5101 2B5A                           l5021 27C2                           l1565 27BE  
                         l1582 086A                           l1486 01E8                           l5015 084E  
                         l5007 080E                           l4223 1A76                           l4231 1AA6  
                         l4215 1A3C                           l4207 19F0                           l4151 18A6  
                         l4143 1874                           l4311 0A86                           l4135 056A  
                         l4039 01B6                           l4127 027C                           l4119 0272  
                         l4071 0B36                           l4055 0AF4                           l5111 2BF8  
                         l5103 2B6E                           l5031 281C                           l5023 27D6  
                         l4401 2080                           l5017 0858                           l5009 0816  
                         l4233 1AB4                           l4225 1A7C                           l4217 1A3E  
                         l4209 1A04                           l4161 18D8                           l4145 1884  
                         l4153 18AE                           l4137 1858                           l4313 0A96  
                         l4321 0D6E                           l4129 053E                           l1593 1856  
                         l4065 0B22                           l4049 0AE0                           l5121 2C7C  
                         l5113 2C02                           l5105 2BAE                           l5033 2826  
                         l5025 27F6                           l5041 283A                           l5201 0CA6  
                         l4411 20D8                           l4403 2092                           l5019 0862  
                         l4243 1B1E                           l4251 1B66                           l4235 1AB8  
                         l4227 1A86                           l4219 1A4E                           l4171 190C  
                         l4163 18DA                           l4155 18BE                           l4147 1894  
                         l4139 1864                           l4315 0AA6                           l4307 0A6A  
                         l4331 0DEC                           l4323 0D7C                           l4083 0B5E  
                         l5131 2CFA                           l5123 2C8C                           l5115 2C16  
                         l5107 2BB8                           l5051 2894                           l5043 284E  
                         l5035 282E                           l5027 2800                           l5211 0CF4  
                         l5203 0CBA                           l1596 02A4                           l4501 233C  
                         l4421 211E                           l4413 20E4                           l4405 20A8  
                         l4261 1BD0                           l4253 1B80                           l4245 1B2A  
                         l4237 1AC6                           l4229 1A94                           l4181 1952  
                         l4165 18EA                           l4173 1914                           l4157 18C4  
                         l4149 18A4                           l4309 0A76                           l4341 0E40  
                         l4333 0DF4                           l4325 0DC2                           l4093 0B8E  
                         l4077 0B4A                           l5141 2E0C                           l5133 2D0E  
                         l5125 2CA0                           l5117 2C5A                           l5109 2BD8  
                         l5061 28CE                           l5053 289E                           l5045 286E  
                         l5037 2836                           l5029 2812                           l5221 0D36  
                         l5213 0D08                           l5205 0CCC                           l4503 2340  
                         l4431 2168                           l4423 2130                           l4415 20F6  
                         l4407 20B8                           l4263 1BDE                           l4255 1B96  
                         l4247 1B38                           l4239 1AF4                           l4191 197A  
                         l4183 1956                           l4175 1924                           l4167 18FA  
                         l4159 18CA                           l4351 0EB6                           l4343 0E7C  
                         l4335 0E00                           l4327 0DD8                           l4319 0D5E  
                         l4511 12EA                           l4087 0B7A                           l5143 2E16  
                         l5127 2CC4                           l5135 2D32                           l5119 2C6A  
                         l5071 2992                           l5063 292E                           l5047 2878  
                         l5223 0D4A                           l5215 0D0C                           l5207 0CDA  
                         l3801 0600                           l4505 235C                           l4441 21A8  
                         l4433 2172                           l4425 213E                           l4417 2104  
                         l4409 20C8                           l4265 1BE4                           l4257 1BB0  
                         l4249 1B62                           l4177 193A                           l4169 190A  
                         l4281 09DC                           l4361 0EFE                           l4353 0EBA  
                         l4345 0E88                           l4337 0E32                           l4521 133E  
                         l4513 12FC                           l4601 0906                           l5161 2E98  
                         l5145 2E20                           l5137 2D42                           l5129 2CD6  
                         l5153 2E40                           l5081 2A34                           l5073 29B2  
                         l5065 2936                           l5049 288A                           l5057 28AA  
                         l5217 0D14                           l5209 0CEC                           l3803 060E  
                         l3811 033A                           l4507 238E                           l4451 21FA  
                         l4443 21BE                           l4435 2182                           l4419 2116  
                         l4371 1FF6                           l4267 1BE6                           l4259 1BCC  
                         l4195 198E                           l4179 194A                           l4187 196A  
                         l4291 0A2A                           l4283 0A06                           l4275 09B2  
                         l4355 0EDE                           l4347 0E96                           l4339 0E34  
                         l4515 1310                           l4611 024C                           l4099 0BA2  
                         l5163 2EAA                           l5155 2E52                           l5147 2E2A  
                         l5139 2E02                           l5091 2AC4                           l5075 29D2  
                         l5067 2948                           l5083 2A48                           l5059 28BA  
                         l5219 0D28                           l5171 0BD0                           l3805 0636  
                         l3821 0358                           l3813 0340                           l4509 2398  
                         l4461 2242                           l4453 220C                           l4445 21CE  
                         l4437 218A                           l4429 2154                           l4381 2026  
                         l4373 2000                           l4365 1FAE                           l4197 19A8  
                         l4189 197A                           l4285 0A08                           l1893 0AB6  
                         l4277 09C8                           l4357 0EEE                           l4349 0EB4  
                         l3901 05CC                           l4533 1370                           l4541 13A2  
                         l4517 1320                           l4525 1346                           l4613 0250  
                         l4605 0240                           l4701 1DBE                           l4621 06F2  
                         l5157 2E62                           l5149 2E32                           l5093 2AE4  
                         l5085 2A5A                           l5077 29DC                           l5069 2988  
                         l5173 0BEC                           l5181 0C06                           l5165 0BC0  
                         l3807 063A                           l3751 0192                           l3815 0346  
                         l4471 2288                           l4463 2250                           l4455 221A  
                         l4447 21DE                           l4439 2196                           l4375 200A  
                         l4367 1FC2                           l4383 202A                           l4199 19B8  
                         l4287 0A18                           l4359 0EFC                           l3911 03BA  
                         l3903 05E2                           l4543 13B2                           l4535 1386  
                         l4527 1358                           l4551 13DC                           l4519 1328  
                         l3831 02E6                           l3823 02D2                           l4615 0254  
                         l4607 0244                           l4711 1E02                           l4703 1DD2  
                         l4631 0712                           l5159 2E88                           l5095 2AEE  
                         l5087 2A9A                           l5079 29F0                           l5191 0C5E  
                         l5183 0C1C                           l5175 0BF4                           l5167 0BC4  
                         l3761 030E                           l3817 034C                           l3809 0336  
                         l4473 2290                           l4449 21EE                           l4385 203E  
                         l4377 2012                           l4369 1FE2                           l4297 0A42  
                         l4289 0A1C                           l3753 0162                           l3841 02B2  
                         l3913 03CE                           l3905 05EA                           l4561 1430  
                         l4553 13EC                           l4545 13BC                           l4537 1398  
                         l3833 02F2                           l3825 02D6                           l3921 0374  
                         l4617 0258                           l4609 0248                           l4801 120E  
                         l4721 1E40                           l4713 1E0A                           l4705 1DE2  
                         l4633 0722                           l4641 073C                           l5097 2B02  
                         l5089 2AA4                           l5193 0C68                           l5185 0C30  
                         l5177 0BFA                           l5169 0BC8                           l3771 031A  
                         l3763 0312                           l3819 0350                           l4491 22FC  
                         l4483 22B8                           l4459 2230                           l4467 2266  
                         l4475 229C                           l4387 205E                           l4379 201A  
                         l4299 0A4C                           l3755 0164                           l3843 02B8  
                         l3915 03DE                           l3907 05F0                           l4571 14DA  
                         l4563 143E                           l4555 13F0                           l4547 13D0  
                         l3827 02DC                           l3931 0914                           l3851 0224  
                         l3923 038A                           l4811 1258                           l4803 1216  
                         l4731 1E8C                           l4723 1E50                           l4715 1E14  
                         l4651 1C08                           l4643 074C                           l4635 0732  
                         l4627 06FA                           l4619 06E2                           l5099 2B46  
                         l5195 0C7A                           l5187 0C3C                           l5179 0C00  
                         l3773 031C                           l3765 0314                           l3781 0154  
                         l4493 2318                           l4485 22E2                           l4477 22B0  
                         l4469 227A                           l4389 2072                           l3757 014C  
                         l3845 02BC                           l3837 02A8                           l4573 14E2  
                         l4565 1490                           l4557 13F4                           l3861 01D4  
                         l3829 02E2                           l3909 0204                           l3941 094A  
                         l3933 0916                           l3853 0228                           l3925 03B2  
                         l4581 0872                           l4821 129A                           l4813 1264  
                         l4805 1222                           l4741 1ECE                           l4733 1E9E  
                         l4725 1E60                           l4717 1E18                           l4709 1DF0  
                         l4661 1C62                           l4653 1C1A                           l4629 070A  
                         l4645 0754                           l4901 26F0                           l5197 0C84  
                         l5189 0C4A                           l3775 031E                           l3767 0316  
                         l3759 02FC                           l3919 01BC                           l3783 017C  
                         l3791 016A                           l3847 02C8                           l3839 02AC  
                         l3871 066C                           l4575 14F4                           l4567 14B0  
                         l4559 1412                           l3863 01E4                           l3951 0974  
                         l3943 0952                           l3935 0926                           l3927 090A  
                         l3855 022E                           l4591 08BC                           l4583 087A  
                         l4823 12A4                           l4815 1276                           l4807 1234  
                         l4735 1EA2                           l4727 1E6C                           l4719 1E30  
                         l4671 1CA0                           l4655 1C3A                           l4911 2748  
                         l4903 26F6                           l4831 23A4                           l5199 0C98  
                         l3777 0320                           l3769 0318                           l3785 0180  
                         l4489 22F8                           l3793 016C                           l3881 06A4  
                         l3873 0674                           l3865 0280                           l4569 14D0  
                         l3961 09A8                           l3953 097E                           l3945 095C  
                         l3937 0930                           l3929 090E                           l3857 0234  
                         l4593 08D0                           l4577 086C                           l4825 12AE  
                         l4817 127C                           l4809 1244                           l4761 1F6E  
                         l4729 1E7E                           l4737 1EAE                           l4673 1CAE  
                         l4657 1C4E                           l4681 1CD8                           l4649 1BF4  
                         l4921 2790                           l4913 2750                           l4905 2702  
                         l4841 23FA                           l4833 23B8                           l3779 0152  
                         l3787 015A                           l4499 2320                           l3795 0186  
                         l3891 06D0                           l3883 06AA                           l3875 0686  
                         l3867 029C                           l3971 0F58                           l3963 0F10  
                         l4931 1512                           l3955 0986                           l3947 0962  
                         l3939 0940                           l3859 023A                           l4595 08E2  
                         l4587 088E                           l4579 086C                           l4827 12BA  
                         l4819 128A                           l4771 10FC                           l4763 1F72  
                         l4755 1F16                           l4739 1EC0                           l4747 1EE4  
                         l4691 1D1A                           l4683 1CEA                           l4675 1CC2  
                         l4659 1C58                           l4667 1C6E                           l4923 27A0  
                         l4915 2762                           l4907 2712                           l4851 242E  
                         l4835 23C8                           l4843 23FE                           l3789 015C  
                         l3797 018E                           l3885 06C0                           l3877 068E  
                         l3893 059C                           l3981 1010                           l3973 0F5C  
                         l4941 1532                           l4933 151E                           l3957 0990  
                         l3949 096C                           l4597 08F8                           l4589 08B0  
                         l4829 12CE                           l4781 1180                           l4773 1124  
                         l4765 1F8E                           l4757 1F40                           l4749 1EFA  
                         l4693 1D3A                           l4685 1CFA                           l4677 1CCA  
                         l4669 1C80                           l4925 27AA                           l4917 2772  
                         l4909 2724                           l4861 246C                           l4853 2440  
                         l4845 2410                           l4837 23DC                           l3991 0758  
                         l3887 06C8                           l3879 0696                           l3895 05AE  
                         l3983 105A                           l3975 0F78                           l4951 15CE  
                         l4943 1574                           l4935 152A                           l3959 099E  
                         l4599 08F8                           l4791 11D8                           l4783 1192  
                         l4775 1154                           l4767 1FA0                           l4759 1F5A  
                         l4695 1D5A                           l4927 27B4                           l4919 2786  
                         l4871 24E0                           l4855 244A                           l4847 2420  
                         l4839 23EC                           l3993 0776                           l3889 06CA  
                         l3897 05B6                           l3985 10A8                           l3977 0FC0  
                         l3969 0F18                           l4961 1688                           l4953 15D2  
                         l4945 159E                           l4929 14FE                           l4793 11DC  
                         l4785 11A2                           l4777 1168                           l4769 10EA  
                         l4697 1D8E                           l4689 1D08                           l4881 2556  
                         l4873 24E4                           l4857 2454                           _ADFM 7E07  
                         l3995 0784                           l3899 05BE                           l3987 10CA  
                         l3979 0FC4                           l4971 173C                           l4963 16B6  
                         l4955 1614                           l4947 15A2                           l4787 11B6  
                         l4795 11EA                           l4779 1176                           l4699 1DAE  
                         l4891 25FC                           l4883 2584                           l4875 2500  
                         l4867 2474                           l4859 245C                           l3997 079A  
                         l3989 10E2                           l4981 17CC                           l4973 1740  
                         l4965 16BA                           l4957 1642                           l4949 15BE  
                         l4797 11FA                           l4789 11C2                           l4893 2610  
                         l4885 2588                           l4877 2510                           l4869 24B6  
                         l3999 07AC                           l4991 1816                           l4975 17AE  
                         l4967 16CE                           l4959 1646                           l4983 17D0  
                         l4799 1204                           l4895 2652                           l4887 25CA  
                         l4879 2514                           l4993 183A                           l4985 17E8  
                         l4977 17B4                           l4969 1710                           l4897 267E  
                         l4889 25F8                           l4995 1844                           l4987 17F8  
                         l4979 17C0                           l4899 2682                           l4997 184E  
                         l4989 1802                           l4999 07DE                           _ADON 7E10  
                         STR_1 2F57                           STR_2 2FD0                           STR_3 2EEC  
                         STR_4 2F8C                           STR_5 2F49                           STR_6 2FA5  
                         STR_7 2EDB                           STR_8 2F3A                           STR_9 2FEC  
                         _BRGH 7D62                           _CREN 7D5C                           u2000 030C  
                         u2001 0306                           u2020 032E                           u2100 06C0  
                         u2021 032A                           u2101 06BC                           u2030 0632  
                         u2110 05AE                           u2015 030E                           u2111 05AA  
                         u2040 065A                           u2200 04C2                           u2120 05CC  
                         u3000 136C                           u2201 04BE                           u2121 05C8  
                         u3001 1368                           u2050 066A                           u2130 05E2  
                         u3010 1386                           u2210 0ACC                           u2051 0666  
                         u2131 05DE                           u3011 1382                           u2211 0AC8  
                         u2060 0372                           u2140 03DE                           u3020 1398  
                         u2300 0B8E                           u2220 0AE0                           u3100 08F8  
                         u2037 0628                           u2061 036E                           u2141 03DA  
                         u3021 1394                           u2301 0B8A                           u2221 0ADC  
                         u3101 08F4                           u3030 13B2                           u2070 01E2  
                         u2150 038A                           u2310 0BA2                           u2230 0AF4  
                         u3110 06F2                           u2047 0650                           u3031 13AE  
                         u2071 01DE                           u2151 0386                           u2311 0B9E  
                         u2231 0AF0                           u3111 06EE                           u2400 18EA  
                         u2080 0686                           u2160 0F78                           u3040 13D0  
                         u2320 0BB6                           u2240 0B08                           u3200 1CC2  
                         u3120 070A                           u2401 18E6                           u2081 0682  
                         u2161 0F74                           u3041 13CC                           u2321 0BB2  
                         u2241 0B04                           u3201 1CBE                           u3121 0706  
                         u2410 18FA                           u2090 06A4                           u2170 10E2  
                         u3050 14F4                           u2330 0562                           u2250 0B22  
                         u3210 1CEA                           u3130 0722                           u2411 18F6  
                         u2091 06A0                           u2171 10DE                           u3051 14F0  
                         u2251 0B1E                           u3211 1CE6                           u3131 071E  
                         u2500 1AB4                           u2420 193A                           u2180 0784  
                         u2340 058A                           u2260 0B36                           u3060 088A  
                         u3300 1F40                           u3220 1D1A                           u3140 0732  
                         u2501 1AB0                           u2421 1936                           u2181 0780  
                         u2261 0B32                           u3061 0886                           u3301 1F3C  
                         u3221 1D16                           u3141 072E                           u2510 1AC6  
                         u2430 197A                           u2190 04B4                           u2350 059A  
                         u2270 0B4A                           u3070 08B0                           u3310 1F5A  
                         u3230 1DD2                           u3150 074C                           u2511 1AC2  
                         u2431 1976                           u2191 04B0                           u2351 0596  
                         u4007 0980                           u2271 0B46                           u3071 08AC  
                         u3311 1F56                           u3231 1DCE                           u3151 0748  
                         u2520 1AF4                           u2440 19F0                           u2360 1872  
                         u2600 09FC                           u2280 0B5E                           u3080 08D0  
                         u3400 1234                           u3320 1F8E                           u3240 1E02  
                         u3160 1C08                           u2521 1AF0                           u2441 19EC  
                         u2361 186E                           u2337 0558                           u4017 0996  
                         u2281 0B5A                           u3081 08CC                           u3401 1230  
                         u3321 1F8A                           u3241 1DFE                           u3161 1C04  
                         u2530 1B0A                           u2450 1A12                           u2370 1884  
                         u2610 0A2A                           u2290 0B7A                           u3090 08E2  
                         u3410 1244                           u3250 1E30                           u3170 1C1A  
                         u2531 1B06                           u2451 1A0E                           u2371 1880  
                         u2611 0A26                           u2347 0580                           u4027 09AA  
                         u2291 0B76                           u3091 08DE                           u3411 1240  
                         u3331 10F4                           u3251 1E2C                           u3171 1C16  
                         u2540 1B1E                           u2460 1A3C                           u2380 1894  
                         u2620 0A3E                           u2700 0E78                           u3420 1258  
                         u3340 1168                           u3260 1E50                           u3180 1C4E  
                         u3500 2500                           u2541 1B1A                           u2461 1A38  
                         u2381 1890                           u2621 0A3A                           u2605 09F2  
                         u2701 0E74                           u3421 1254                           u3341 1164  
                         u3261 1E4C                           u3181 1C4A                           u3501 24FC  
                         u2550 1B38                           u2470 1A60                           u2390 18D8  
                         u2630 0A66                           u2710 0E96                           u3430 1276  
                         u3350 1192                           u3270 1E7E                           u3190 1C80  
                         u3510 2724                           u2551 1B34                           u2471 1A5C  
                         u2391 18D4                           u2631 0A62                           u2711 0E92  
                         u3431 1272                           u3351 118E                           u3271 1E7A  
                         u3191 1C7C                           u3511 2720                           u2800 2092  
                         u2560 1B80                           u2480 1A76                           u2640 0A86  
                         u2720 0EA6                           u3600 1816                           u3440 129A  
                         u3360 11A2                           u3280 1EC0                           u3520 2748  
                         u2801 208E                           u2561 1B7C                           u2481 1A72  
                         u2641 0A82                           u2721 0EA2                           u3601 1812  
                         u3441 1296                           u3361 119E                           u3281 1EBC  
                         u3521 2744                           u2810 20A8                           u3610 07F2  
                         u2570 1BB0                           u2490 1A94                           u2650 0A96  
                         u2730 0EB4                           u3450 12CE                           u3370 11B6  
                         u3290 1EFA                           u3530 2762          ?_read_external_eeprom 0001  
                         u2811 20A4                           u3611 07EE                           u2571 1BAC  
                         u2491 1A90                           u2651 0A92                           u2731 0EB0  
                         u3451 12CA                           u3371 11B2                           u3291 1EF6  
                         u3531 275E                           u2900 2242                           u2820 20C8  
                         u3620 0828                           u2580 1BDE                           u2740 0EEE  
                         u2660 0D6E                           u3380 11D8                           u3700 29F0  
                         u3540 2772                           u3460 23B8                           u2901 223E  
                         u2821 20C4                           u3621 0824                           u2581 1BDA  
                         u2741 0EEA                           u2661 0D6A                           u3381 11D4  
                         u3701 29EC                           u3541 276E                           u3461 23B4  
                         u2910 227A                           u2830 20F6                           u3630 084E  
                         u2590 09C8                           u2750 0EFC                           u2670 0D7C  
                         u3390 11FA                           u3710 2A5A                           u3550 2786  
                         u3470 23DC                           u2911 2276                           u2831 20F2  
                         u3631 084A                           u2591 09C4                           u2751 0EF8  
                         u2671 0D78                           u3391 11F6                           u3711 2A56  
                         u3551 2782                           u3471 23D8                           u2920 22B0  
                         u2840 2130                           u2760 1FC2                           u2680 0DD8  
                         u3800 2D42                           u3720 2B02                           u3640 27D6  
                         u3560 27A0                           u3480 2410                           u2921 22AC  
                         u2841 212C                           u2761 1FBE                           u2681 0DD4  
                         u3801 2D3E                           u3721 2AFE                           u3641 27D2  
                         u3561 279C                           u3481 240C                           u2930 22E2  
                         u2850 2168                           u2770 1FF6                           u2690 0E2E  
                         u3570 1512                           u3810 2E52                           u3730 2B6E  
                         u3650 2812                           u3490 2440                           u2931 22DE  
                         u2851 2164                           u2771 1FF2                           u2691 0E2A  
                         u3571 150E                           u3811 2E4E                           u3731 2B6A  
                         u3651 280E                           u3491 243C                           u2940 2318  
                         u2860 21A8                           u2780 203E                           u3580 15BE  
                         u3820 2E62                           u3740 2C16                           u3660 284E  
                         u3900 0CBA                           u2941 2314                           u2861 21A4  
                         u2781 203A                           u3581 15BA                           u3821 2E5E  
                         u3741 2C12                           u3661 284A                           u3901 0CB6  
                         u1990 01A0                           u2950 235C                           u2870 21BE  
                         u2790 2072                           u3590 17E8                           u3830 2E98  
                         u3750 2C7C                           u3670 288A                           u3910 0CCC  
                         u1991 019C                           u2951 2358                           u2871 21BA  
                         u2791 206E                           u3591 17E4                           u3831 2E94  
                         u3751 2C78                           u3671 2886                           u3911 0CC8  
                         u2880 21DE                           u2960 12FC                           u3760 2C8C  
                         u3680 28CE                           u3920 0CEC                           u3840 0BEC  
                         u2881 21DA                           u2961 12F8                           u3761 2C88  
                         u3681 28CA                           u3921 0CE8                           u3841 0BE8  
                         u2890 220C                           u2970 1310                           u3770 2CA0  
                         u3690 2948                           u3930 0D08                           u3850 0C1C  
                         u2891 2208                           u2971 130C                           u3771 2C9C  
                         u3691 2944                           u3931 0D04                           u3851 0C18  
                         _RCIE 7CED                           u2980 133E                           u3780 2CD6  
                         u3940 0D28                           u3860 0C30                           _RCEN 7E2B  
                         _RCIF 7CF5                           u2981 133A                           u3781 2CD2  
                         u3941 0D24                           u3861 0C2C                           u2990 1358  
                         u3790 2D0E                           u3950 0D4A                           u3870 0C5E  
                         u2991 1354                           u3791 2D0A                           u3951 0D46  
                         u3871 0C5A                           u3880 0C7A                           u3881 0C76  
                         u3890 0C98                           u3891 0C94                           u3967 091C  
                         u3977 0936                           u3987 094C                           u3997 096E  
                         _RBPU 7F8F                           _SPEN 7D5F                           _RSEN 7E29  
                         _TXIE 7CEC                           _TXEN 7D65                           _TXIF 7CF4  
                         _SYNC 7D64                           _main 0BC0                           _menu 10E8  
                         _secs 007B                           _time 00B3                           fsr0h 0FEA  
                         indf0 0FEF                           fsr2h 0FDA                           fsr0l 0FE9  
                         indf1 0FE7                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           _puts 053E                           prodh 0FF4  
                         prodl 0FF3                           start 0000                ___fldiv@new_exp 0020  
         ??_init_matrix_keypad 0001                   ___param_bank 0000                 clcd_write@byte 0002  
                  _store_event 0F10                  _i2c_rep_start 016A                  ??_i2c_rx_mode 0001  
                 ?_init_ds1307 0001                  ___fltol@sign1 0030                          _ADCS0 7E00  
                        _ADCS1 7E01                          _ADCS2 7E02                          ?_main 0001  
                 ?_read_ds1307 0001                          _ACKEN 7E2C                          _ACKDT 7E2D  
               ??_display_time 000F                          ?_menu 000F                          _BCLIF 7D0B  
              __end_of___fldiv 1BF2                          _ACQT0 7E03                          _ACQT1 7E04  
                        _ACQT2 7E05                          STR_10 2F2B                          STR_11 2EFD  
                        STR_20 2FDA                          STR_12 2F7F                          STR_21 2FFC  
                        STR_13 2FC6                          STR_30 2EC7                          STR_22 2FFC  
                        STR_14 2FF1                          STR_23 2FFC                          STR_15 2F1C  
                        STR_31 2F0D                          STR_24 2FF9                          STR_32 2FB1  
                        STR_16 2F65                          _BRG16 7DC3                          STR_25 2FF6  
                        STR_17 2F72                          STR_18 2FE3                          STR_26 2FBC  
                        STR_19 2EF5                          STR_27 2ECA                          STR_28 2F99  
                        STR_29 2EB7                __end_of___fltol 0AB8                          ?_puts 0002  
                        _PCFG0 7E08                          _PCFG1 7E09                          _PCFG2 7E0A  
                        _PCFG3 7E0B                __end_of___lwdiv 06E0                __end_of___lwmod 0600  
                 ?_init_config 0001                          _VCFG0 7E0C                          _VCFG1 7E0D  
                        _RCREG 0FAE                          _SPBRG 0FAF                          _PORTD 0F83  
                        _TRISB 0F93                          _TRISC 0F94                          _TRISD 0F95  
                        _SSPIF 7CF3                          _TXREG 0FAD      write_external_eeprom@data 000D  
                        _blink 007F                          _field 0081                          _speed 0099  
                        _putch 01D2                          main@t 005E                          menu@t 000F  
                        tablat 0FF5                          plusw1 0FE3                          plusw2 0FDB  
                        status 0FD8               init_ds1307@dummy 0004                     _i2c_no_ack 014C  
              __initialization 04E8                 ?_i2c_rep_start 0001         ?_write_external_eeprom 000D  
                 __end_of_main 0D5C                   __end_of_menu 12E8                   __end_of_puts 059C  
             __end_of_i2c_idle 01A4               __end_of_i2c_read 0192               __end_of_i2c_stop 0162  
                ?_download_log 0001                         ??_main 005C                         ??_menu 0010  
                       ??_puts 0004                  __activetblptr 0002            __end_of_i2c_rx_mode 016A  
                       _ADCON0 0FC2               read_switches@key 00A3         ??_read_external_eeprom 0002  
                       _ADRESH 0FC4                         _ADRESL 0FC3                         ?_putch 0001  
        change_pass@c_password 0060                   _write_ds1307 0222                         _SSPADD 0FC8  
                       _TRISC3 7CA3                         _TRISC4 7CA4                         _TRISC6 7CA6  
                       _TRISC7 7CA7                         _TRISD7 7CAF                         _SSPBUF 0FC9  
             __end_of___xxtofl 0F10               __end_of_get_time 07DE                         ___wmul 0280  
              set_time@min_reg 0017                      ??___fldiv 0017                set_time@tc_flag 006F  
                    ??___fltol 002C                set_time@sec_reg 0018                      ??___lwdiv 000A  
                    ??___lwmod 0005                         _main_f 00A1               __end_of_init_i2c 01BA  
                       _p_flag 0085               __end_of_init_adc 0222                         _events 00BC  
                       _menu_f 009F               __end_of_read_adc 0400                         clear_0 052E  
               ??_download_log 000F                         isa$std 0001               __end_of_scan_key 0BC0  
             __end_of_password 1FAC               __end_of_set_time 2EB6                   __mediumconst 2EB6  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
             __end_of_view_log 27C0                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     __accesstop 0060        __end_of__initialization 0534  
         __end_of_display_time 04E8                  ___rparam_used 0001                     ___fltol@f1 0028  
              ??_i2c_rep_start 0001                    ?_i2c_no_ack 0001                 __pcstackCOMRAM 0001  
                 __pidataBANK0 01EA                   __pidataBANK1 0449          change_pass@n_password 0065  
                  _i2c_rx_mode 0162                  __end_of_putch 01EA              __end_of_i2c_start 015A  
            __end_of_i2c_write 0186                        ??_putch 0001                     __pbssBANK0 0060  
       write_external_eeprom@i 000E                      ?_i2c_idle 0001                      ?_i2c_read 0001  
                    ?_i2c_stop 0001                  _init_password 0374                     _clcd_print 0600  
                   _clcd_putch 01BA                     _clcd_write 02FA   write_external_eeprom@address 0010  
                 ?_store_event 0001                read_ds1307@data 0003                        ?___wmul 0006  
             _long_short_press 086C              read_switches@once 00D5                        _ACKSTAT 7E2E  
                    ?___xxtofl 0001                    password@key 0016                        _SSPCON1 0FC6  
                    ?_get_time 0001                  _read_switches 06E0                     ??_i2c_idle 0001  
                   ??_i2c_read 0001              __end_of_dashboard 14FE                 ?_init_password 0001  
                   ??_i2c_stop 0001                      ?_init_i2c 0001           __end_of_download_log 1858  
                    ?_init_adc 0001                      ?_read_adc 0001              __end_of_clear_log 086C  
                    ?_scan_key 0001        ??_write_external_eeprom 000E                     _m_password 00CE  
                      __Hparam 0000                      ?_password 0001                        __Lparam 0000  
                    ?_set_time 0013                        ___fldiv 1858                      ?_view_log 000F  
                      ___fltol 09B2                        ___lwdiv 066C                   store_event@i 0011  
                      ___lwmod 059C                        __pcinit 04E8                        __ramtop 0600  
                      __ptext0 0BC0                        __ptext1 23A2                        __ptext2 27C0  
                      __ptext3 06E0                        __ptext4 1BF2                        __ptext5 10E8  
                      __ptext6 086C                        __ptext7 0AB8                        __ptext8 0240  
                      __ptext9 025E                        _in_flag 0083              __end_of_init_clcd 09B2  
                   ??___xxtofl 0005              __end_of_init_uart 0280                  ??_change_pass 0011  
                   _login_flag 008F                        _timeout 0097                     _pass_index 0093  
                      _success 0091                 ?_read_switches 0001                        main@key 005F  
                   ??_get_time 0004           end_of_initialization 0534                        menu@key 005B  
                  set_time@key 0019                     ??_init_i2c 0001                     ??_init_adc 0001  
                __Lmediumconst 2EB6                     ??_read_adc 0003                     ??_scan_key 0001  
                  ?_clcd_print 000C                    ?_clcd_putch 000D                    ?_clcd_write 0001  
                   ??_password 000F                     ??_set_time 0014                        postdec1 0FE5  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
                   ??_view_log 0010                read_adc@channel 0008        change_pass@success_flag 0075  
                 _display_time 0494                  i2c_write@data 0001                     _view_index 0077  
                   _view_event 00A4                  ___xxtofl@sign 0009                    ___fldiv@grs 0022  
                  ___fldiv@rem 001B                ??_init_password 0004            __end_of_change_pass 23A2  
     read_external_eeprom@data 0003                   ??_i2c_no_ack 0001                   ?_i2c_rx_mode 0001  
                   menu@F10538 0100                 __end_of___wmul 02A6                    view_log@key 0012  
          start_initialization 04E8               change_pass@j_144 0016                ??_read_switches 0001  
           password@e_password 0011                      _i2c_start 0152                      _i2c_write 017A  
           __end_of_i2c_no_ack 0152       __end_of_long_short_press 090A          __end_of_i2c_rep_start 0172  
               set_time@hr_reg 0016                       ??___wmul 000A                  ??_init_ds1307 0004  
                  __pdataBANK0 00BC                    __pdataBANK1 0100                  ??_read_ds1307 0002  
                 _download_log 14FE                  ??_init_config 0005                      ___fldiv@a 0013  
                    ___fldiv@b 000F                    _change_pass 1FAC                     ?_i2c_start 0001  
                   ?_i2c_write 0001                 change_pass@key 0013                   change_pass@j 0014  
                    _dashboard 12E8               ___lwdiv@dividend 0006                      _clear_dis 0095  
__end_of_write_external_eeprom 0374                      _clear_log 07DE                  __pmediumconst 2EB6  
                     ?___fldiv 000F                       ?___fltol 0028             read_ds1307@address 0002  
                     ?___lwdiv 0006                      _clock_reg 006A                       ?___lwmod 0001  
            long_short_press@l 0006              long_short_press@t 0001            __end_of_init_ds1307 0448  
          __end_of_read_ds1307 02D0               ___lwdiv@quotient 000A                      _init_clcd 090A  
          __end_of_init_config 025E                      _init_uart 025E                      _log_count 0087  
                    _log_index 0089                  ?_write_ds1307 0002                 ___wmul@product 000A  
  read_external_eeprom@address 0002                   ??_clcd_print 000F                   ??_clcd_putch 000E  
   __end_of_init_matrix_keypad 017A                   ??_clcd_write 0002                     ?_dashboard 0001  
                   ?_clear_log 0001            long_short_press@key 0005                   dashboard@key 0034  
                download_log@i 0015                  download_log@j 0013          clcd_write@control_bit 0001  
            ___wmul@multiplier 0006                    ??_i2c_start 0001             __end_of_clcd_print 066C  
                  ??_i2c_write 0001             __end_of_clcd_putch 01D2             __end_of_clcd_write 0334  
                   ?_init_clcd 0001                     ?_init_uart 0001                      copy_data0 04FC  
                    copy_data1 051C                 ??_write_ds1307 0003                       _i2c_idle 0192  
                     _i2c_read 0186                       _i2c_stop 015A                       __Hrparam 0000  
                     __Lrparam 0000   __end_of_read_external_eeprom 02FA                    _init_ds1307 0400  
                  _event_index 009B              _download_log$1547 0011                    _read_ds1307 02A6  
                  _init_config 0240                       ___xxtofl 0D5C            write_ds1307@address 0003  
              ___lwdiv@divisor 0008                ___lwdiv@counter 000C                       __ptext10 0374  
                     __ptext11 0172                       __ptext20 01D2                       __ptext12 01A4  
                     __ptext21 12E8                       __ptext13 0400                       __ptext30 0186  
                     __ptext22 0F10                       __ptext14 0222                       __ptext31 0162  
                     __ptext23 0280                       __ptext15 090A                       __ptext40 017A  
                     __ptext32 014C                       __ptext24 059C                       __ptext16 0204  
                     __ptext41 015A                       __ptext33 0494                       __ptext25 066C  
                     __ptext17 14FE                       __ptext42 0152                       __ptext34 0D5C  
                     __ptext26 03B8                       __ptext18 02D0                       __ptext43 0192  
                     __ptext35 09B2                       __ptext27 0758                       __ptext19 053E  
                     __ptext44 01BA                       __ptext36 1858                       __ptext28 02A6  
                     __ptext45 0600                       __ptext37 07DE                       __ptext29 016A  
                     __ptext46 02FA                       __ptext38 1FAC                       __ptext39 0334  
                     _get_time 0758                      password@j 0017              ?_long_short_press 0001  
                     _attempts 00D3          __end_of_init_password 03B8                       _init_i2c 01A4  
                     _init_adc 0204             ??_long_short_press 0003                       _read_adc 03B8  
                     _scan_key 0AB8                    ??_dashboard 0032                      set_time@t 0013  
                     _password 1BF2                    ??_clear_log 000F                  ??_store_event 0011  
                     _set_time 27C0                       isa$xinst 0000                       _view_log 23A2  
             dashboard@adc_val 0032                view_log@vl_flag 006D                       main@wait 005C  
                    view_log@i 0015                      view_log@t 000F                      putch@data 0001  
                 ?_change_pass 0001                       menu@menu 0010                    ??_init_clcd 0003  
        __end_of_read_switches 0758                    ??_init_uart 0001               ___lwmod@dividend 0001  
              dashboard@c_flag 0073           __end_of_write_ds1307 0240                       puts@data 0002  
          __end_of_store_event 10E8                  _view_log$1546 0013                password@pa_flag 0071  
              ___lwmod@divisor 0003                ___lwmod@counter 0005               write_ds1307@data 0002  
         _read_external_eeprom 02D0  
